Directory: worker-example

Directory Structure:
```
.
├── .gitignore
├── .yarnrc.yml
├── LICENSE
├── README.md
├── dist
│   ├── dist/index.d.ts
│   ├── dist/index.js
│   ├── dist/jest-config.d.ts
│   ├── dist/jest-config.js
│   ├── dist/package.json
│   ├── dist/src
│   │   ├── dist/src/contract.d.ts
│   │   ├── dist/src/contract.js
│   │   ├── dist/src/worker.d.ts
│   │   └── dist/src/worker.js
│   ├── dist/tests
│   │   ├── dist/tests/config.d.ts
│   │   ├── dist/tests/config.js
│   │   ├── dist/tests/contract.test.d.ts
│   │   └── dist/tests/contract.test.js
│   └── dist/tsconfig.tsbuildinfo
├── env.example.json
├── index.ts
├── jest-config.ts
├── package.json
├── src
│   ├── src/contract.ts
│   └── src/worker.ts
├── tests
│   ├── tests/config.ts
│   └── tests/contract.test.ts
├── tsconfig.json
└── yarn.lock
```

Contents of LICENSE:
```
                                 Apache License
                           Version 2.0, January 2004
                        http://www.apache.org/licenses/

   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION

   1. Definitions.

      "License" shall mean the terms and conditions for use, reproduction,
      and distribution as defined by Sections 1 through 9 of this document.

      "Licensor" shall mean the copyright owner or entity authorized by
      the copyright owner that is granting the License.

      "Legal Entity" shall mean the union of the acting entity and all
      other entities that control, are controlled by, or are under common
      control with that entity. For the purposes of this definition,
      "control" means (i) the power, direct or indirect, to cause the
      direction or management of such entity, whether by contract or
      otherwise, or (ii) ownership of fifty percent (50%) or more of the
      outstanding shares, or (iii) beneficial ownership of such entity.

      "You" (or "Your") shall mean an individual or Legal Entity
      exercising permissions granted by this License.

      "Source" form shall mean the preferred form for making modifications,
      including but not limited to software source code, documentation
      source, and configuration files.

      "Object" form shall mean any form resulting from mechanical
      transformation or translation of a Source form, including but
      not limited to compiled object code, generated documentation,
      and conversions to other media types.

      "Work" shall mean the work of authorship, whether in Source or
      Object form, made available under the License, as indicated by a
      copyright notice that is included in or attached to the work
      (an example is provided in the Appendix below).

      "Derivative Works" shall mean any work, whether in Source or Object
      form, that is based on (or derived from) the Work and for which the
      editorial revisions, annotations, elaborations, or other modifications
      represent, as a whole, an original work of authorship. For the purposes
      of this License, Derivative Works shall not include works that remain
      separable from, or merely link (or bind by name) to the interfaces of,
      the Work and Derivative Works thereof.

      "Contribution" shall mean any work of authorship, including
      the original version of the Work and any modifications or additions
      to that Work or Derivative Works thereof, that is intentionally
      submitted to Licensor for inclusion in the Work by the copyright owner
      or by an individual or Legal Entity authorized to submit on behalf of
      the copyright owner. For the purposes of this definition, "submitted"
      means any form of electronic, verbal, or written communication sent
      to the Licensor or its representatives, including but not limited to
      communication on electronic mailing lists, source code control systems,
      and issue tracking systems that are managed by, or on behalf of, the
      Licensor for the purpose of discussing and improving the Work, but
      excluding communication that is conspicuously marked or otherwise
      designated in writing by the copyright owner as "Not a Contribution."

      "Contributor" shall mean Licensor and any individual or Legal Entity
      on behalf of whom a Contribution has been received by Licensor and
      subsequently incorporated within the Work.

   2. Grant of Copyright License. Subject to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
      copyright license to reproduce, prepare Derivative Works of,
      publicly display, publicly perform, sublicense, and distribute the
      Work and such Derivative Works in Source or Object form.

   3. Grant of Patent License. Subject to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
      (except as stated in this section) patent license to make, have made,
      use, offer to sell, sell, import, and otherwise transfer the Work,
      where such license applies only to those patent claims licensable
      by such Contributor that are necessarily infringed by their
      Contribution(s) alone or by combination of their Contribution(s)
      with the Work to which such Contribution(s) was submitted. If You
      institute patent litigation against any entity (including a
      cross-claim or counterclaim in a lawsuit) alleging that the Work
      or a Contribution incorporated within the Work constitutes direct
      or contributory patent infringement, then any patent licenses
      granted to You under this License for that Work shall terminate
      as of the date such litigation is filed.

   4. Redistribution. You may reproduce and distribute copies of the
      Work or Derivative Works thereof in any medium, with or without
      modifications, and in Source or Object form, provided that You
      meet the following conditions:

      (a) You must give any other recipients of the Work or
          Derivative Works a copy of this License; and

      (b) You must cause any modified files to carry prominent notices
          stating that You changed the files; and

      (c) You must retain, in the Source form of any Derivative Works
          that You distribute, all copyright, patent, trademark, and
          attribution notices from the Source form of the Work,
          excluding those notices that do not pertain to any part of
          the Derivative Works; and

      (d) If the Work includes a "NOTICE" text file as part of its
          distribution, then any Derivative Works that You distribute must
          include a readable copy of the attribution notices contained
          within such NOTICE file, excluding those notices that do not
          pertain to any part of the Derivative Works, in at least one
          of the following places: within a NOTICE text file distributed
          as part of the Derivative Works; within the Source form or
          documentation, if provided along with the Derivative Works; or,
          within a display generated by the Derivative Works, if and
          wherever such third-party notices normally appear. The contents
          of the NOTICE file are for informational purposes only and
          do not modify the License. You may add Your own attribution
          notices within Derivative Works that You distribute, alongside
          or as an addendum to the NOTICE text from the Work, provided
          that such additional attribution notices cannot be construed
          as modifying the License.

      You may add Your own copyright statement to Your modifications and
      may provide additional or different license terms and conditions
      for use, reproduction, or distribution of Your modifications, or
      for any such Derivative Works as a whole, provided Your use,
      reproduction, and distribution of the Work otherwise complies with
      the conditions stated in this License.

   5. Submission of Contributions. Unless You explicitly state otherwise,
      any Contribution intentionally submitted for inclusion in the Work
      by You to the Licensor shall be under the terms and conditions of
      this License, without any additional terms or conditions.
      Notwithstanding the above, nothing herein shall supersede or modify
      the terms of any separate license agreement you may have executed
      with Licensor regarding such Contributions.

   6. Trademarks. This License does not grant permission to use the trade
      names, trademarks, service marks, or product names of the Licensor,
      except as required for reasonable and customary use in describing the
      origin of the Work and reproducing the content of the NOTICE file.

   7. Disclaimer of Warranty. Unless required by applicable law or
      agreed to in writing, Licensor provides the Work (and each
      Contributor provides its Contributions) on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
      implied, including, without limitation, any warranties or conditions
      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
      PARTICULAR PURPOSE. You are solely responsible for determining the
      appropriateness of using or redistributing the Work and assume any
      risks associated with Your exercise of permissions under this License.

   8. Limitation of Liability. In no event and under no legal theory,
      whether in tort (including negligence), contract, or otherwise,
      unless required by applicable law (such as deliberate and grossly
      negligent acts) or agreed to in writing, shall any Contributor be
      liable to You for damages, including any direct, indirect, special,
      incidental, or consequential damages of any character arising as a
      result of this License or out of the use or inability to use the
      Work (including but not limited to damages for loss of goodwill,
      work stoppage, computer failure or malfunction, or any and all
      other commercial damages or losses), even if such Contributor
      has been advised of the possibility of such damages.

   9. Accepting Warranty or Additional Liability. While redistributing
      the Work or Derivative Works thereof, You may choose to offer,
      and charge a fee for, acceptance of support, warranty, indemnity,
      or other liability obligations and/or rights consistent with this
      License. However, in accepting such obligations, You may act only
      on Your own behalf and on Your sole responsibility, not on behalf
      of any other Contributor, and only if You agree to indemnify,
      defend, and hold each Contributor harmless for any liability
      incurred by, or claims asserted against, such Contributor by reason
      of your accepting any such warranty or additional liability.

   END OF TERMS AND CONDITIONS

   APPENDIX: How to apply the Apache License to your work.

      To apply the Apache License to your work, attach the following
      boilerplate notice, with the fields enclosed by brackets "[]"
      replaced with your own identifying information. (Don't include
      the brackets!)  The text should be enclosed in the appropriate
      comment syntax for the file format. We also recommend that a
      file or class name and description of purpose be included on the
      same "printed page" as the copyright notice for easier
      identification within third-party archives.

   Copyright [yyyy] [name of copyright owner]

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

```

Contents of env.example.json:
```
{
  "JWT": "eyJhbGc.... (get it at https://minarollupscan.com/jwt)"
}

```

Contents of .yarnrc.yml:
```
nodeLinker: node-modules

```

Contents of jest-config.ts:
```
import console from "console";
global.console = console;

const logCopy = console.log.bind(console);

console.log = function () {
  // Timestamp to prepend
  const timestamp = "[" + new Date().toLocaleTimeString() + "] ";

  if (arguments.length) {
    // True array copy so we can call .splice()
    const args = Array.prototype.slice.call(arguments, 0);

    // If there is a format string then... it must
    // be a string
    if (typeof arguments[0] === "string") {
      // Prepend timestamp to the (possibly format) string
      args[0] = "%s" + arguments[0];

      // Insert the timestamp where it has to be
      args.splice(1, 0, timestamp);

      // Log the whole array
      logCopy.apply(this, args);
    } else {
      // "Normal" log
      logCopy(timestamp, args);
    }
  }
};



```

Contents of README.md:
```
# zkCloudWorker Worker code example

An example of a worker running a ZkProgram and SmartContract that

- Deploys the worker code, including ZkProgram and SmartContract to the cloud using zkCloudWorker CLI tool.
- Compile the ZkProgram and SmartContract in the cloud
- Creates, proves and sends transactions to the network
- Uses zkCloudWorker API to send requests and jobs to the zkCloudWorker
- Uses zkCloudWorker API inside the cloud instance
- Creates recursive proofs
- Verifies recursive proofs
- Uses recursive proofs as arguments in the SmartContract methods
- Uses deployers provided by zkCloudWorker to send transactions to Devnet and Zeko

## Contract address

B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD

### Devnet

https://minascan.io/devnet/account/B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD/txs?type=zk-acc

### Zeko

https://zekoscan.io/devnet/account/B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD/txs?type=zk-acc

## Installation

You need to install `node (v20+)` and `git` and clone this repo

```
git clone https://github.com/zkcloudworker/worker-example
cd worker-example
```

## Deploy

Install zkCloudWorker CLI tool

```sh
npm install -g zkcloudworker-cli
```

Deploy this repo to the zkCloudWorker cloud

```sh
zkcw deploy
```

```
worker-example % zkcw deploy
zkCloudWorker CLI tool v0.3.15 (c) DFST 2024 www.zkcloudworker.com

Deploying the repo to the cloud... {}
Creating zip file...
Uploading zip file to zkCloudWorker's cloud storage...
Installing repo, this may take a few minutes...
SUCCESS: Deployment completed
deployed: 1:14.839 (m:ss.mmm)
```

or, in verbose mode

```sh
zkcw deploy -v
```

## Tests

### Run local tests

```sh
yarn local
```

### Run tests on Lightnet

```sh
zk lightnet start
zk lightnet explorer
yarn lightnet.deploy
yarn lightnet.run
```

### Run tests on Devnet

```sh
yarn devnet.run
```

### Run tests on Zeko

```sh
yarn zeko.run
```

Faucet: https://zeko.io/faucet

Explorer: https://zekoscan.io/devnet/home

## Logs

### Local test

```
worker-example % yarn local
[11:59:58 PM] Preparing data...
[11:59:58 PM] prepared data: 0.035ms
[11:59:58 PM] RSS memory initializing blockchain: 332 MB
[11:59:58 PM] local chain: local
[11:59:58 PM] contract address: B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD
[11:59:58 PM] sender: B62qp7AAYey5ohcoxjTo9Kruok3TQAyzW2yPzNmGdixkd3U4kzxdAre
[11:59:58 PM] Sender balance: 1000
[11:59:58 PM] RSS memory blockchain initialized: 454 MB, changed by 122 MB
[11:59:58 PM] Analyzing contracts methods...
[11:59:58 PM] methods analyzed: 334.825ms
[11:59:58 PM] method's total size for a AddProgram is 40 rows (0.06% of max 65536 rows)
[11:59:58 PM] method's total size for a AddContract is 2173 rows (3.32% of max 65536 rows)
[11:59:58 PM] addOne rows: 1091
[11:59:58 PM] addMany rows: 1082
[11:59:58 PM] Compiling contracts...
[12:00:07 AM] AddProgram compiled: 8.246s
[12:00:11 AM] AddContract compiled: 4.293s
[12:00:11 AM] compiled: 12.539s
[12:00:11 AM] AddContract verification key 6725742237764094284054294971180663014307059546463179012897722297980916229319
[12:00:11 AM] AddProgram verification key 22885017068934378368990068626190381687073682869863893429730422349565715395401
[12:00:11 AM] RSS memory compiled: 1613 MB, changed by 1159 MB
[12:00:11 AM] Deploying contract...
[12:00:11 AM] deploy tx sent: hash: 5JuYbgqgh9tzQxsjw9sqaiDqJ4pKZ4o84Lt6YBsd6A3QCptBep2J status: pending
[12:00:11 AM] Waiting for tx inclusion...
[12:00:11 AM] deploy tx included into block: hash: 5JuYbgqgh9tzQxsjw9sqaiDqJ4pKZ4o84Lt6YBsd6A3QCptBep2J status: included
[12:00:11 AM] RSS memory deployed: 1613 MB, changed by 0 MB
[12:00:11 AM] Sending one tx 1/1...
[12:00:11 AM] isMany: false
[12:00:11 AM] Address B62qmMRVYE38xVWXf1hJ42cTkTjBAkAsrJGtYfrmrje3vxtgMsxjEYU
[12:00:11 AM] Sending tx...
[12:00:11 AM] cloud deployer: EKELGyHuSemycGNnaJkULfTWSdWtzDPaW1krLdqB3YDYNFAQV5vJ
[12:00:11 AM] sender: B62qp7AAYey5ohcoxjTo9Kruok3TQAyzW2yPzNmGdixkd3U4kzxdAre
[12:00:11 AM] Sender balance: 998.8
[12:00:18 AM] compiled AddProgram: 6.590s
[12:00:22 AM] compiled AddContract: 4.313s
[12:00:22 AM] compiled: 10.903s
[12:00:22 AM] addValue: { value: '264', limit: '1000' }
[12:00:31 AM] prepared tx: 20.057s
[12:00:32 AM] one tx sent: hash: 5JtjphrjvwfUxTpJaE3AfaP1oA8XnMHmzjq4rF6f3G5pn1CCmdEw status: pending
[12:00:32 AM] one tx included into block: hash: 5JtjphrjvwfUxTpJaE3AfaP1oA8XnMHmzjq4rF6f3G5pn1CCmdEw status: included
[12:00:32 AM] LocalCloud: releaseDeployer {
  publicKey: 'B62qp7AAYey5ohcoxjTo9Kruok3TQAyzW2yPzNmGdixkd3U4kzxdAre',
  txsHashes: [ '5JtjphrjvwfUxTpJaE3AfaP1oA8XnMHmzjq4rF6f3G5pn1CCmdEw' ]
}
[12:00:32 AM] answer: {
  success: true,
  jobId: 'local.1715547611562.5lYwKCLDjid8S25EnQuaz35aLJzjwhB1',
  result: undefined,
  error: undefined
}
[12:00:32 AM] One result: 5JtjphrjvwfUxTpJaE3AfaP1oA8XnMHmzjq4rF6f3G5pn1CCmdEw
[12:00:32 AM] One txs sent: 20.829s
[12:00:32 AM] RSS memory One txs sent: 1994 MB, changed by 381 MB
[12:00:32 AM] Sending many tx 1/1...
[12:00:32 AM] compiled: 0.001ms
[12:00:41 AM] proof created: 9.341s
[12:00:41 AM] compiled: 0.003ms
[12:00:50 AM] proof created: 8.615s
[12:00:50 AM] compiled: 0.004ms
[12:00:59 AM] proof created: 8.875s
[12:00:59 AM] compiled: 0.003ms
[12:01:17 AM] proof merged: 18.180s
[12:01:17 AM] compiled: 0.005ms
[12:01:35 AM] proof merged: 18.161s
[12:01:35 AM] proof answer: {
  success: true,
  jobId: 'local.1715547632389.mevfTeOhNZl6iRwKjKimt2KfIqzOx38W',
  error: undefined
}
[12:01:35 AM] compiled: 0.003ms
[12:01:36 AM] verifyAnswer: {
  success: true,
  jobId: 'local.1715547695669.1BU0PFrFN0ok2j7lr2itwLKhcABzY3WW',
  result: undefined,
  error: undefined
}
[12:01:36 AM] Verify result: Proof verified
[12:01:36 AM] isMany: true
[12:01:36 AM] Address B62qkMiw4PxKSPDMjLwP29UJJ1mvcTtAfwuVpDy94aeGrj6AmHLeUu9
[12:01:36 AM] Sending tx...
[12:01:36 AM] cloud deployer: EKELGyHuSemycGNnaJkULfTWSdWtzDPaW1krLdqB3YDYNFAQV5vJ
[12:01:36 AM] sender: B62qp7AAYey5ohcoxjTo9Kruok3TQAyzW2yPzNmGdixkd3U4kzxdAre
[12:01:36 AM] Sender balance: 997.6
[12:01:36 AM] compiled: 0.003ms
[12:01:48 AM] prepared tx: 12.487s
[12:01:49 AM] many tx sent: hash: 5JunagWPJM2yeLJ3jW8BnnESh6GhSUmNEkG6H78iW1EewvNgMYgG status: pending
[12:01:49 AM] one tx included into block: hash: 5JunagWPJM2yeLJ3jW8BnnESh6GhSUmNEkG6H78iW1EewvNgMYgG status: included
[12:01:49 AM] LocalCloud: releaseDeployer {
  publicKey: 'B62qp7AAYey5ohcoxjTo9Kruok3TQAyzW2yPzNmGdixkd3U4kzxdAre',
  txsHashes: [ '5JunagWPJM2yeLJ3jW8BnnESh6GhSUmNEkG6H78iW1EewvNgMYgG' ]
}
[12:01:49 AM] answer: {
  success: true,
  jobId: 'local.1715547696223.rH7jLvjbJGjhGQ59wK3DyzY8A2lO3hgA',
  result: undefined,
  error: undefined
}
[12:01:49 AM] Many result: 5JunagWPJM2yeLJ3jW8BnnESh6GhSUmNEkG6H78iW1EewvNgMYgG
[12:01:49 AM] Many txs sent: 1:17.058 (m:ss.mmm)
[12:01:49 AM] RSS memory Many txs sent: 3100 MB, changed by 1106 MB
 PASS  tests/contract.test.ts
  Add Worker
    ✓ should prepare data (12 ms)
    ✓ should initialize blockchain (340 ms)
    ✓ should compile contract (12875 ms)
    ✓ should deploy contract (174 ms)
    ✓ should send one transactions (20829 ms)
    ✓ should send transactions with recursive proofs (77059 ms)

Test Suites: 1 passed, 1 total
Tests:       6 passed, 6 total
Snapshots:   0 total
Time:        112.276 s, estimated 344 s
Ran all test suites.
```

### Lightnet test log

deploy:

```
worker-example % yarn lightnet.deploy
[12:05:28 AM] Preparing data...
[12:05:28 AM] prepared data: 0.037ms
[12:05:28 AM] RSS memory initializing blockchain: 340 MB
[12:05:28 AM] local chain: lightnet
[12:05:28 AM] contract address: B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD
[12:05:28 AM] sender: B62qkciop8ziSv8iyw4NxJcfL7aoNyMeEePC6qhaee9Bas1jQd88zYK
[12:05:28 AM] Sender balance: 1550
[12:05:28 AM] RSS memory blockchain initialized: 349 MB, changed by 9 MB
[12:05:28 AM] Analyzing contracts methods...
[12:05:29 AM] methods analyzed: 707.964ms
[12:05:29 AM] method's total size for a AddProgram is 40 rows (0.06% of max 65536 rows)
[12:05:29 AM] method's total size for a AddContract is 2173 rows (3.32% of max 65536 rows)
[12:05:29 AM] addOne rows: 1091
[12:05:29 AM] addMany rows: 1082
[12:05:29 AM] Compiling contracts...
[12:05:37 AM] AddProgram compiled: 8.363s
[12:05:42 AM] AddContract compiled: 4.344s
[12:05:42 AM] compiled: 12.707s
[12:05:42 AM] AddContract verification key 6725742237764094284054294971180663014307059546463179012897722297980916229319
[12:05:42 AM] AddProgram verification key 22885017068934378368990068626190381687073682869863893429730422349565715395401
[12:05:42 AM] RSS memory compiled: 1041 MB, changed by 692 MB
[12:05:42 AM] Deploying contract...
[12:05:42 AM] deploy tx sent: hash: 5JuuxuW6tKvxkyAstLea4chMPmYcS6nZkShYAmcsHM3urFTngyT3 status: pending
[12:05:42 AM] Waiting for tx inclusion...
[12:06:02 AM] deploy tx included into block: hash: 5JuuxuW6tKvxkyAstLea4chMPmYcS6nZkShYAmcsHM3urFTngyT3 status: included
[12:06:12 AM] RSS memory deployed: 845 MB, changed by -196 MB
 PASS  tests/contract.test.ts
  Add Worker
    ✓ should prepare data (13 ms)
    ✓ should initialize blockchain (73 ms)
    ✓ should compile contract (13415 ms)
    ✓ should deploy contract (30838 ms)

Test Suites: 1 passed, 1 total
Tests:       4 passed, 4 total
Snapshots:   0 total
Time:        45.46 s, estimated 113 s
Ran all test suites.
```

run:

```
worker-example % yarn lightnet.run
[12:07:20 AM] Preparing data...
[12:07:20 AM] prepared data: 0.03ms
[12:07:20 AM] RSS memory initializing blockchain: 313 MB
[12:07:20 AM] local chain: lightnet
[12:07:20 AM] contract address: B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD
[12:07:20 AM] sender: B62qoSd2NaFHdjyjLjx1Tb8S6DDhgncwDTzQqGKb1UiKocKhegYgELV
[12:07:20 AM] Sender balance: 1550
[12:07:20 AM] RSS memory blockchain initialized: 347 MB, changed by 34 MB
[12:07:20 AM] Sending one tx 1/1...
[12:07:20 AM] isMany: false
[12:07:20 AM] Address B62qkWm2VyrV9Wxw8eM5zD3KiE4KX6snko6T2phDYsGMiFJkWwqKRKe
[12:07:20 AM] Sending tx...
[12:07:20 AM] cloud deployer: EKDiRPpNX1K393UX9nrGGEy18QtuawdGVS5nLMf5yzP8cBTxrMy8
[12:07:20 AM] sender: B62qoSd2NaFHdjyjLjx1Tb8S6DDhgncwDTzQqGKb1UiKocKhegYgELV
[12:07:20 AM] Sender balance: 1550
[12:07:29 AM] compiled AddProgram: 8.558s
[12:07:33 AM] compiled AddContract: 4.439s
[12:07:33 AM] compiled: 12.997s
[12:07:33 AM] addValue: { value: '18', limit: '1000' }
[12:07:41 AM] prepared tx: 20.772s
[12:07:41 AM] one tx sent: hash: 5JtoogxQRoUF4orLJSm6kAFwZDuxJ19Hua6RE2hFFPCXGaZWXm99 status: pending
[12:08:01 AM] one tx included into block: hash: 5JtoogxQRoUF4orLJSm6kAFwZDuxJ19Hua6RE2hFFPCXGaZWXm99 status: included
[12:08:01 AM] LocalCloud: releaseDeployer {
  publicKey: 'B62qoSd2NaFHdjyjLjx1Tb8S6DDhgncwDTzQqGKb1UiKocKhegYgELV',
  txsHashes: [ '5JtoogxQRoUF4orLJSm6kAFwZDuxJ19Hua6RE2hFFPCXGaZWXm99' ]
}
[12:08:01 AM] answer: {
  success: true,
  jobId: 'local.1715548040933.73EDr5tk9GXHhKKsKwpr0gmQpdljNmDA',
  result: undefined,
  error: undefined
}
[12:08:01 AM] One result: 5JtoogxQRoUF4orLJSm6kAFwZDuxJ19Hua6RE2hFFPCXGaZWXm99
[12:08:01 AM] One txs sent: 40.964s
[12:08:01 AM] RSS memory One txs sent: 1322 MB, changed by 975 MB
[12:08:01 AM] Sending many tx 1/1...
[12:08:01 AM] compiled: 0.004ms
[12:08:09 AM] proof created: 8.054s
[12:08:10 AM] compiled: 0.011ms
[12:08:17 AM] proof created: 7.401s
[12:08:17 AM] compiled: 0.003ms
[12:08:24 AM] proof created: 7.294s
[12:08:24 AM] compiled: 0.003ms
[12:08:41 AM] proof merged: 16.569s
[12:08:41 AM] compiled: 0.003ms
[12:08:57 AM] proof merged: 15.654s
[12:08:57 AM] proof answer: {
  success: true,
  jobId: 'local.1715548081928.Kzg1JamacQ4jWIFxmDlWQkcIvucMpPcS',
  error: undefined
}
[12:08:57 AM] compiled: 0.003ms
[12:08:57 AM] verifyAnswer: {
  success: true,
  jobId: 'local.1715548137038.kDBt0O7gl14ZCf1QB7GOsK5wRzxYwatX',
  result: undefined,
  error: undefined
}
[12:08:57 AM] Verify result: Proof verified
[12:08:57 AM] isMany: true
[12:08:57 AM] Address B62qrpyoHVcPKZoAhyoi2jHgLWdWQ9D9BqyHDh5FeALd8RHPy9CBprH
[12:08:57 AM] Sending tx...
[12:08:57 AM] cloud deployer: EKDiRPpNX1K393UX9nrGGEy18QtuawdGVS5nLMf5yzP8cBTxrMy8
[12:08:57 AM] sender: B62qoSd2NaFHdjyjLjx1Tb8S6DDhgncwDTzQqGKb1UiKocKhegYgELV
[12:08:57 AM] Sender balance: 1548.8
[12:08:57 AM] compiled: 0.004ms
[12:09:08 AM] prepared tx: 11.210s
[12:09:08 AM] many tx sent: hash: 5JurztcaBHn9jxo5cBDVBGuw5Nw31ULz5gw1mKSV9uv6sNCzrCui status: pending
[12:09:28 AM] one tx included into block: hash: 5JurztcaBHn9jxo5cBDVBGuw5Nw31ULz5gw1mKSV9uv6sNCzrCui status: included
[12:09:28 AM] LocalCloud: releaseDeployer {
  publicKey: 'B62qoSd2NaFHdjyjLjx1Tb8S6DDhgncwDTzQqGKb1UiKocKhegYgELV',
  txsHashes: [ '5JurztcaBHn9jxo5cBDVBGuw5Nw31ULz5gw1mKSV9uv6sNCzrCui' ]
}
[12:09:28 AM] answer: {
  success: true,
  jobId: 'local.1715548137566.dGZrkCA8VysGnKeEKFFrX0pzbVICSY44',
  result: undefined,
  error: undefined
}
[12:09:28 AM] Many result: 5JurztcaBHn9jxo5cBDVBGuw5Nw31ULz5gw1mKSV9uv6sNCzrCui
[12:09:28 AM] Many txs sent: 1:26.958 (m:ss.mmm)
[12:09:28 AM] RSS memory Many txs sent: 2194 MB, changed by 872 MB
 PASS  tests/contract.test.ts
  Add Worker
    ✓ should prepare data (12 ms)
    ✓ should initialize blockchain (69 ms)
    ✓ should send one transactions (40987 ms)
    ✓ should send transactions with recursive proofs (86979 ms)

Test Suites: 1 passed, 1 total
Tests:       4 passed, 4 total
Snapshots:   0 total
Time:        128.892 s
Ran all test suites.
```

### Devnet test log

```
worker-example % yarn devnet.run
[12:18:11 AM] Preparing data...
[12:18:11 AM] prepared data: 0.035ms
[12:18:11 AM] RSS memory initializing blockchain: 324 MB
[12:18:11 AM] non-local chain: devnet
[12:18:11 AM] contract address: B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD
[12:18:11 AM] sender: B62qrvVL5oJWT8K4ijnq83V3MYHv95jhrJ2T3X56GL7nfowNFvcDFST
[12:18:12 AM] Sender balance: 284.6
[12:18:12 AM] RSS memory blockchain initialized: 340 MB, changed by 16 MB
[12:18:12 AM] Sending one tx 1/1...
[12:18:13 AM] answer: {
  success: true,
  jobId: '6459034946.1715548692638.ZDvFXvYrEXPldPzYvQt6udqgxd7Ntlqa',
  result: undefined,
  error: undefined
}
[12:18:24 AM] 2024-05-12T21:18:12.739Z	INFO	worker {
  command: 'execute',
  id: '6459034946',
  jobId: '6459034946.1715548692638.ZDvFXvYrEXPldPzYvQt6udqgxd7Ntlqa',
  developer: 'DFST',
  repo: 'worker-example',
  args: '{"contractAddress":"B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD","isMany":false,"addValue":"C._P2d4jlwkgiJpIHNSqlkLuH5cpA0Wcmkuw3JYdmupK.BJ.oP"}'
}

[12:18:24 AM] 2024-05-12T21:18:12.769Z	INFO	zkCloudWorker Execute start: {
  command: 'execute',
  developer: 'DFST',
  repo: 'worker-example',
  id: '6459034946',
  jobId: '6459034946.1715548692638.ZDvFXvYrEXPldPzYvQt6udqgxd7Ntlqa',
  job: {
    metadata: 'one',
    logStreams: [],
    task: 'one',
    maxAttempts: 0,
    args: '{"contractAddress":"B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD","isMany":false,"addValue":"C._P2d4jlwkgiJpIHNSqlkLuH5cpA0Wcmkuw3JYdmupK.BJ.oP"}',
    timeCreated: 1715548692638,
    timeCreatedString: '2024-05-12T21:18:12.638Z',
    jobId: '6459034946.1715548692638.ZDvFXvYrEXPldPzYvQt6udqgxd7Ntlqa',
    repo: 'worker-example',
    developer: 'DFST',
    chain: 'devnet',
    txNumber: 1,
    jobStatus: 'created',
    id: '6459034946'
  }
}

[12:18:24 AM] 2024-05-12T21:18:12.770Z	INFO	RSS memory start: 3989 MB, changed by 0 MB

[12:18:24 AM] 2024-05-12T21:18:12.770Z	INFO	CloudWorker: constructor {
  id: '6459034946',
  jobId: '6459034946.1715548692638.ZDvFXvYrEXPldPzYvQt6udqgxd7Ntlqa',
  developer: 'DFST',
  repo: 'worker-example',
  task: 'one',
  taskId: undefined,
  userId: undefined,
  args: '{"contractAddress":"B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD","isMany":false,"addValue":"C._P2d4jlwkgiJpIHNSqlkLuH5cpA0Wcmkuw3JYdmupK.BJ.oP"}',
  metadata: 'one',
  cache: '/mnt/efs/cache',
  chain: 'devnet',
  webhook: undefined
}

[12:18:24 AM] 2024-05-12T21:18:12.791Z	INFO	getWorker result: {
  repo: 'worker-example',
  size: 10815,
  version: '0.2.2',
  developer: 'DFST',
  countUsed: 6,
  timeUsed: 1715548612147,
  timeDeployed: 1715547885099,
  id: '6459034946',
  protected: false
}

[12:18:24 AM] 2024-05-12T21:18:12.791Z	INFO	Running worker { developer: 'DFST', repo: 'worker-example', version: '0.2.2' }

[12:18:24 AM] 2024-05-12T21:18:12.791Z	INFO	starting worker example version 0.2.2 on chain devnet

[12:18:24 AM] 2024-05-12T21:18:12.797Z	INFO	isMany: false

[12:18:24 AM] 2024-05-12T21:18:12.800Z	INFO	Address B62qj7RuQhjBBzpVzMcfvCBq23yR1Ej38Q2L4fg9Yjcfoy9JaBGgcsX

[12:18:24 AM] 2024-05-12T21:18:12.801Z	INFO	Sending tx...

[12:18:24 AM] 2024-05-12T21:18:13.975Z	INFO	getDeployer: providing deployer B62qkZazA9uzC1Btdoun5uK5piU85o2WoVmdT9rNDYVYFcDF3JZhR9u with balance 297

[12:18:24 AM] 2024-05-12T21:18:13.975Z	INFO	cloud deployer: EKFWifX3WTDZcYQbtWMppqgWrzYuZwNELsSBhoMMZPSZ7BQU8vg4

[12:18:24 AM] 2024-05-12T21:18:14.350Z	INFO	sender: B62qkZazA9uzC1Btdoun5uK5piU85o2WoVmdT9rNDYVYFcDF3JZhR9u

[12:18:24 AM] 2024-05-12T21:18:14.470Z	INFO	Sender balance: 297.2

[12:18:24 AM] 2024-05-12T21:18:14.470Z	INFO	compiled: 0.009ms

[12:18:24 AM] 2024-05-12T21:18:14.471Z	INFO	addValue: { value: '577', limit: '1000' }

[12:18:55 AM] 2024-05-12T21:18:37.567Z	INFO	prepared tx: 24.766s

[12:18:55 AM] 2024-05-12T21:18:38.056Z	INFO	one tx sent: hash: 5JuoFRF8NZ1w3DwYCtzvcoqHD7MwN7BW2mzLYoaNaWzNGvhLJGSz status: pending

[12:18:55 AM] 2024-05-12T21:18:38.056Z	INFO	Cloud: releaseDeployer {
  publicKey: 'B62qkZazA9uzC1Btdoun5uK5piU85o2WoVmdT9rNDYVYFcDF3JZhR9u',
  txsHashes: [ '5JuoFRF8NZ1w3DwYCtzvcoqHD7MwN7BW2mzLYoaNaWzNGvhLJGSz' ]
}

[12:18:55 AM] 2024-05-12T21:18:38.084Z	INFO	RSS memory finished: 4035 MB, changed by 46 MB

[12:18:55 AM] 2024-05-12T21:18:38.084Z	INFO	zkCloudWorker Execute Sync: 25.314s

[12:18:55 AM] 2024-05-12T21:18:38.109Z	INFO	zkCloudWorker Execute: 25.339s

[12:18:55 AM] REPORT RequestId: Duration: 25376.89 ms	Billed Duration: 25377 ms	Memory Size: 10240 MB	Max Memory Used: 4864 MB

[12:18:55 AM] One result: 5JuoFRF8NZ1w3DwYCtzvcoqHD7MwN7BW2mzLYoaNaWzNGvhLJGSz
[12:18:55 AM] One txs sent: 43.012s
[12:18:55 AM] RSS memory One txs sent: 324 MB, changed by -16 MB
[12:18:55 AM] Sending many tx 1/1...
[12:18:56 AM] proof answer: {
  success: true,
  jobId: '6459034946.1715548735620.lk5HThsUfzyHRRGe03wCuBXUFD8GDqS5',
  error: undefined
}
[12:19:06 AM] 2024-05-12T21:18:55.755Z	INFO	run {
  task: 'start',
  id: '6459034946',
  jobId: '6459034946.1715548735620.lk5HThsUfzyHRRGe03wCuBXUFD8GDqS5'
}

[12:19:06 AM] 2024-05-12T21:18:55.878Z	INFO	Sequencer: startJob: number of transactions: 3

[12:19:06 AM] 2024-05-12T21:18:55.961Z	INFO	Lambda call: step id: 8dbf5966-768b-4494-9dc1-a3fd433ee07d

[12:19:06 AM] 2024-05-12T21:18:56.497Z	INFO	Lambda call: step id: cbbd6f58-213f-4860-9758-64c4597a46cb

[12:19:06 AM] 2024-05-12T21:18:57.052Z	INFO	Lambda call: step id: 3d9dc391-14e6-476c-80c1-bdbf0459d3f8

[12:19:38 AM] 2024-05-12T21:19:27.667Z	INFO	Sequencer: run: results 3

[12:19:38 AM] 2024-05-12T21:19:28.953Z	INFO	Lambda call: step id: 111cac89-5df4-4650-a3e8-f0e30ce07a5b

[12:19:38 AM] 2024-05-12T21:19:29.453Z	INFO	Sequencer: run: started merging 2 proofs
step1 started in 172 ms, calculated in 21 sec,
step2 started in 114 ms, calculated in 21 sec

[12:20:40 AM] 2024-05-12T21:20:27.712Z	INFO	Sequencer: run: results 2

[12:20:40 AM] 2024-05-12T21:20:29.018Z	INFO	Lambda call: step id: c0563986-f541-4d4b-8256-1fe5b9d18785

[12:20:40 AM] 2024-05-12T21:20:29.519Z	INFO	Sequencer: run: started merging 3 proofs
step1 started in 179 ms, calculated in 53 sec,
step2 started in 133 ms, calculated in 23 sec

[12:21:32 AM] 2024-05-12T21:21:17.945Z	INFO	Sequencer: run: final result written

[12:21:32 AM] 2024-05-12T21:21:17.972Z	INFO	Sequencer: run: finished

[12:21:32 AM] REPORT RequestId: Duration: 142340.14 ms	Billed Duration: 142341 ms	Memory Size: 384 MB	Max Memory Used: 140 MB

[12:21:33 AM] verifyAnswer: {
  success: true,
  jobId: '6459034946.1715548892992.JS071U568vQ8DYNcBmxiFPIlMLLgWXTl',
  result: undefined,
  error: undefined
}
[12:21:44 AM] 2024-05-12T21:21:33.094Z	INFO	worker {
  command: 'execute',
  id: '6459034946',
  jobId: '6459034946.1715548892992.JS071U568vQ8DYNcBmxiFPIlMLLgWXTl',
  developer: 'DFST',
  repo: 'worker-example',
  args: '{"contractAddress":"B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD","proof":"{\\n  \\"publicInput\\": [],\\n  \\"publicOutput\\": [\\n    \\"866\\",\\n    \\"1000\\"\\n  ],\\n  \\"maxProofsVerified\\": 2,\\n  \\"proof\\": \\"'... 25397 more characters
}

[12:21:44 AM] 2024-05-12T21:21:33.143Z	INFO	zkCloudWorker Execute start: {
  command: 'execute',
  developer: 'DFST',
  repo: 'worker-example',
  id: '6459034946',
  jobId: '6459034946.1715548892992.JS071U568vQ8DYNcBmxiFPIlMLLgWXTl',
  job: {
    metadata: 'verify proof',
    logStreams: [],
    task: 'verifyProof',
    maxAttempts: 0,
    args: '{"contractAddress":"B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD","proof":"{\\n  \\"publicInput\\": [],\\n  \\"publicOutput\\": [\\n    \\"866\\",\\n    \\"1000\\"\\n  ],\\n  \\"maxProofsVerified\\": 2,\\n  \\"proof\\": \\"'... 25397 more characters,
    timeCreated: 1715548892992,
    timeCreatedString: '2024-05-12T21:21:32.992Z',
    jobId: '6459034946.1715548892992.JS071U568vQ8DYNcBmxiFPIlMLLgWXTl',
    repo: 'worker-example',
    developer: 'DFST',
    chain: 'devnet',
    txNumber: 1,
    jobStatus: 'created',
    id: '6459034946'
  }
}

[12:21:44 AM] 2024-05-12T21:21:33.149Z	INFO	RSS memory start: 3555 MB, changed by -480 MB

[12:21:44 AM] 2024-05-12T21:21:33.149Z	INFO	CloudWorker: constructor {
  id: '6459034946',
  jobId: '6459034946.1715548892992.JS071U568vQ8DYNcBmxiFPIlMLLgWXTl',
  developer: 'DFST',
  repo: 'worker-example',
  task: 'verifyProof',
  taskId: undefined,
  userId: undefined,
  args: '{"contractAddress":"B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD","proof":"{\\n  \\"publicInput\\": [],\\n  \\"publicOutput\\": [\\n    \\"866\\",\\n    \\"1000\\"\\n  ],\\n  \\"maxProofsVerified\\": 2,\\n  \\"proof\\": \\"'... 25397 more characters,
  metadata: 'verify proof',
  cache: '/mnt/efs/cache',
  chain: 'devnet',
  webhook: undefined
}

[12:21:44 AM] 2024-05-12T21:21:33.173Z	INFO	getWorker result: {
  repo: 'worker-example',
  size: 10815,
  version: '0.2.2',
  developer: 'DFST',
  countUsed: 12,
  timeUsed: 1715548829088,
  timeDeployed: 1715547885099,
  id: '6459034946',
  protected: false
}

[12:21:44 AM] 2024-05-12T21:21:33.173Z	INFO	Running worker { developer: 'DFST', repo: 'worker-example', version: '0.2.2' }

[12:21:44 AM] 2024-05-12T21:21:33.174Z	INFO	starting worker example version 0.2.2 on chain devnet

[12:21:44 AM] 2024-05-12T21:21:33.260Z	INFO	compiled: 0.016ms

[12:21:44 AM] 2024-05-12T21:21:35.234Z	INFO	RSS memory finished: 3401 MB, changed by -154 MB

[12:21:44 AM] 2024-05-12T21:21:35.234Z	INFO	zkCloudWorker Execute Sync: 2.086s

[12:21:44 AM] 2024-05-12T21:21:35.264Z	INFO	zkCloudWorker Execute: 2.122s

[12:21:44 AM] REPORT RequestId: Duration: 2176.83 ms	Billed Duration: 2177 ms	Memory Size: 10240 MB	Max Memory Used: 4864 MB

[12:21:44 AM] Verify result: Proof verified
[12:21:45 AM] answer: {
  success: true,
  jobId: '6459034946.1715548904948.PCMuwvyRLwMcIcESY1HQRCAhpVU0TWp1',
  result: undefined,
  error: undefined
}
[12:21:56 AM] 2024-05-12T21:21:45.068Z	INFO	worker {
  command: 'execute',
  id: '6459034946',
  jobId: '6459034946.1715548904948.PCMuwvyRLwMcIcESY1HQRCAhpVU0TWp1',
  developer: 'DFST',
  repo: 'worker-example',
  args: '{"contractAddress":"B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD","isMany":true,"proof":"{\\n  \\"publicInput\\": [],\\n  \\"publicOutput\\": [\\n    \\"866\\",\\n    \\"1000\\"\\n  ],\\n  \\"maxProofsVerified\\": 2,\\n  \\"proof\\": \\"'... 25411 more characters
}

[12:21:56 AM] 2024-05-12T21:21:45.104Z	INFO	zkCloudWorker Execute start: {
  command: 'execute',
  developer: 'DFST',
  repo: 'worker-example',
  id: '6459034946',
  jobId: '6459034946.1715548904948.PCMuwvyRLwMcIcESY1HQRCAhpVU0TWp1',
  job: {
    metadata: 'many',
    logStreams: [],
    task: 'many',
    maxAttempts: 0,
    args: '{"contractAddress":"B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD","isMany":true,"proof":"{\\n  \\"publicInput\\": [],\\n  \\"publicOutput\\": [\\n    \\"866\\",\\n    \\"1000\\"\\n  ],\\n  \\"maxProofsVerified\\": 2,\\n  \\"proof\\": \\"'... 25411 more characters,
    timeCreated: 1715548904948,
    timeCreatedString: '2024-05-12T21:21:44.948Z',
    jobId: '6459034946.1715548904948.PCMuwvyRLwMcIcESY1HQRCAhpVU0TWp1',
    repo: 'worker-example',
    developer: 'DFST',
    chain: 'devnet',
    txNumber: 1,
    jobStatus: 'created',
    id: '6459034946'
  }
}

[12:21:56 AM] 2024-05-12T21:21:45.104Z	INFO	RSS memory start: 3401 MB, changed by 0 MB

[12:21:56 AM] 2024-05-12T21:21:45.105Z	INFO	CloudWorker: constructor {
  id: '6459034946',
  jobId: '6459034946.1715548904948.PCMuwvyRLwMcIcESY1HQRCAhpVU0TWp1',
  developer: 'DFST',
  repo: 'worker-example',
  task: 'many',
  taskId: undefined,
  userId: undefined,
  args: '{"contractAddress":"B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD","isMany":true,"proof":"{\\n  \\"publicInput\\": [],\\n  \\"publicOutput\\": [\\n    \\"866\\",\\n    \\"1000\\"\\n  ],\\n  \\"maxProofsVerified\\": 2,\\n  \\"proof\\": \\"'... 25411 more characters,
  metadata: 'many',
  cache: '/mnt/efs/cache',
  chain: 'devnet',
  webhook: undefined
}

[12:21:56 AM] 2024-05-12T21:21:45.132Z	INFO	getWorker result: {
  repo: 'worker-example',
  size: 10815,
  version: '0.2.2',
  developer: 'DFST',
  countUsed: 13,
  timeUsed: 1715548893174,
  timeDeployed: 1715547885099,
  id: '6459034946',
  protected: false
}

[12:21:56 AM] 2024-05-12T21:21:45.133Z	INFO	Running worker { developer: 'DFST', repo: 'worker-example', version: '0.2.2' }

[12:21:56 AM] 2024-05-12T21:21:45.133Z	INFO	starting worker example version 0.2.2 on chain devnet

[12:21:56 AM] 2024-05-12T21:21:45.144Z	INFO	isMany: true

[12:21:56 AM] 2024-05-12T21:21:45.149Z	INFO	Address B62qqWMLtBDkVUJRsgPXnYamCKcMaeK7fsyXC43UxMn5u1ysy2rpRW2

[12:21:56 AM] 2024-05-12T21:21:45.150Z	INFO	Sending tx...

[12:21:56 AM] 2024-05-12T21:21:46.351Z	INFO	getDeployer: providing deployer B62qoAd8ST9qkskDb7zW4vyDPSzuMzPw7B2c3vVPqLrErv7NR5Fjtbj with balance 284

[12:21:56 AM] 2024-05-12T21:21:46.351Z	INFO	cloud deployer: EKDxBcUefVbwCcbMhLEcsyDdhrhnquBGWT6xp1EuTnTmNWvjgBRA

[12:21:56 AM] 2024-05-12T21:21:46.697Z	INFO	sender: B62qoAd8ST9qkskDb7zW4vyDPSzuMzPw7B2c3vVPqLrErv7NR5Fjtbj

[12:21:56 AM] 2024-05-12T21:21:46.828Z	INFO	Sender balance: 284.460074

[12:21:56 AM] 2024-05-12T21:21:46.828Z	INFO	compiled: 0.01ms

[12:22:38 AM] 2024-05-12T21:22:20.237Z	INFO	prepared tx: 35.087s

[12:22:38 AM] 2024-05-12T21:22:21.061Z	INFO	many tx sent: hash: 5JtwXzWjDXmidQzvW9uiYefzhbhFCZSWHPaqbKsGxrMjN2YVydq7 status: pending

[12:22:38 AM] 2024-05-12T21:22:21.061Z	INFO	Cloud: releaseDeployer {
  publicKey: 'B62qoAd8ST9qkskDb7zW4vyDPSzuMzPw7B2c3vVPqLrErv7NR5Fjtbj',
  txsHashes: [ '5JtwXzWjDXmidQzvW9uiYefzhbhFCZSWHPaqbKsGxrMjN2YVydq7' ]
}

[12:22:38 AM] 2024-05-12T21:22:21.084Z	INFO	RSS memory finished: 3717 MB, changed by 316 MB

[12:22:38 AM] 2024-05-12T21:22:21.085Z	INFO	zkCloudWorker Execute Sync: 35.980s

[12:22:38 AM] 2024-05-12T21:22:21.112Z	INFO	zkCloudWorker Execute: 36.008s

[12:22:38 AM] REPORT RequestId: Duration: 36051.86 ms	Billed Duration: 36052 ms	Memory Size: 10240 MB	Max Memory Used: 4864 MB

[12:22:38 AM] Many result: 5JtwXzWjDXmidQzvW9uiYefzhbhFCZSWHPaqbKsGxrMjN2YVydq7
[12:22:38 AM] Many txs sent: 3:43.377 (m:ss.mmm)
[12:22:38 AM] RSS memory Many txs sent: 325 MB, changed by 1 MB
 PASS  tests/contract.test.ts
  Add Worker
    ✓ should prepare data (12 ms)
    ✓ should initialize blockchain (549 ms)
    ✓ should send one transactions (43012 ms)
    ✓ should send transactions with recursive proofs (223378 ms)

Test Suites: 1 passed, 1 total
Tests:       4 passed, 4 total
Snapshots:   0 total
Time:        267.83 s, estimated 447 s
Ran all test suites.
```

### Zeko test log

```
worker-example % yarn zeko.run
[12:40:33 AM] Preparing data...
[12:40:33 AM] prepared data: 0.033ms
[12:40:33 AM] RSS memory initializing blockchain: 312 MB
[12:40:33 AM] non-local chain: zeko
[12:40:33 AM] contract address: B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD
[12:40:33 AM] sender: B62qrvVL5oJWT8K4ijnq83V3MYHv95jhrJ2T3X56GL7nfowNFvcDFST
[12:40:34 AM] Sender balance: 281213.576710656
[12:40:34 AM] RSS memory blockchain initialized: 332 MB, changed by 20 MB
[12:40:34 AM] Sending one tx 1/1...
[12:40:35 AM] answer: {
  success: true,
  jobId: '6459034946.1715550034665.9a8m44I4yjND0PRo7iyzxqsIFPU8R9oa',
  result: undefined,
  error: undefined
}
[12:40:45 AM] 2024-05-12T21:40:34.771Z	INFO	worker {
  command: 'execute',
  id: '6459034946',
  jobId: '6459034946.1715550034665.9a8m44I4yjND0PRo7iyzxqsIFPU8R9oa',
  developer: 'DFST',
  repo: 'worker-example',
  args: '{"contractAddress":"B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD","isMany":false,"addValue":"C.KSWHJ3De9t2KouRDszxbbxykUjmK7G15ufU0O6zhkqD.XP.oP"}'
}

[12:40:45 AM] 2024-05-12T21:40:34.805Z	INFO	zkCloudWorker Execute start: {
  command: 'execute',
  developer: 'DFST',
  repo: 'worker-example',
  id: '6459034946',
  jobId: '6459034946.1715550034665.9a8m44I4yjND0PRo7iyzxqsIFPU8R9oa',
  job: {
    metadata: 'one',
    logStreams: [],
    task: 'one',
    maxAttempts: 0,
    args: '{"contractAddress":"B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD","isMany":false,"addValue":"C.KSWHJ3De9t2KouRDszxbbxykUjmK7G15ufU0O6zhkqD.XP.oP"}',
    timeCreated: 1715550034665,
    timeCreatedString: '2024-05-12T21:40:34.665Z',
    jobId: '6459034946.1715550034665.9a8m44I4yjND0PRo7iyzxqsIFPU8R9oa',
    repo: 'worker-example',
    developer: 'DFST',
    chain: 'zeko',
    txNumber: 1,
    jobStatus: 'created',
    id: '6459034946'
  }
}

[12:40:45 AM] 2024-05-12T21:40:34.807Z	INFO	RSS memory start: 288 MB, changed by 1 MB

[12:40:45 AM] 2024-05-12T21:40:34.807Z	INFO	CloudWorker: constructor {
  id: '6459034946',
  jobId: '6459034946.1715550034665.9a8m44I4yjND0PRo7iyzxqsIFPU8R9oa',
  developer: 'DFST',
  repo: 'worker-example',
  task: 'one',
  taskId: undefined,
  userId: undefined,
  args: '{"contractAddress":"B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD","isMany":false,"addValue":"C.KSWHJ3De9t2KouRDszxbbxykUjmK7G15ufU0O6zhkqD.XP.oP"}',
  metadata: 'one',
  cache: '/mnt/efs/cache',
  chain: 'zeko',
  webhook: undefined
}

[12:40:45 AM] 2024-05-12T21:40:34.841Z	INFO	getWorker result: {
  repo: 'worker-example',
  size: 23045,
  version: '0.2.3',
  developer: 'DFST',
  countUsed: 6,
  timeUsed: 1715549927300,
  timeDeployed: 1715549296710,
  id: '6459034946',
  protected: false
}

[12:40:45 AM] 2024-05-12T21:40:34.841Z	INFO	Running worker { developer: 'DFST', repo: 'worker-example', version: '0.2.3' }

[12:40:45 AM] 2024-05-12T21:40:36.919Z	INFO	starting worker example version 0.2.3 on chain zeko

[12:40:45 AM] 2024-05-12T21:40:38.252Z	INFO	isMany: false

[12:40:45 AM] 2024-05-12T21:40:38.258Z	INFO	Address B62qog1cc7B5aW6QBA9xbUvNXuZCcAkrvRp415ZuxevJsSgK2aeAA66

[12:40:45 AM] 2024-05-12T21:40:38.259Z	INFO	Sending tx...

[12:40:45 AM] 2024-05-12T21:40:39.567Z	INFO	getDeployer: providing deployer B62qjFU9g1ie345NV4Au4nEfAVesiVuCJx55b7aaRcHgRcXRuxxjfVF with balance 281473

[12:40:45 AM] 2024-05-12T21:40:39.568Z	INFO	cloud deployer: EKFXvLsHTrdDdcYSqC2y14YbVwJEaHCN1baouroHTgqv7JuLEUs4

[12:40:45 AM] 2024-05-12T21:40:39.724Z	INFO	sender: B62qjFU9g1ie345NV4Au4nEfAVesiVuCJx55b7aaRcHgRcXRuxxjfVF

[12:40:45 AM] 2024-05-12T21:40:39.762Z	INFO	Sender balance: 281473.976710656

[12:41:06 AM] 2024-05-12T21:40:56.038Z	INFO	compiled AddProgram: 16.276s

[12:41:06 AM] 2024-05-12T21:41:02.341Z	INFO	compiled AddContract: 6.303s

[12:41:06 AM] 2024-05-12T21:41:02.341Z	INFO	compiled: 22.579s

[12:41:06 AM] 2024-05-12T21:41:02.343Z	INFO	addValue: { value: '983', limit: '1000' }

[12:41:37 AM] 2024-05-12T21:41:28.621Z	INFO	prepared tx: 50.361s

[12:41:37 AM] 2024-05-12T21:41:29.610Z	INFO	one tx sent: hash: 5JuBSY5Gp1kKukrbRyqvGPDZJFWHHzZ11d9azF81KW9r6nzNQgRH status: pending

[12:41:37 AM] 2024-05-12T21:41:29.610Z	INFO	Cloud: releaseDeployer {
  publicKey: 'B62qjFU9g1ie345NV4Au4nEfAVesiVuCJx55b7aaRcHgRcXRuxxjfVF',
  txsHashes: [ '5JuBSY5Gp1kKukrbRyqvGPDZJFWHHzZ11d9azF81KW9r6nzNQgRH' ]
}

[12:41:37 AM] 2024-05-12T21:41:29.639Z	INFO	RSS memory finished: 1819 MB, changed by 1531 MB

[12:41:37 AM] 2024-05-12T21:41:29.639Z	INFO	zkCloudWorker Execute Sync: 54.833s

[12:41:37 AM] 2024-05-12T21:41:29.665Z	INFO	zkCloudWorker Execute: 54.859s

[12:41:37 AM] REPORT RequestId: Duration: 54903.23 ms	Billed Duration: 54904 ms	Memory Size: 10240 MB	Max Memory Used: 2198 MB

[12:41:37 AM] One result: 5JuBSY5Gp1kKukrbRyqvGPDZJFWHHzZ11d9azF81KW9r6nzNQgRH
[12:41:37 AM] One txs sent: 1:03.781 (m:ss.mmm)
[12:41:37 AM] RSS memory One txs sent: 307 MB, changed by -25 MB
[12:41:37 AM] Sending many tx 1/1...
[12:41:38 AM] proof answer: {
  success: true,
  jobId: '6459034946.1715550098401.M8Jq14M586ABptzkGa7UXmDv55xKoUti',
  error: undefined
}
[12:41:49 AM] 2024-05-12T21:41:38.519Z	INFO	run {
  task: 'start',
  id: '6459034946',
  jobId: '6459034946.1715550098401.M8Jq14M586ABptzkGa7UXmDv55xKoUti'
}

[12:41:49 AM] 2024-05-12T21:41:38.676Z	INFO	Sequencer: startJob: number of transactions: 3

[12:41:49 AM] 2024-05-12T21:41:38.754Z	INFO	Lambda call: step id: a217d01f-fbdf-48ce-8478-6c142481c016

[12:41:49 AM] 2024-05-12T21:41:39.302Z	INFO	Lambda call: step id: f098de55-853f-476b-9652-2c5f9a26a43f

[12:41:49 AM] 2024-05-12T21:41:39.846Z	INFO	Lambda call: step id: cca94ef4-87f3-4ade-aa12-16e7b1cdbcb8

[12:42:22 AM] 2024-05-12T21:42:10.506Z	INFO	Sequencer: run: results 3

[12:42:22 AM] 2024-05-12T21:42:11.784Z	INFO	Lambda call: step id: a17cb1e9-1867-44f9-beb9-612b7ffd694c

[12:42:22 AM] 2024-05-12T21:42:12.289Z	INFO	Sequencer: run: started merging 2 proofs
step1 started in 166 ms, calculated in 22 sec,
step2 started in 145 ms, calculated in 22 sec

[12:43:25 AM] 2024-05-12T21:43:10.516Z	INFO	Sequencer: run: results 2

[12:43:25 AM] 2024-05-12T21:43:11.836Z	INFO	Lambda call: step id: 4ff9e4c0-dd51-4431-9375-fc1f19c3aa48

[12:43:25 AM] 2024-05-12T21:43:12.336Z	INFO	Sequencer: run: started merging 3 proofs
step1 started in 184 ms, calculated in 52 sec,
step2 started in 186 ms, calculated in 21 sec

[12:44:17 AM] 2024-05-12T21:44:01.047Z	INFO	Sequencer: run: final result written

[12:44:17 AM] 2024-05-12T21:44:01.107Z	INFO	Sequencer: run: finished

[12:44:17 AM] REPORT RequestId: Duration: 142691.57 ms	Billed Duration: 142692 ms	Memory Size: 384 MB	Max Memory Used: 140 MB

[12:44:18 AM] verifyAnswer: {
  success: true,
  jobId: '6459034946.1715550257768.pvUbej05hujItNsB2rIJov1ArVu0pwzY',
  result: undefined,
  error: undefined
}
[12:44:29 AM] 2024-05-12T21:44:17.884Z	INFO	worker {
  command: 'execute',
  id: '6459034946',
  jobId: '6459034946.1715550257768.pvUbej05hujItNsB2rIJov1ArVu0pwzY',
  developer: 'DFST',
  repo: 'worker-example',
  args: '{"contractAddress":"B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD","proof":"{\\n  \\"publicInput\\": [],\\n  \\"publicOutput\\": [\\n    \\"1570\\",\\n    \\"1000\\"\\n  ],\\n  \\"maxProofsVerified\\": 2,\\n  \\"proof\\": \\"'... 25398 more characters
}

[12:44:29 AM] 2024-05-12T21:44:17.920Z	INFO	zkCloudWorker Execute start: {
  command: 'execute',
  developer: 'DFST',
  repo: 'worker-example',
  id: '6459034946',
  jobId: '6459034946.1715550257768.pvUbej05hujItNsB2rIJov1ArVu0pwzY',
  job: {
    metadata: 'verify proof',
    logStreams: [],
    task: 'verifyProof',
    maxAttempts: 0,
    args: '{"contractAddress":"B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD","proof":"{\\n  \\"publicInput\\": [],\\n  \\"publicOutput\\": [\\n    \\"1570\\",\\n    \\"1000\\"\\n  ],\\n  \\"maxProofsVerified\\": 2,\\n  \\"proof\\": \\"'... 25398 more characters,
    timeCreated: 1715550257768,
    timeCreatedString: '2024-05-12T21:44:17.768Z',
    jobId: '6459034946.1715550257768.pvUbej05hujItNsB2rIJov1ArVu0pwzY',
    repo: 'worker-example',
    developer: 'DFST',
    chain: 'zeko',
    txNumber: 1,
    jobStatus: 'created',
    id: '6459034946'
  }
}

[12:44:29 AM] 2024-05-12T21:44:17.921Z	INFO	RSS memory start: 1819 MB, changed by 0 MB

[12:44:29 AM] 2024-05-12T21:44:17.921Z	INFO	CloudWorker: constructor {
  id: '6459034946',
  jobId: '6459034946.1715550257768.pvUbej05hujItNsB2rIJov1ArVu0pwzY',
  developer: 'DFST',
  repo: 'worker-example',
  task: 'verifyProof',
  taskId: undefined,
  userId: undefined,
  args: '{"contractAddress":"B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD","proof":"{\\n  \\"publicInput\\": [],\\n  \\"publicOutput\\": [\\n    \\"1570\\",\\n    \\"1000\\"\\n  ],\\n  \\"maxProofsVerified\\": 2,\\n  \\"proof\\": \\"'... 25398 more characters,
  metadata: 'verify proof',
  cache: '/mnt/efs/cache',
  chain: 'zeko',
  webhook: undefined
}

[12:44:29 AM] 2024-05-12T21:44:17.945Z	INFO	getWorker result: {
  repo: 'worker-example',
  size: 23045,
  version: '0.2.3',
  developer: 'DFST',
  countUsed: 12,
  timeUsed: 1715550191901,
  timeDeployed: 1715549296710,
  id: '6459034946',
  protected: false
}

[12:44:29 AM] 2024-05-12T21:44:17.946Z	INFO	Running worker { developer: 'DFST', repo: 'worker-example', version: '0.2.3' }

[12:44:29 AM] 2024-05-12T21:44:17.946Z	INFO	starting worker example version 0.2.3 on chain zeko

[12:44:29 AM] 2024-05-12T21:44:17.999Z	INFO	compiled: 0.009ms

[12:44:29 AM] 2024-05-12T21:44:19.988Z	INFO	RSS memory finished: 1246 MB, changed by -573 MB

[12:44:29 AM] 2024-05-12T21:44:19.988Z	INFO	zkCloudWorker Execute Sync: 2.067s

[12:44:29 AM] 2024-05-12T21:44:20.011Z	INFO	zkCloudWorker Execute: 2.092s

[12:44:29 AM] REPORT RequestId: Duration: 2141.32 ms	Billed Duration: 2142 ms	Memory Size: 10240 MB	Max Memory Used: 2198 MB

[12:44:29 AM] Verify result: Proof verified
[12:44:30 AM] answer: {
  success: true,
  jobId: '6459034946.1715550269706.RhrUdaz4nUb9IVmNzV4vIqFKq83AMmO1',
  result: undefined,
  error: undefined
}
[12:44:41 AM] 2024-05-12T21:44:29.822Z	INFO	worker {
  command: 'execute',
  id: '6459034946',
  jobId: '6459034946.1715550269706.RhrUdaz4nUb9IVmNzV4vIqFKq83AMmO1',
  developer: 'DFST',
  repo: 'worker-example',
  args: '{"contractAddress":"B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD","isMany":true,"proof":"{\\n  \\"publicInput\\": [],\\n  \\"publicOutput\\": [\\n    \\"1570\\",\\n    \\"1000\\"\\n  ],\\n  \\"maxProofsVerified\\": 2,\\n  \\"proof\\": \\"'... 25412 more characters
}

[12:44:41 AM] 2024-05-12T21:44:29.858Z	INFO	zkCloudWorker Execute start: {
  command: 'execute',
  developer: 'DFST',
  repo: 'worker-example',
  id: '6459034946',
  jobId: '6459034946.1715550269706.RhrUdaz4nUb9IVmNzV4vIqFKq83AMmO1',
  job: {
    metadata: 'many',
    logStreams: [],
    task: 'many',
    maxAttempts: 0,
    args: '{"contractAddress":"B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD","isMany":true,"proof":"{\\n  \\"publicInput\\": [],\\n  \\"publicOutput\\": [\\n    \\"1570\\",\\n    \\"1000\\"\\n  ],\\n  \\"maxProofsVerified\\": 2,\\n  \\"proof\\": \\"'... 25412 more characters,
    timeCreated: 1715550269706,
    timeCreatedString: '2024-05-12T21:44:29.706Z',
    jobId: '6459034946.1715550269706.RhrUdaz4nUb9IVmNzV4vIqFKq83AMmO1',
    repo: 'worker-example',
    developer: 'DFST',
    chain: 'zeko',
    txNumber: 1,
    jobStatus: 'created',
    id: '6459034946'
  }
}

[12:44:41 AM] 2024-05-12T21:44:29.859Z	INFO	RSS memory start: 1246 MB, changed by 0 MB

[12:44:41 AM] 2024-05-12T21:44:29.860Z	INFO	CloudWorker: constructor {
  id: '6459034946',
  jobId: '6459034946.1715550269706.RhrUdaz4nUb9IVmNzV4vIqFKq83AMmO1',
  developer: 'DFST',
  repo: 'worker-example',
  task: 'many',
  taskId: undefined,
  userId: undefined,
  args: '{"contractAddress":"B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD","isMany":true,"proof":"{\\n  \\"publicInput\\": [],\\n  \\"publicOutput\\": [\\n    \\"1570\\",\\n    \\"1000\\"\\n  ],\\n  \\"maxProofsVerified\\": 2,\\n  \\"proof\\": \\"'... 25412 more characters,
  metadata: 'many',
  cache: '/mnt/efs/cache',
  chain: 'zeko',
  webhook: undefined
}

[12:44:41 AM] 2024-05-12T21:44:29.884Z	INFO	getWorker result: {
  repo: 'worker-example',
  size: 23045,
  version: '0.2.3',
  developer: 'DFST',
  countUsed: 13,
  timeUsed: 1715550257947,
  timeDeployed: 1715549296710,
  id: '6459034946',
  protected: false
}

[12:44:41 AM] 2024-05-12T21:44:29.884Z	INFO	Running worker { developer: 'DFST', repo: 'worker-example', version: '0.2.3' }

[12:44:41 AM] 2024-05-12T21:44:29.884Z	INFO	starting worker example version 0.2.3 on chain zeko

[12:44:41 AM] 2024-05-12T21:44:29.892Z	INFO	isMany: true

[12:44:41 AM] 2024-05-12T21:44:29.895Z	INFO	Address B62qoCcm6EEg57imjcpWEpyNq9AegFAUfgPjubA43Wr4zeGPiH1SfuE

[12:44:41 AM] 2024-05-12T21:44:29.896Z	INFO	Sending tx...

[12:44:41 AM] 2024-05-12T21:44:31.039Z	INFO	getDeployer: providing deployer B62qkZazA9uzC1Btdoun5uK5piU85o2WoVmdT9rNDYVYFcDF3JZhR9u with balance 281473

[12:44:41 AM] 2024-05-12T21:44:31.040Z	INFO	cloud deployer: EKFWifX3WTDZcYQbtWMppqgWrzYuZwNELsSBhoMMZPSZ7BQU8vg4

[12:44:41 AM] 2024-05-12T21:44:31.185Z	INFO	sender: B62qkZazA9uzC1Btdoun5uK5piU85o2WoVmdT9rNDYVYFcDF3JZhR9u

[12:44:41 AM] 2024-05-12T21:44:31.222Z	INFO	Sender balance: 281473.776710656

[12:44:41 AM] 2024-05-12T21:44:31.222Z	INFO	compiled: 0.01ms

[12:45:23 AM] 2024-05-12T21:45:07.401Z	INFO	prepared tx: 37.505s

[12:45:23 AM] 2024-05-12T21:45:08.336Z	INFO	many tx sent: hash: 5JuB8RFnv9vgrmSiESe1GtssbabHddmuwvT23k6A7W4prikVg8rE status: pending

[12:45:23 AM] 2024-05-12T21:45:08.336Z	INFO	Cloud: releaseDeployer {
  publicKey: 'B62qkZazA9uzC1Btdoun5uK5piU85o2WoVmdT9rNDYVYFcDF3JZhR9u',
  txsHashes: [ '5JuB8RFnv9vgrmSiESe1GtssbabHddmuwvT23k6A7W4prikVg8rE' ]
}

[12:45:23 AM] 2024-05-12T21:45:08.360Z	INFO	RSS memory finished: 1930 MB, changed by 684 MB

[12:45:23 AM] 2024-05-12T21:45:08.360Z	INFO	zkCloudWorker Execute Sync: 38.501s

[12:45:23 AM] 2024-05-12T21:45:08.386Z	INFO	zkCloudWorker Execute: 38.528s

[12:45:23 AM] REPORT RequestId: Duration: 38570.17 ms	Billed Duration: 38571 ms	Memory Size: 10240 MB	Max Memory Used: 2417 MB

[12:45:23 AM] Many result: 5JuB8RFnv9vgrmSiESe1GtssbabHddmuwvT23k6A7W4prikVg8rE
[12:45:23 AM] Many txs sent: 3:45.231 (m:ss.mmm)
[12:45:23 AM] RSS memory Many txs sent: 308 MB, changed by 1 MB
 PASS  tests/contract.test.ts
  Add Worker
    ✓ should prepare data (11 ms)
    ✓ should initialize blockchain (298 ms)
    ✓ should send one transactions (63783 ms)
    ✓ should send transactions with recursive proofs (225235 ms)

Test Suites: 1 passed, 1 total
Tests:       4 passed, 4 total
Snapshots:   0 total
Time:        290.027 s, estimated 300 s
Ran all test suites.

```

```

Contents of yarn.lock:
```
# This file is generated by running "yarn install" inside your project.
# Manual changes might be lost - proceed with caution!

__metadata:
  version: 8
  cacheKey: 10c0

"@ampproject/remapping@npm:^2.2.0":
  version: 2.3.0
  resolution: "@ampproject/remapping@npm:2.3.0"
  dependencies:
    "@jridgewell/gen-mapping": "npm:^0.3.5"
    "@jridgewell/trace-mapping": "npm:^0.3.24"
  checksum: 10c0/81d63cca5443e0f0c72ae18b544cc28c7c0ec2cea46e7cb888bb0e0f411a1191d0d6b7af798d54e30777d8d1488b2ec0732aac2be342d3d7d3ffd271c6f489ed
  languageName: node
  linkType: hard

"@babel/code-frame@npm:^7.0.0, @babel/code-frame@npm:^7.12.13, @babel/code-frame@npm:^7.23.5, @babel/code-frame@npm:^7.24.2":
  version: 7.24.2
  resolution: "@babel/code-frame@npm:7.24.2"
  dependencies:
    "@babel/highlight": "npm:^7.24.2"
    picocolors: "npm:^1.0.0"
  checksum: 10c0/d1d4cba89475ab6aab7a88242e1fd73b15ecb9f30c109b69752956434d10a26a52cbd37727c4eca104b6d45227bd1dfce39a6a6f4a14c9b2f07f871e968cf406
  languageName: node
  linkType: hard

"@babel/compat-data@npm:^7.23.5":
  version: 7.24.4
  resolution: "@babel/compat-data@npm:7.24.4"
  checksum: 10c0/9cd8a9cd28a5ca6db5d0e27417d609f95a8762b655e8c9c97fd2de08997043ae99f0139007083c5e607601c6122e8432c85fe391731b19bf26ad458fa0c60dd3
  languageName: node
  linkType: hard

"@babel/core@npm:^7.11.6, @babel/core@npm:^7.12.3, @babel/core@npm:^7.23.9":
  version: 7.24.5
  resolution: "@babel/core@npm:7.24.5"
  dependencies:
    "@ampproject/remapping": "npm:^2.2.0"
    "@babel/code-frame": "npm:^7.24.2"
    "@babel/generator": "npm:^7.24.5"
    "@babel/helper-compilation-targets": "npm:^7.23.6"
    "@babel/helper-module-transforms": "npm:^7.24.5"
    "@babel/helpers": "npm:^7.24.5"
    "@babel/parser": "npm:^7.24.5"
    "@babel/template": "npm:^7.24.0"
    "@babel/traverse": "npm:^7.24.5"
    "@babel/types": "npm:^7.24.5"
    convert-source-map: "npm:^2.0.0"
    debug: "npm:^4.1.0"
    gensync: "npm:^1.0.0-beta.2"
    json5: "npm:^2.2.3"
    semver: "npm:^6.3.1"
  checksum: 10c0/e26ba810a77bc8e21579a12fc36c79a0a60554404dc9447f2d64eb1f26d181c48d3b97d39d9f158e9911ec7162a8280acfaf2b4b210e975f0dd4bd4dbb1ee159
  languageName: node
  linkType: hard

"@babel/generator@npm:^7.24.5, @babel/generator@npm:^7.7.2":
  version: 7.24.5
  resolution: "@babel/generator@npm:7.24.5"
  dependencies:
    "@babel/types": "npm:^7.24.5"
    "@jridgewell/gen-mapping": "npm:^0.3.5"
    "@jridgewell/trace-mapping": "npm:^0.3.25"
    jsesc: "npm:^2.5.1"
  checksum: 10c0/0d64f880150e7dfb92ceff2b4ac865f36aa1e295120920246492ffd0146562dabf79ba8699af1c8833f8a7954818d4d146b7b02f808df4d6024fb99f98b2f78d
  languageName: node
  linkType: hard

"@babel/helper-compilation-targets@npm:^7.23.6":
  version: 7.23.6
  resolution: "@babel/helper-compilation-targets@npm:7.23.6"
  dependencies:
    "@babel/compat-data": "npm:^7.23.5"
    "@babel/helper-validator-option": "npm:^7.23.5"
    browserslist: "npm:^4.22.2"
    lru-cache: "npm:^5.1.1"
    semver: "npm:^6.3.1"
  checksum: 10c0/ba38506d11185f48b79abf439462ece271d3eead1673dd8814519c8c903c708523428806f05f2ec5efd0c56e4e278698fac967e5a4b5ee842c32415da54bc6fa
  languageName: node
  linkType: hard

"@babel/helper-environment-visitor@npm:^7.22.20":
  version: 7.22.20
  resolution: "@babel/helper-environment-visitor@npm:7.22.20"
  checksum: 10c0/e762c2d8f5d423af89bd7ae9abe35bd4836d2eb401af868a63bbb63220c513c783e25ef001019418560b3fdc6d9a6fb67e6c0b650bcdeb3a2ac44b5c3d2bdd94
  languageName: node
  linkType: hard

"@babel/helper-function-name@npm:^7.23.0":
  version: 7.23.0
  resolution: "@babel/helper-function-name@npm:7.23.0"
  dependencies:
    "@babel/template": "npm:^7.22.15"
    "@babel/types": "npm:^7.23.0"
  checksum: 10c0/d771dd1f3222b120518176733c52b7cadac1c256ff49b1889dbbe5e3fed81db855b8cc4e40d949c9d3eae0e795e8229c1c8c24c0e83f27cfa6ee3766696c6428
  languageName: node
  linkType: hard

"@babel/helper-hoist-variables@npm:^7.22.5":
  version: 7.22.5
  resolution: "@babel/helper-hoist-variables@npm:7.22.5"
  dependencies:
    "@babel/types": "npm:^7.22.5"
  checksum: 10c0/60a3077f756a1cd9f14eb89f0037f487d81ede2b7cfe652ea6869cd4ec4c782b0fb1de01b8494b9a2d2050e3d154d7d5ad3be24806790acfb8cbe2073bf1e208
  languageName: node
  linkType: hard

"@babel/helper-module-imports@npm:^7.24.3":
  version: 7.24.3
  resolution: "@babel/helper-module-imports@npm:7.24.3"
  dependencies:
    "@babel/types": "npm:^7.24.0"
  checksum: 10c0/052c188adcd100f5e8b6ff0c9643ddaabc58b6700d3bbbc26804141ad68375a9f97d9d173658d373d31853019e65f62610239e3295cdd58e573bdcb2fded188d
  languageName: node
  linkType: hard

"@babel/helper-module-transforms@npm:^7.24.5":
  version: 7.24.5
  resolution: "@babel/helper-module-transforms@npm:7.24.5"
  dependencies:
    "@babel/helper-environment-visitor": "npm:^7.22.20"
    "@babel/helper-module-imports": "npm:^7.24.3"
    "@babel/helper-simple-access": "npm:^7.24.5"
    "@babel/helper-split-export-declaration": "npm:^7.24.5"
    "@babel/helper-validator-identifier": "npm:^7.24.5"
  peerDependencies:
    "@babel/core": ^7.0.0
  checksum: 10c0/6e77d72f62b7e87abaea800ea0bccd4d54cde26485750969f5f493c032eb63251eb50c3522cace557781565d51c1d0c4bcc866407d24becfb109c18fb92c978d
  languageName: node
  linkType: hard

"@babel/helper-plugin-utils@npm:^7.0.0, @babel/helper-plugin-utils@npm:^7.10.4, @babel/helper-plugin-utils@npm:^7.12.13, @babel/helper-plugin-utils@npm:^7.14.5, @babel/helper-plugin-utils@npm:^7.24.0, @babel/helper-plugin-utils@npm:^7.8.0":
  version: 7.24.5
  resolution: "@babel/helper-plugin-utils@npm:7.24.5"
  checksum: 10c0/4ae40094e6a2f183281213344f4df60c66b16b19a2bc38d2bb11810a6dc0a0e7ec638957d0e433ff8b615775b8f3cd1b7edbf59440d1b50e73c389fc22913377
  languageName: node
  linkType: hard

"@babel/helper-simple-access@npm:^7.24.5":
  version: 7.24.5
  resolution: "@babel/helper-simple-access@npm:7.24.5"
  dependencies:
    "@babel/types": "npm:^7.24.5"
  checksum: 10c0/d96a0ab790a400f6c2dcbd9457b9ca74b9ba6d0f67ff9cd5bcc73792c8fbbd0847322a0dddbd8987dd98610ee1637c680938c7d83d3ffce7d06d7519d823d996
  languageName: node
  linkType: hard

"@babel/helper-split-export-declaration@npm:^7.24.5":
  version: 7.24.5
  resolution: "@babel/helper-split-export-declaration@npm:7.24.5"
  dependencies:
    "@babel/types": "npm:^7.24.5"
  checksum: 10c0/d7a812d67d031a348f3fb0e6263ce2dbe6038f81536ba7fb16db385383bcd6542b71833194303bf6d3d0e4f7b6b584c9c8fae8772122e2ce68fc9bdf07f4135d
  languageName: node
  linkType: hard

"@babel/helper-string-parser@npm:^7.24.1":
  version: 7.24.1
  resolution: "@babel/helper-string-parser@npm:7.24.1"
  checksum: 10c0/2f9bfcf8d2f9f083785df0501dbab92770111ece2f90d120352fda6dd2a7d47db11b807d111e6f32aa1ba6d763fe2dc6603d153068d672a5d0ad33ca802632b2
  languageName: node
  linkType: hard

"@babel/helper-validator-identifier@npm:^7.24.5":
  version: 7.24.5
  resolution: "@babel/helper-validator-identifier@npm:7.24.5"
  checksum: 10c0/05f957229d89ce95a137d04e27f7d0680d84ae48b6ad830e399db0779341f7d30290f863a93351b4b3bde2166737f73a286ea42856bb07c8ddaa95600d38645c
  languageName: node
  linkType: hard

"@babel/helper-validator-option@npm:^7.23.5":
  version: 7.23.5
  resolution: "@babel/helper-validator-option@npm:7.23.5"
  checksum: 10c0/af45d5c0defb292ba6fd38979e8f13d7da63f9623d8ab9ededc394f67eb45857d2601278d151ae9affb6e03d5d608485806cd45af08b4468a0515cf506510e94
  languageName: node
  linkType: hard

"@babel/helpers@npm:^7.24.5":
  version: 7.24.5
  resolution: "@babel/helpers@npm:7.24.5"
  dependencies:
    "@babel/template": "npm:^7.24.0"
    "@babel/traverse": "npm:^7.24.5"
    "@babel/types": "npm:^7.24.5"
  checksum: 10c0/0630b0223c3a9a34027ddc05b3bac54d68d5957f84e92d2d4814b00448a76e12f9188f9c85cfce2011696d82a8ffcbd8189da097c0af0181d32eb27eca34185e
  languageName: node
  linkType: hard

"@babel/highlight@npm:^7.24.2":
  version: 7.24.5
  resolution: "@babel/highlight@npm:7.24.5"
  dependencies:
    "@babel/helper-validator-identifier": "npm:^7.24.5"
    chalk: "npm:^2.4.2"
    js-tokens: "npm:^4.0.0"
    picocolors: "npm:^1.0.0"
  checksum: 10c0/e98047d3ad24608bfa596d000c861a2cc875af897427f2833b91a4e0d4cead07301a7ec15fa26093dcd61e036e2eed2db338ae54f93016fe0dc785fadc4159db
  languageName: node
  linkType: hard

"@babel/parser@npm:^7.1.0, @babel/parser@npm:^7.14.7, @babel/parser@npm:^7.20.7, @babel/parser@npm:^7.23.9, @babel/parser@npm:^7.24.0, @babel/parser@npm:^7.24.5":
  version: 7.24.5
  resolution: "@babel/parser@npm:7.24.5"
  bin:
    parser: ./bin/babel-parser.js
  checksum: 10c0/8333a6ad5328bad34fa0e12bcee147c3345ea9a438c0909e7c68c6cfbea43c464834ffd7eabd1cbc1c62df0a558e22ffade9f5b29440833ba7b33d96a71f88c0
  languageName: node
  linkType: hard

"@babel/plugin-syntax-async-generators@npm:^7.8.4":
  version: 7.8.4
  resolution: "@babel/plugin-syntax-async-generators@npm:7.8.4"
  dependencies:
    "@babel/helper-plugin-utils": "npm:^7.8.0"
  peerDependencies:
    "@babel/core": ^7.0.0-0
  checksum: 10c0/d13efb282838481348c71073b6be6245b35d4f2f964a8f71e4174f235009f929ef7613df25f8d2338e2d3e44bc4265a9f8638c6aaa136d7a61fe95985f9725c8
  languageName: node
  linkType: hard

"@babel/plugin-syntax-bigint@npm:^7.8.3":
  version: 7.8.3
  resolution: "@babel/plugin-syntax-bigint@npm:7.8.3"
  dependencies:
    "@babel/helper-plugin-utils": "npm:^7.8.0"
  peerDependencies:
    "@babel/core": ^7.0.0-0
  checksum: 10c0/686891b81af2bc74c39013655da368a480f17dd237bf9fbc32048e5865cb706d5a8f65438030da535b332b1d6b22feba336da8fa931f663b6b34e13147d12dde
  languageName: node
  linkType: hard

"@babel/plugin-syntax-class-properties@npm:^7.8.3":
  version: 7.12.13
  resolution: "@babel/plugin-syntax-class-properties@npm:7.12.13"
  dependencies:
    "@babel/helper-plugin-utils": "npm:^7.12.13"
  peerDependencies:
    "@babel/core": ^7.0.0-0
  checksum: 10c0/95168fa186416195280b1264fb18afcdcdcea780b3515537b766cb90de6ce042d42dd6a204a39002f794ae5845b02afb0fd4861a3308a861204a55e68310a120
  languageName: node
  linkType: hard

"@babel/plugin-syntax-import-meta@npm:^7.8.3":
  version: 7.10.4
  resolution: "@babel/plugin-syntax-import-meta@npm:7.10.4"
  dependencies:
    "@babel/helper-plugin-utils": "npm:^7.10.4"
  peerDependencies:
    "@babel/core": ^7.0.0-0
  checksum: 10c0/0b08b5e4c3128523d8e346f8cfc86824f0da2697b1be12d71af50a31aff7a56ceb873ed28779121051475010c28d6146a6bfea8518b150b71eeb4e46190172ee
  languageName: node
  linkType: hard

"@babel/plugin-syntax-json-strings@npm:^7.8.3":
  version: 7.8.3
  resolution: "@babel/plugin-syntax-json-strings@npm:7.8.3"
  dependencies:
    "@babel/helper-plugin-utils": "npm:^7.8.0"
  peerDependencies:
    "@babel/core": ^7.0.0-0
  checksum: 10c0/e98f31b2ec406c57757d115aac81d0336e8434101c224edd9a5c93cefa53faf63eacc69f3138960c8b25401315af03df37f68d316c151c4b933136716ed6906e
  languageName: node
  linkType: hard

"@babel/plugin-syntax-jsx@npm:^7.7.2":
  version: 7.24.1
  resolution: "@babel/plugin-syntax-jsx@npm:7.24.1"
  dependencies:
    "@babel/helper-plugin-utils": "npm:^7.24.0"
  peerDependencies:
    "@babel/core": ^7.0.0-0
  checksum: 10c0/6cec76fbfe6ca81c9345c2904d8d9a8a0df222f9269f0962ed6eb2eb8f3f10c2f15e993d1ef09dbaf97726bf1792b5851cf5bd9a769f966a19448df6be95d19a
  languageName: node
  linkType: hard

"@babel/plugin-syntax-logical-assignment-operators@npm:^7.8.3":
  version: 7.10.4
  resolution: "@babel/plugin-syntax-logical-assignment-operators@npm:7.10.4"
  dependencies:
    "@babel/helper-plugin-utils": "npm:^7.10.4"
  peerDependencies:
    "@babel/core": ^7.0.0-0
  checksum: 10c0/2594cfbe29411ad5bc2ad4058de7b2f6a8c5b86eda525a993959438615479e59c012c14aec979e538d60a584a1a799b60d1b8942c3b18468cb9d99b8fd34cd0b
  languageName: node
  linkType: hard

"@babel/plugin-syntax-nullish-coalescing-operator@npm:^7.8.3":
  version: 7.8.3
  resolution: "@babel/plugin-syntax-nullish-coalescing-operator@npm:7.8.3"
  dependencies:
    "@babel/helper-plugin-utils": "npm:^7.8.0"
  peerDependencies:
    "@babel/core": ^7.0.0-0
  checksum: 10c0/2024fbb1162899094cfc81152449b12bd0cc7053c6d4bda8ac2852545c87d0a851b1b72ed9560673cbf3ef6248257262c3c04aabf73117215c1b9cc7dd2542ce
  languageName: node
  linkType: hard

"@babel/plugin-syntax-numeric-separator@npm:^7.8.3":
  version: 7.10.4
  resolution: "@babel/plugin-syntax-numeric-separator@npm:7.10.4"
  dependencies:
    "@babel/helper-plugin-utils": "npm:^7.10.4"
  peerDependencies:
    "@babel/core": ^7.0.0-0
  checksum: 10c0/c55a82b3113480942c6aa2fcbe976ff9caa74b7b1109ff4369641dfbc88d1da348aceb3c31b6ed311c84d1e7c479440b961906c735d0ab494f688bf2fd5b9bb9
  languageName: node
  linkType: hard

"@babel/plugin-syntax-object-rest-spread@npm:^7.8.3":
  version: 7.8.3
  resolution: "@babel/plugin-syntax-object-rest-spread@npm:7.8.3"
  dependencies:
    "@babel/helper-plugin-utils": "npm:^7.8.0"
  peerDependencies:
    "@babel/core": ^7.0.0-0
  checksum: 10c0/ee1eab52ea6437e3101a0a7018b0da698545230015fc8ab129d292980ec6dff94d265e9e90070e8ae5fed42f08f1622c14c94552c77bcac784b37f503a82ff26
  languageName: node
  linkType: hard

"@babel/plugin-syntax-optional-catch-binding@npm:^7.8.3":
  version: 7.8.3
  resolution: "@babel/plugin-syntax-optional-catch-binding@npm:7.8.3"
  dependencies:
    "@babel/helper-plugin-utils": "npm:^7.8.0"
  peerDependencies:
    "@babel/core": ^7.0.0-0
  checksum: 10c0/27e2493ab67a8ea6d693af1287f7e9acec206d1213ff107a928e85e173741e1d594196f99fec50e9dde404b09164f39dec5864c767212154ffe1caa6af0bc5af
  languageName: node
  linkType: hard

"@babel/plugin-syntax-optional-chaining@npm:^7.8.3":
  version: 7.8.3
  resolution: "@babel/plugin-syntax-optional-chaining@npm:7.8.3"
  dependencies:
    "@babel/helper-plugin-utils": "npm:^7.8.0"
  peerDependencies:
    "@babel/core": ^7.0.0-0
  checksum: 10c0/46edddf2faa6ebf94147b8e8540dfc60a5ab718e2de4d01b2c0bdf250a4d642c2bd47cbcbb739febcb2bf75514dbcefad3c52208787994b8d0f8822490f55e81
  languageName: node
  linkType: hard

"@babel/plugin-syntax-top-level-await@npm:^7.8.3":
  version: 7.14.5
  resolution: "@babel/plugin-syntax-top-level-await@npm:7.14.5"
  dependencies:
    "@babel/helper-plugin-utils": "npm:^7.14.5"
  peerDependencies:
    "@babel/core": ^7.0.0-0
  checksum: 10c0/14bf6e65d5bc1231ffa9def5f0ef30b19b51c218fcecaa78cd1bdf7939dfdf23f90336080b7f5196916368e399934ce5d581492d8292b46a2fb569d8b2da106f
  languageName: node
  linkType: hard

"@babel/plugin-syntax-typescript@npm:^7.7.2":
  version: 7.24.1
  resolution: "@babel/plugin-syntax-typescript@npm:7.24.1"
  dependencies:
    "@babel/helper-plugin-utils": "npm:^7.24.0"
  peerDependencies:
    "@babel/core": ^7.0.0-0
  checksum: 10c0/7a81e277dcfe3138847e8e5944e02a42ff3c2e864aea6f33fd9b70d1556d12b0e70f0d56cc1985d353c91bcbf8fe163e6cc17418da21129b7f7f1d8b9ac00c93
  languageName: node
  linkType: hard

"@babel/template@npm:^7.22.15, @babel/template@npm:^7.24.0, @babel/template@npm:^7.3.3":
  version: 7.24.0
  resolution: "@babel/template@npm:7.24.0"
  dependencies:
    "@babel/code-frame": "npm:^7.23.5"
    "@babel/parser": "npm:^7.24.0"
    "@babel/types": "npm:^7.24.0"
  checksum: 10c0/9d3dd8d22fe1c36bc3bdef6118af1f4b030aaf6d7d2619f5da203efa818a2185d717523486c111de8d99a8649ddf4bbf6b2a7a64962d8411cf6a8fa89f010e54
  languageName: node
  linkType: hard

"@babel/traverse@npm:^7.24.5":
  version: 7.24.5
  resolution: "@babel/traverse@npm:7.24.5"
  dependencies:
    "@babel/code-frame": "npm:^7.24.2"
    "@babel/generator": "npm:^7.24.5"
    "@babel/helper-environment-visitor": "npm:^7.22.20"
    "@babel/helper-function-name": "npm:^7.23.0"
    "@babel/helper-hoist-variables": "npm:^7.22.5"
    "@babel/helper-split-export-declaration": "npm:^7.24.5"
    "@babel/parser": "npm:^7.24.5"
    "@babel/types": "npm:^7.24.5"
    debug: "npm:^4.3.1"
    globals: "npm:^11.1.0"
  checksum: 10c0/3f22534bc2b2ed9208e55ef48af3b32939032b23cb9dc4037447cb108640df70bbb0b9fea86e9c58648949fdc2cb14e89aa79ffa3c62a5dd43459a52fe8c01d1
  languageName: node
  linkType: hard

"@babel/types@npm:^7.0.0, @babel/types@npm:^7.20.7, @babel/types@npm:^7.22.5, @babel/types@npm:^7.23.0, @babel/types@npm:^7.24.0, @babel/types@npm:^7.24.5, @babel/types@npm:^7.3.3, @babel/types@npm:^7.8.3":
  version: 7.24.5
  resolution: "@babel/types@npm:7.24.5"
  dependencies:
    "@babel/helper-string-parser": "npm:^7.24.1"
    "@babel/helper-validator-identifier": "npm:^7.24.5"
    to-fast-properties: "npm:^2.0.0"
  checksum: 10c0/e1284eb046c5e0451b80220d1200e2327e0a8544a2fe45bb62c952e5fdef7099c603d2336b17b6eac3cc046b7a69bfbce67fe56e1c0ea48cd37c65cb88638f2a
  languageName: node
  linkType: hard

"@bcoe/v8-coverage@npm:^0.2.3":
  version: 0.2.3
  resolution: "@bcoe/v8-coverage@npm:0.2.3"
  checksum: 10c0/6b80ae4cb3db53f486da2dc63b6e190a74c8c3cca16bb2733f234a0b6a9382b09b146488ae08e2b22cf00f6c83e20f3e040a2f7894f05c045c946d6a090b1d52
  languageName: node
  linkType: hard

"@isaacs/cliui@npm:^8.0.2":
  version: 8.0.2
  resolution: "@isaacs/cliui@npm:8.0.2"
  dependencies:
    string-width: "npm:^5.1.2"
    string-width-cjs: "npm:string-width@^4.2.0"
    strip-ansi: "npm:^7.0.1"
    strip-ansi-cjs: "npm:strip-ansi@^6.0.1"
    wrap-ansi: "npm:^8.1.0"
    wrap-ansi-cjs: "npm:wrap-ansi@^7.0.0"
  checksum: 10c0/b1bf42535d49f11dc137f18d5e4e63a28c5569de438a221c369483731e9dac9fb797af554e8bf02b6192d1e5eba6e6402cf93900c3d0ac86391d00d04876789e
  languageName: node
  linkType: hard

"@istanbuljs/load-nyc-config@npm:^1.0.0":
  version: 1.1.0
  resolution: "@istanbuljs/load-nyc-config@npm:1.1.0"
  dependencies:
    camelcase: "npm:^5.3.1"
    find-up: "npm:^4.1.0"
    get-package-type: "npm:^0.1.0"
    js-yaml: "npm:^3.13.1"
    resolve-from: "npm:^5.0.0"
  checksum: 10c0/dd2a8b094887da5a1a2339543a4933d06db2e63cbbc2e288eb6431bd832065df0c099d091b6a67436e71b7d6bf85f01ce7c15f9253b4cbebcc3b9a496165ba42
  languageName: node
  linkType: hard

"@istanbuljs/schema@npm:^0.1.2, @istanbuljs/schema@npm:^0.1.3":
  version: 0.1.3
  resolution: "@istanbuljs/schema@npm:0.1.3"
  checksum: 10c0/61c5286771676c9ca3eb2bd8a7310a9c063fb6e0e9712225c8471c582d157392c88f5353581c8c9adbe0dff98892317d2fdfc56c3499aa42e0194405206a963a
  languageName: node
  linkType: hard

"@jest/console@npm:^29.7.0":
  version: 29.7.0
  resolution: "@jest/console@npm:29.7.0"
  dependencies:
    "@jest/types": "npm:^29.6.3"
    "@types/node": "npm:*"
    chalk: "npm:^4.0.0"
    jest-message-util: "npm:^29.7.0"
    jest-util: "npm:^29.7.0"
    slash: "npm:^3.0.0"
  checksum: 10c0/7be408781d0a6f657e969cbec13b540c329671819c2f57acfad0dae9dbfe2c9be859f38fe99b35dba9ff1536937dc6ddc69fdcd2794812fa3c647a1619797f6c
  languageName: node
  linkType: hard

"@jest/core@npm:^29.7.0":
  version: 29.7.0
  resolution: "@jest/core@npm:29.7.0"
  dependencies:
    "@jest/console": "npm:^29.7.0"
    "@jest/reporters": "npm:^29.7.0"
    "@jest/test-result": "npm:^29.7.0"
    "@jest/transform": "npm:^29.7.0"
    "@jest/types": "npm:^29.6.3"
    "@types/node": "npm:*"
    ansi-escapes: "npm:^4.2.1"
    chalk: "npm:^4.0.0"
    ci-info: "npm:^3.2.0"
    exit: "npm:^0.1.2"
    graceful-fs: "npm:^4.2.9"
    jest-changed-files: "npm:^29.7.0"
    jest-config: "npm:^29.7.0"
    jest-haste-map: "npm:^29.7.0"
    jest-message-util: "npm:^29.7.0"
    jest-regex-util: "npm:^29.6.3"
    jest-resolve: "npm:^29.7.0"
    jest-resolve-dependencies: "npm:^29.7.0"
    jest-runner: "npm:^29.7.0"
    jest-runtime: "npm:^29.7.0"
    jest-snapshot: "npm:^29.7.0"
    jest-util: "npm:^29.7.0"
    jest-validate: "npm:^29.7.0"
    jest-watcher: "npm:^29.7.0"
    micromatch: "npm:^4.0.4"
    pretty-format: "npm:^29.7.0"
    slash: "npm:^3.0.0"
    strip-ansi: "npm:^6.0.0"
  peerDependencies:
    node-notifier: ^8.0.1 || ^9.0.0 || ^10.0.0
  peerDependenciesMeta:
    node-notifier:
      optional: true
  checksum: 10c0/934f7bf73190f029ac0f96662c85cd276ec460d407baf6b0dbaec2872e157db4d55a7ee0b1c43b18874602f662b37cb973dda469a4e6d88b4e4845b521adeeb2
  languageName: node
  linkType: hard

"@jest/environment@npm:^29.7.0":
  version: 29.7.0
  resolution: "@jest/environment@npm:29.7.0"
  dependencies:
    "@jest/fake-timers": "npm:^29.7.0"
    "@jest/types": "npm:^29.6.3"
    "@types/node": "npm:*"
    jest-mock: "npm:^29.7.0"
  checksum: 10c0/c7b1b40c618f8baf4d00609022d2afa086d9c6acc706f303a70bb4b67275868f620ad2e1a9efc5edd418906157337cce50589a627a6400bbdf117d351b91ef86
  languageName: node
  linkType: hard

"@jest/expect-utils@npm:^29.7.0":
  version: 29.7.0
  resolution: "@jest/expect-utils@npm:29.7.0"
  dependencies:
    jest-get-type: "npm:^29.6.3"
  checksum: 10c0/60b79d23a5358dc50d9510d726443316253ecda3a7fb8072e1526b3e0d3b14f066ee112db95699b7a43ad3f0b61b750c72e28a5a1cac361d7a2bb34747fa938a
  languageName: node
  linkType: hard

"@jest/expect@npm:^29.7.0":
  version: 29.7.0
  resolution: "@jest/expect@npm:29.7.0"
  dependencies:
    expect: "npm:^29.7.0"
    jest-snapshot: "npm:^29.7.0"
  checksum: 10c0/b41f193fb697d3ced134349250aed6ccea075e48c4f803159db102b826a4e473397c68c31118259868fd69a5cba70e97e1c26d2c2ff716ca39dc73a2ccec037e
  languageName: node
  linkType: hard

"@jest/fake-timers@npm:^29.7.0":
  version: 29.7.0
  resolution: "@jest/fake-timers@npm:29.7.0"
  dependencies:
    "@jest/types": "npm:^29.6.3"
    "@sinonjs/fake-timers": "npm:^10.0.2"
    "@types/node": "npm:*"
    jest-message-util: "npm:^29.7.0"
    jest-mock: "npm:^29.7.0"
    jest-util: "npm:^29.7.0"
  checksum: 10c0/cf0a8bcda801b28dc2e2b2ba36302200ee8104a45ad7a21e6c234148932f826cb3bc57c8df3b7b815aeea0861d7b6ca6f0d4778f93b9219398ef28749e03595c
  languageName: node
  linkType: hard

"@jest/globals@npm:^29.7.0":
  version: 29.7.0
  resolution: "@jest/globals@npm:29.7.0"
  dependencies:
    "@jest/environment": "npm:^29.7.0"
    "@jest/expect": "npm:^29.7.0"
    "@jest/types": "npm:^29.6.3"
    jest-mock: "npm:^29.7.0"
  checksum: 10c0/a385c99396878fe6e4460c43bd7bb0a5cc52befb462cc6e7f2a3810f9e7bcce7cdeb51908fd530391ee452dc856c98baa2c5f5fa8a5b30b071d31ef7f6955cea
  languageName: node
  linkType: hard

"@jest/reporters@npm:^29.7.0":
  version: 29.7.0
  resolution: "@jest/reporters@npm:29.7.0"
  dependencies:
    "@bcoe/v8-coverage": "npm:^0.2.3"
    "@jest/console": "npm:^29.7.0"
    "@jest/test-result": "npm:^29.7.0"
    "@jest/transform": "npm:^29.7.0"
    "@jest/types": "npm:^29.6.3"
    "@jridgewell/trace-mapping": "npm:^0.3.18"
    "@types/node": "npm:*"
    chalk: "npm:^4.0.0"
    collect-v8-coverage: "npm:^1.0.0"
    exit: "npm:^0.1.2"
    glob: "npm:^7.1.3"
    graceful-fs: "npm:^4.2.9"
    istanbul-lib-coverage: "npm:^3.0.0"
    istanbul-lib-instrument: "npm:^6.0.0"
    istanbul-lib-report: "npm:^3.0.0"
    istanbul-lib-source-maps: "npm:^4.0.0"
    istanbul-reports: "npm:^3.1.3"
    jest-message-util: "npm:^29.7.0"
    jest-util: "npm:^29.7.0"
    jest-worker: "npm:^29.7.0"
    slash: "npm:^3.0.0"
    string-length: "npm:^4.0.1"
    strip-ansi: "npm:^6.0.0"
    v8-to-istanbul: "npm:^9.0.1"
  peerDependencies:
    node-notifier: ^8.0.1 || ^9.0.0 || ^10.0.0
  peerDependenciesMeta:
    node-notifier:
      optional: true
  checksum: 10c0/a754402a799541c6e5aff2c8160562525e2a47e7d568f01ebfc4da66522de39cbb809bbb0a841c7052e4270d79214e70aec3c169e4eae42a03bc1a8a20cb9fa2
  languageName: node
  linkType: hard

"@jest/schemas@npm:^29.6.3":
  version: 29.6.3
  resolution: "@jest/schemas@npm:29.6.3"
  dependencies:
    "@sinclair/typebox": "npm:^0.27.8"
  checksum: 10c0/b329e89cd5f20b9278ae1233df74016ebf7b385e0d14b9f4c1ad18d096c4c19d1e687aa113a9c976b16ec07f021ae53dea811fb8c1248a50ac34fbe009fdf6be
  languageName: node
  linkType: hard

"@jest/source-map@npm:^29.6.3":
  version: 29.6.3
  resolution: "@jest/source-map@npm:29.6.3"
  dependencies:
    "@jridgewell/trace-mapping": "npm:^0.3.18"
    callsites: "npm:^3.0.0"
    graceful-fs: "npm:^4.2.9"
  checksum: 10c0/a2f177081830a2e8ad3f2e29e20b63bd40bade294880b595acf2fc09ec74b6a9dd98f126a2baa2bf4941acd89b13a4ade5351b3885c224107083a0059b60a219
  languageName: node
  linkType: hard

"@jest/test-result@npm:^29.7.0":
  version: 29.7.0
  resolution: "@jest/test-result@npm:29.7.0"
  dependencies:
    "@jest/console": "npm:^29.7.0"
    "@jest/types": "npm:^29.6.3"
    "@types/istanbul-lib-coverage": "npm:^2.0.0"
    collect-v8-coverage: "npm:^1.0.0"
  checksum: 10c0/7de54090e54a674ca173470b55dc1afdee994f2d70d185c80236003efd3fa2b753fff51ffcdda8e2890244c411fd2267529d42c4a50a8303755041ee493e6a04
  languageName: node
  linkType: hard

"@jest/test-sequencer@npm:^29.7.0":
  version: 29.7.0
  resolution: "@jest/test-sequencer@npm:29.7.0"
  dependencies:
    "@jest/test-result": "npm:^29.7.0"
    graceful-fs: "npm:^4.2.9"
    jest-haste-map: "npm:^29.7.0"
    slash: "npm:^3.0.0"
  checksum: 10c0/593a8c4272797bb5628984486080cbf57aed09c7cfdc0a634e8c06c38c6bef329c46c0016e84555ee55d1cd1f381518cf1890990ff845524c1123720c8c1481b
  languageName: node
  linkType: hard

"@jest/transform@npm:^29.7.0":
  version: 29.7.0
  resolution: "@jest/transform@npm:29.7.0"
  dependencies:
    "@babel/core": "npm:^7.11.6"
    "@jest/types": "npm:^29.6.3"
    "@jridgewell/trace-mapping": "npm:^0.3.18"
    babel-plugin-istanbul: "npm:^6.1.1"
    chalk: "npm:^4.0.0"
    convert-source-map: "npm:^2.0.0"
    fast-json-stable-stringify: "npm:^2.1.0"
    graceful-fs: "npm:^4.2.9"
    jest-haste-map: "npm:^29.7.0"
    jest-regex-util: "npm:^29.6.3"
    jest-util: "npm:^29.7.0"
    micromatch: "npm:^4.0.4"
    pirates: "npm:^4.0.4"
    slash: "npm:^3.0.0"
    write-file-atomic: "npm:^4.0.2"
  checksum: 10c0/7f4a7f73dcf45dfdf280c7aa283cbac7b6e5a904813c3a93ead7e55873761fc20d5c4f0191d2019004fac6f55f061c82eb3249c2901164ad80e362e7a7ede5a6
  languageName: node
  linkType: hard

"@jest/types@npm:^29.6.3":
  version: 29.6.3
  resolution: "@jest/types@npm:29.6.3"
  dependencies:
    "@jest/schemas": "npm:^29.6.3"
    "@types/istanbul-lib-coverage": "npm:^2.0.0"
    "@types/istanbul-reports": "npm:^3.0.0"
    "@types/node": "npm:*"
    "@types/yargs": "npm:^17.0.8"
    chalk: "npm:^4.0.0"
  checksum: 10c0/ea4e493dd3fb47933b8ccab201ae573dcc451f951dc44ed2a86123cd8541b82aa9d2b1031caf9b1080d6673c517e2dcc25a44b2dc4f3fbc37bfc965d444888c0
  languageName: node
  linkType: hard

"@jridgewell/gen-mapping@npm:^0.3.5":
  version: 0.3.5
  resolution: "@jridgewell/gen-mapping@npm:0.3.5"
  dependencies:
    "@jridgewell/set-array": "npm:^1.2.1"
    "@jridgewell/sourcemap-codec": "npm:^1.4.10"
    "@jridgewell/trace-mapping": "npm:^0.3.24"
  checksum: 10c0/1be4fd4a6b0f41337c4f5fdf4afc3bd19e39c3691924817108b82ffcb9c9e609c273f936932b9fba4b3a298ce2eb06d9bff4eb1cc3bd81c4f4ee1b4917e25feb
  languageName: node
  linkType: hard

"@jridgewell/resolve-uri@npm:^3.1.0":
  version: 3.1.2
  resolution: "@jridgewell/resolve-uri@npm:3.1.2"
  checksum: 10c0/d502e6fb516b35032331406d4e962c21fe77cdf1cbdb49c6142bcbd9e30507094b18972778a6e27cbad756209cfe34b1a27729e6fa08a2eb92b33943f680cf1e
  languageName: node
  linkType: hard

"@jridgewell/set-array@npm:^1.2.1":
  version: 1.2.1
  resolution: "@jridgewell/set-array@npm:1.2.1"
  checksum: 10c0/2a5aa7b4b5c3464c895c802d8ae3f3d2b92fcbe84ad12f8d0bfbb1f5ad006717e7577ee1fd2eac00c088abe486c7adb27976f45d2941ff6b0b92b2c3302c60f4
  languageName: node
  linkType: hard

"@jridgewell/sourcemap-codec@npm:^1.4.10, @jridgewell/sourcemap-codec@npm:^1.4.14":
  version: 1.4.15
  resolution: "@jridgewell/sourcemap-codec@npm:1.4.15"
  checksum: 10c0/0c6b5ae663087558039052a626d2d7ed5208da36cfd707dcc5cea4a07cfc918248403dcb5989a8f7afaf245ce0573b7cc6fd94c4a30453bd10e44d9363940ba5
  languageName: node
  linkType: hard

"@jridgewell/trace-mapping@npm:^0.3.12, @jridgewell/trace-mapping@npm:^0.3.18, @jridgewell/trace-mapping@npm:^0.3.24, @jridgewell/trace-mapping@npm:^0.3.25":
  version: 0.3.25
  resolution: "@jridgewell/trace-mapping@npm:0.3.25"
  dependencies:
    "@jridgewell/resolve-uri": "npm:^3.1.0"
    "@jridgewell/sourcemap-codec": "npm:^1.4.14"
  checksum: 10c0/3d1ce6ebc69df9682a5a8896b414c6537e428a1d68b02fcc8363b04284a8ca0df04d0ee3013132252ab14f2527bc13bea6526a912ecb5658f0e39fd2860b4df4
  languageName: node
  linkType: hard

"@npmcli/agent@npm:^2.0.0":
  version: 2.2.2
  resolution: "@npmcli/agent@npm:2.2.2"
  dependencies:
    agent-base: "npm:^7.1.0"
    http-proxy-agent: "npm:^7.0.0"
    https-proxy-agent: "npm:^7.0.1"
    lru-cache: "npm:^10.0.1"
    socks-proxy-agent: "npm:^8.0.3"
  checksum: 10c0/325e0db7b287d4154ecd164c0815c08007abfb07653cc57bceded17bb7fd240998a3cbdbe87d700e30bef494885eccc725ab73b668020811d56623d145b524ae
  languageName: node
  linkType: hard

"@npmcli/fs@npm:^3.1.0":
  version: 3.1.1
  resolution: "@npmcli/fs@npm:3.1.1"
  dependencies:
    semver: "npm:^7.3.5"
  checksum: 10c0/c37a5b4842bfdece3d14dfdb054f73fe15ed2d3da61b34ff76629fb5b1731647c49166fd2a8bf8b56fcfa51200382385ea8909a3cbecdad612310c114d3f6c99
  languageName: node
  linkType: hard

"@pkgjs/parseargs@npm:^0.11.0":
  version: 0.11.0
  resolution: "@pkgjs/parseargs@npm:0.11.0"
  checksum: 10c0/5bd7576bb1b38a47a7fc7b51ac9f38748e772beebc56200450c4a817d712232b8f1d3ef70532c80840243c657d491cf6a6be1e3a214cff907645819fdc34aadd
  languageName: node
  linkType: hard

"@sinclair/typebox@npm:^0.27.8":
  version: 0.27.8
  resolution: "@sinclair/typebox@npm:0.27.8"
  checksum: 10c0/ef6351ae073c45c2ac89494dbb3e1f87cc60a93ce4cde797b782812b6f97da0d620ae81973f104b43c9b7eaa789ad20ba4f6a1359f1cc62f63729a55a7d22d4e
  languageName: node
  linkType: hard

"@sinonjs/commons@npm:^3.0.0":
  version: 3.0.1
  resolution: "@sinonjs/commons@npm:3.0.1"
  dependencies:
    type-detect: "npm:4.0.8"
  checksum: 10c0/1227a7b5bd6c6f9584274db996d7f8cee2c8c350534b9d0141fc662eaf1f292ea0ae3ed19e5e5271c8fd390d27e492ca2803acd31a1978be2cdc6be0da711403
  languageName: node
  linkType: hard

"@sinonjs/fake-timers@npm:^10.0.2":
  version: 10.3.0
  resolution: "@sinonjs/fake-timers@npm:10.3.0"
  dependencies:
    "@sinonjs/commons": "npm:^3.0.0"
  checksum: 10c0/2e2fb6cc57f227912814085b7b01fede050cd4746ea8d49a1e44d5a0e56a804663b0340ae2f11af7559ea9bf4d087a11f2f646197a660ea3cb04e19efc04aa63
  languageName: node
  linkType: hard

"@types/babel__core@npm:^7.1.14":
  version: 7.20.5
  resolution: "@types/babel__core@npm:7.20.5"
  dependencies:
    "@babel/parser": "npm:^7.20.7"
    "@babel/types": "npm:^7.20.7"
    "@types/babel__generator": "npm:*"
    "@types/babel__template": "npm:*"
    "@types/babel__traverse": "npm:*"
  checksum: 10c0/bdee3bb69951e833a4b811b8ee9356b69a61ed5b7a23e1a081ec9249769117fa83aaaf023bb06562a038eb5845155ff663e2d5c75dd95c1d5ccc91db012868ff
  languageName: node
  linkType: hard

"@types/babel__generator@npm:*":
  version: 7.6.8
  resolution: "@types/babel__generator@npm:7.6.8"
  dependencies:
    "@babel/types": "npm:^7.0.0"
  checksum: 10c0/f0ba105e7d2296bf367d6e055bb22996886c114261e2cb70bf9359556d0076c7a57239d019dee42bb063f565bade5ccb46009bce2044b2952d964bf9a454d6d2
  languageName: node
  linkType: hard

"@types/babel__template@npm:*":
  version: 7.4.4
  resolution: "@types/babel__template@npm:7.4.4"
  dependencies:
    "@babel/parser": "npm:^7.1.0"
    "@babel/types": "npm:^7.0.0"
  checksum: 10c0/cc84f6c6ab1eab1427e90dd2b76ccee65ce940b778a9a67be2c8c39e1994e6f5bbc8efa309f6cea8dc6754994524cd4d2896558df76d92e7a1f46ecffee7112b
  languageName: node
  linkType: hard

"@types/babel__traverse@npm:*, @types/babel__traverse@npm:^7.0.6":
  version: 7.20.5
  resolution: "@types/babel__traverse@npm:7.20.5"
  dependencies:
    "@babel/types": "npm:^7.20.7"
  checksum: 10c0/033abcb2f4c084ad33e30c3efaad82161240f351e3c71b6154ed289946b33b363696c0fbd42502b68e4582a87413c418321f40eb1ea863e34fe525641345e05b
  languageName: node
  linkType: hard

"@types/graceful-fs@npm:^4.1.3":
  version: 4.1.9
  resolution: "@types/graceful-fs@npm:4.1.9"
  dependencies:
    "@types/node": "npm:*"
  checksum: 10c0/235d2fc69741448e853333b7c3d1180a966dd2b8972c8cbcd6b2a0c6cd7f8d582ab2b8e58219dbc62cce8f1b40aa317ff78ea2201cdd8249da5025adebed6f0b
  languageName: node
  linkType: hard

"@types/istanbul-lib-coverage@npm:*, @types/istanbul-lib-coverage@npm:^2.0.0, @types/istanbul-lib-coverage@npm:^2.0.1":
  version: 2.0.6
  resolution: "@types/istanbul-lib-coverage@npm:2.0.6"
  checksum: 10c0/3948088654f3eeb45363f1db158354fb013b362dba2a5c2c18c559484d5eb9f6fd85b23d66c0a7c2fcfab7308d0a585b14dadaca6cc8bf89ebfdc7f8f5102fb7
  languageName: node
  linkType: hard

"@types/istanbul-lib-report@npm:*":
  version: 3.0.3
  resolution: "@types/istanbul-lib-report@npm:3.0.3"
  dependencies:
    "@types/istanbul-lib-coverage": "npm:*"
  checksum: 10c0/247e477bbc1a77248f3c6de5dadaae85ff86ac2d76c5fc6ab1776f54512a745ff2a5f791d22b942e3990ddbd40f3ef5289317c4fca5741bedfaa4f01df89051c
  languageName: node
  linkType: hard

"@types/istanbul-reports@npm:^3.0.0":
  version: 3.0.4
  resolution: "@types/istanbul-reports@npm:3.0.4"
  dependencies:
    "@types/istanbul-lib-report": "npm:*"
  checksum: 10c0/1647fd402aced5b6edac87274af14ebd6b3a85447ef9ad11853a70fd92a98d35f81a5d3ea9fcb5dbb5834e800c6e35b64475e33fcae6bfa9acc70d61497c54ee
  languageName: node
  linkType: hard

"@types/jest@npm:^29.5.12":
  version: 29.5.12
  resolution: "@types/jest@npm:29.5.12"
  dependencies:
    expect: "npm:^29.0.0"
    pretty-format: "npm:^29.0.0"
  checksum: 10c0/25fc8e4c611fa6c4421e631432e9f0a6865a8cb07c9815ec9ac90d630271cad773b2ee5fe08066f7b95bebd18bb967f8ce05d018ee9ab0430f9dfd1d84665b6f
  languageName: node
  linkType: hard

"@types/node@npm:*":
  version: 20.12.11
  resolution: "@types/node@npm:20.12.11"
  dependencies:
    undici-types: "npm:~5.26.4"
  checksum: 10c0/efaa7b08c50ba6e6982ac7d531ba08d5935539ba76e954807df1ff9382a319ead7e003ccaca5ad7cf33ecf53f212507f7c1f2794bd2ff52df6365fef21f6e1fb
  languageName: node
  linkType: hard

"@types/node@npm:^20.14.10":
  version: 20.14.10
  resolution: "@types/node@npm:20.14.10"
  dependencies:
    undici-types: "npm:~5.26.4"
  checksum: 10c0/0b06cff14365c2d0085dc16cc8cbea5c40ec09cfc1fea966be9eeecf35562760bfde8f88e86de6edfaf394501236e229d9c1084fad04fb4dec472ae245d8ae69
  languageName: node
  linkType: hard

"@types/stack-utils@npm:^2.0.0":
  version: 2.0.3
  resolution: "@types/stack-utils@npm:2.0.3"
  checksum: 10c0/1f4658385ae936330581bcb8aa3a066df03867d90281cdf89cc356d404bd6579be0f11902304e1f775d92df22c6dd761d4451c804b0a4fba973e06211e9bd77c
  languageName: node
  linkType: hard

"@types/yargs-parser@npm:*":
  version: 21.0.3
  resolution: "@types/yargs-parser@npm:21.0.3"
  checksum: 10c0/e71c3bd9d0b73ca82e10bee2064c384ab70f61034bbfb78e74f5206283fc16a6d85267b606b5c22cb2a3338373586786fed595b2009825d6a9115afba36560a0
  languageName: node
  linkType: hard

"@types/yargs@npm:^17.0.8":
  version: 17.0.32
  resolution: "@types/yargs@npm:17.0.32"
  dependencies:
    "@types/yargs-parser": "npm:*"
  checksum: 10c0/2095e8aad8a4e66b86147415364266b8d607a3b95b4239623423efd7e29df93ba81bb862784a6e08664f645cc1981b25fd598f532019174cd3e5e1e689e1cccf
  languageName: node
  linkType: hard

"abbrev@npm:^2.0.0":
  version: 2.0.0
  resolution: "abbrev@npm:2.0.0"
  checksum: 10c0/f742a5a107473946f426c691c08daba61a1d15942616f300b5d32fd735be88fef5cba24201757b6c407fd564555fb48c751cfa33519b2605c8a7aadd22baf372
  languageName: node
  linkType: hard

"agent-base@npm:^7.0.2, agent-base@npm:^7.1.0, agent-base@npm:^7.1.1":
  version: 7.1.1
  resolution: "agent-base@npm:7.1.1"
  dependencies:
    debug: "npm:^4.3.4"
  checksum: 10c0/e59ce7bed9c63bf071a30cc471f2933862044c97fd9958967bfe22521d7a0f601ce4ed5a8c011799d0c726ca70312142ae193bbebb60f576b52be19d4a363b50
  languageName: node
  linkType: hard

"aggregate-error@npm:^3.0.0":
  version: 3.1.0
  resolution: "aggregate-error@npm:3.1.0"
  dependencies:
    clean-stack: "npm:^2.0.0"
    indent-string: "npm:^4.0.0"
  checksum: 10c0/a42f67faa79e3e6687a4923050e7c9807db3848a037076f791d10e092677d65c1d2d863b7848560699f40fc0502c19f40963fb1cd1fb3d338a7423df8e45e039
  languageName: node
  linkType: hard

"ansi-escapes@npm:^4.2.1":
  version: 4.3.2
  resolution: "ansi-escapes@npm:4.3.2"
  dependencies:
    type-fest: "npm:^0.21.3"
  checksum: 10c0/da917be01871525a3dfcf925ae2977bc59e8c513d4423368645634bf5d4ceba5401574eb705c1e92b79f7292af5a656f78c5725a4b0e1cec97c4b413705c1d50
  languageName: node
  linkType: hard

"ansi-regex@npm:^5.0.1":
  version: 5.0.1
  resolution: "ansi-regex@npm:5.0.1"
  checksum: 10c0/9a64bb8627b434ba9327b60c027742e5d17ac69277960d041898596271d992d4d52ba7267a63ca10232e29f6107fc8a835f6ce8d719b88c5f8493f8254813737
  languageName: node
  linkType: hard

"ansi-regex@npm:^6.0.1":
  version: 6.0.1
  resolution: "ansi-regex@npm:6.0.1"
  checksum: 10c0/cbe16dbd2c6b2735d1df7976a7070dd277326434f0212f43abf6d87674095d247968209babdaad31bb00882fa68807256ba9be340eec2f1004de14ca75f52a08
  languageName: node
  linkType: hard

"ansi-styles@npm:^3.2.1":
  version: 3.2.1
  resolution: "ansi-styles@npm:3.2.1"
  dependencies:
    color-convert: "npm:^1.9.0"
  checksum: 10c0/ece5a8ef069fcc5298f67e3f4771a663129abd174ea2dfa87923a2be2abf6cd367ef72ac87942da00ce85bd1d651d4cd8595aebdb1b385889b89b205860e977b
  languageName: node
  linkType: hard

"ansi-styles@npm:^4.0.0, ansi-styles@npm:^4.1.0":
  version: 4.3.0
  resolution: "ansi-styles@npm:4.3.0"
  dependencies:
    color-convert: "npm:^2.0.1"
  checksum: 10c0/895a23929da416f2bd3de7e9cb4eabd340949328ab85ddd6e484a637d8f6820d485f53933446f5291c3b760cbc488beb8e88573dd0f9c7daf83dccc8fe81b041
  languageName: node
  linkType: hard

"ansi-styles@npm:^5.0.0":
  version: 5.2.0
  resolution: "ansi-styles@npm:5.2.0"
  checksum: 10c0/9c4ca80eb3c2fb7b33841c210d2f20807f40865d27008d7c3f707b7f95cab7d67462a565e2388ac3285b71cb3d9bb2173de8da37c57692a362885ec34d6e27df
  languageName: node
  linkType: hard

"ansi-styles@npm:^6.1.0":
  version: 6.2.1
  resolution: "ansi-styles@npm:6.2.1"
  checksum: 10c0/5d1ec38c123984bcedd996eac680d548f31828bd679a66db2bdf11844634dde55fec3efa9c6bb1d89056a5e79c1ac540c4c784d592ea1d25028a92227d2f2d5c
  languageName: node
  linkType: hard

"anymatch@npm:^3.0.3":
  version: 3.1.3
  resolution: "anymatch@npm:3.1.3"
  dependencies:
    normalize-path: "npm:^3.0.0"
    picomatch: "npm:^2.0.4"
  checksum: 10c0/57b06ae984bc32a0d22592c87384cd88fe4511b1dd7581497831c56d41939c8a001b28e7b853e1450f2bf61992dfcaa8ae2d0d161a0a90c4fb631ef07098fbac
  languageName: node
  linkType: hard

"argparse@npm:^1.0.7":
  version: 1.0.10
  resolution: "argparse@npm:1.0.10"
  dependencies:
    sprintf-js: "npm:~1.0.2"
  checksum: 10c0/b2972c5c23c63df66bca144dbc65d180efa74f25f8fd9b7d9a0a6c88ae839db32df3d54770dcb6460cf840d232b60695d1a6b1053f599d84e73f7437087712de
  languageName: node
  linkType: hard

"asynckit@npm:^0.4.0":
  version: 0.4.0
  resolution: "asynckit@npm:0.4.0"
  checksum: 10c0/d73e2ddf20c4eb9337e1b3df1a0f6159481050a5de457c55b14ea2e5cb6d90bb69e004c9af54737a5ee0917fcf2c9e25de67777bbe58261847846066ba75bc9d
  languageName: node
  linkType: hard

"axios@npm:^1.7.2":
  version: 1.7.2
  resolution: "axios@npm:1.7.2"
  dependencies:
    follow-redirects: "npm:^1.15.6"
    form-data: "npm:^4.0.0"
    proxy-from-env: "npm:^1.1.0"
  checksum: 10c0/cbd47ce380fe045313364e740bb03b936420b8b5558c7ea36a4563db1258c658f05e40feb5ddd41f6633fdd96d37ac2a76f884dad599c5b0224b4c451b3fa7ae
  languageName: node
  linkType: hard

"babel-jest@npm:^29.7.0":
  version: 29.7.0
  resolution: "babel-jest@npm:29.7.0"
  dependencies:
    "@jest/transform": "npm:^29.7.0"
    "@types/babel__core": "npm:^7.1.14"
    babel-plugin-istanbul: "npm:^6.1.1"
    babel-preset-jest: "npm:^29.6.3"
    chalk: "npm:^4.0.0"
    graceful-fs: "npm:^4.2.9"
    slash: "npm:^3.0.0"
  peerDependencies:
    "@babel/core": ^7.8.0
  checksum: 10c0/2eda9c1391e51936ca573dd1aedfee07b14c59b33dbe16ef347873ddd777bcf6e2fc739681e9e9661ab54ef84a3109a03725be2ac32cd2124c07ea4401cbe8c1
  languageName: node
  linkType: hard

"babel-plugin-istanbul@npm:^6.1.1":
  version: 6.1.1
  resolution: "babel-plugin-istanbul@npm:6.1.1"
  dependencies:
    "@babel/helper-plugin-utils": "npm:^7.0.0"
    "@istanbuljs/load-nyc-config": "npm:^1.0.0"
    "@istanbuljs/schema": "npm:^0.1.2"
    istanbul-lib-instrument: "npm:^5.0.4"
    test-exclude: "npm:^6.0.0"
  checksum: 10c0/1075657feb705e00fd9463b329921856d3775d9867c5054b449317d39153f8fbcebd3e02ebf00432824e647faff3683a9ca0a941325ef1afe9b3c4dd51b24beb
  languageName: node
  linkType: hard

"babel-plugin-jest-hoist@npm:^29.6.3":
  version: 29.6.3
  resolution: "babel-plugin-jest-hoist@npm:29.6.3"
  dependencies:
    "@babel/template": "npm:^7.3.3"
    "@babel/types": "npm:^7.3.3"
    "@types/babel__core": "npm:^7.1.14"
    "@types/babel__traverse": "npm:^7.0.6"
  checksum: 10c0/7e6451caaf7dce33d010b8aafb970e62f1b0c0b57f4978c37b0d457bbcf0874d75a395a102daf0bae0bd14eafb9f6e9a165ee5e899c0a4f1f3bb2e07b304ed2e
  languageName: node
  linkType: hard

"babel-preset-current-node-syntax@npm:^1.0.0":
  version: 1.0.1
  resolution: "babel-preset-current-node-syntax@npm:1.0.1"
  dependencies:
    "@babel/plugin-syntax-async-generators": "npm:^7.8.4"
    "@babel/plugin-syntax-bigint": "npm:^7.8.3"
    "@babel/plugin-syntax-class-properties": "npm:^7.8.3"
    "@babel/plugin-syntax-import-meta": "npm:^7.8.3"
    "@babel/plugin-syntax-json-strings": "npm:^7.8.3"
    "@babel/plugin-syntax-logical-assignment-operators": "npm:^7.8.3"
    "@babel/plugin-syntax-nullish-coalescing-operator": "npm:^7.8.3"
    "@babel/plugin-syntax-numeric-separator": "npm:^7.8.3"
    "@babel/plugin-syntax-object-rest-spread": "npm:^7.8.3"
    "@babel/plugin-syntax-optional-catch-binding": "npm:^7.8.3"
    "@babel/plugin-syntax-optional-chaining": "npm:^7.8.3"
    "@babel/plugin-syntax-top-level-await": "npm:^7.8.3"
  peerDependencies:
    "@babel/core": ^7.0.0
  checksum: 10c0/5ba39a3a0e6c37d25e56a4fb843be632dac98d54706d8a0933f9bcb1a07987a96d55c2b5a6c11788a74063fb2534fe68c1f1dbb6c93626850c785e0938495627
  languageName: node
  linkType: hard

"babel-preset-jest@npm:^29.6.3":
  version: 29.6.3
  resolution: "babel-preset-jest@npm:29.6.3"
  dependencies:
    babel-plugin-jest-hoist: "npm:^29.6.3"
    babel-preset-current-node-syntax: "npm:^1.0.0"
  peerDependencies:
    "@babel/core": ^7.0.0
  checksum: 10c0/ec5fd0276b5630b05f0c14bb97cc3815c6b31600c683ebb51372e54dcb776cff790bdeeabd5b8d01ede375a040337ccbf6a3ccd68d3a34219125945e167ad943
  languageName: node
  linkType: hard

"balanced-match@npm:^1.0.0":
  version: 1.0.2
  resolution: "balanced-match@npm:1.0.2"
  checksum: 10c0/9308baf0a7e4838a82bbfd11e01b1cb0f0cf2893bc1676c27c2a8c0e70cbae1c59120c3268517a8ae7fb6376b4639ef81ca22582611dbee4ed28df945134aaee
  languageName: node
  linkType: hard

"blakejs@npm:1.2.1":
  version: 1.2.1
  resolution: "blakejs@npm:1.2.1"
  checksum: 10c0/c284557ce55b9c70203f59d381f1b85372ef08ee616a90162174d1291a45d3e5e809fdf9edab6e998740012538515152471dc4f1f9dbfa974ba2b9c1f7b9aad7
  languageName: node
  linkType: hard

"brace-expansion@npm:^1.1.7":
  version: 1.1.11
  resolution: "brace-expansion@npm:1.1.11"
  dependencies:
    balanced-match: "npm:^1.0.0"
    concat-map: "npm:0.0.1"
  checksum: 10c0/695a56cd058096a7cb71fb09d9d6a7070113c7be516699ed361317aca2ec169f618e28b8af352e02ab4233fb54eb0168460a40dc320bab0034b36ab59aaad668
  languageName: node
  linkType: hard

"brace-expansion@npm:^2.0.1":
  version: 2.0.1
  resolution: "brace-expansion@npm:2.0.1"
  dependencies:
    balanced-match: "npm:^1.0.0"
  checksum: 10c0/b358f2fe060e2d7a87aa015979ecea07f3c37d4018f8d6deb5bd4c229ad3a0384fe6029bb76cd8be63c81e516ee52d1a0673edbe2023d53a5191732ae3c3e49f
  languageName: node
  linkType: hard

"braces@npm:^3.0.2":
  version: 3.0.2
  resolution: "braces@npm:3.0.2"
  dependencies:
    fill-range: "npm:^7.0.1"
  checksum: 10c0/321b4d675791479293264019156ca322163f02dc06e3c4cab33bb15cd43d80b51efef69b0930cfde3acd63d126ebca24cd0544fa6f261e093a0fb41ab9dda381
  languageName: node
  linkType: hard

"browserslist@npm:^4.22.2":
  version: 4.23.0
  resolution: "browserslist@npm:4.23.0"
  dependencies:
    caniuse-lite: "npm:^1.0.30001587"
    electron-to-chromium: "npm:^1.4.668"
    node-releases: "npm:^2.0.14"
    update-browserslist-db: "npm:^1.0.13"
  bin:
    browserslist: cli.js
  checksum: 10c0/8e9cc154529062128d02a7af4d8adeead83ca1df8cd9ee65a88e2161039f3d68a4d40fea7353cab6bae4c16182dec2fdd9a1cf7dc2a2935498cee1af0e998943
  languageName: node
  linkType: hard

"bs-logger@npm:0.x":
  version: 0.2.6
  resolution: "bs-logger@npm:0.2.6"
  dependencies:
    fast-json-stable-stringify: "npm:2.x"
  checksum: 10c0/80e89aaaed4b68e3374ce936f2eb097456a0dddbf11f75238dbd53140b1e39259f0d248a5089ed456f1158984f22191c3658d54a713982f676709fbe1a6fa5a0
  languageName: node
  linkType: hard

"bser@npm:2.1.1":
  version: 2.1.1
  resolution: "bser@npm:2.1.1"
  dependencies:
    node-int64: "npm:^0.4.0"
  checksum: 10c0/24d8dfb7b6d457d73f32744e678a60cc553e4ec0e9e1a01cf614b44d85c3c87e188d3cc78ef0442ce5032ee6818de20a0162ba1074725c0d08908f62ea979227
  languageName: node
  linkType: hard

"buffer-from@npm:^1.0.0":
  version: 1.1.2
  resolution: "buffer-from@npm:1.1.2"
  checksum: 10c0/124fff9d66d691a86d3b062eff4663fe437a9d9ee4b47b1b9e97f5a5d14f6d5399345db80f796827be7c95e70a8e765dd404b7c3ff3b3324f98e9b0c8826cc34
  languageName: node
  linkType: hard

"cacache@npm:^18.0.0":
  version: 18.0.3
  resolution: "cacache@npm:18.0.3"
  dependencies:
    "@npmcli/fs": "npm:^3.1.0"
    fs-minipass: "npm:^3.0.0"
    glob: "npm:^10.2.2"
    lru-cache: "npm:^10.0.1"
    minipass: "npm:^7.0.3"
    minipass-collect: "npm:^2.0.1"
    minipass-flush: "npm:^1.0.5"
    minipass-pipeline: "npm:^1.2.4"
    p-map: "npm:^4.0.0"
    ssri: "npm:^10.0.0"
    tar: "npm:^6.1.11"
    unique-filename: "npm:^3.0.0"
  checksum: 10c0/dfda92840bb371fb66b88c087c61a74544363b37a265023223a99965b16a16bbb87661fe4948718d79df6e0cc04e85e62784fbcf1832b2a5e54ff4c46fbb45b7
  languageName: node
  linkType: hard

"cachedir@npm:^2.4.0":
  version: 2.4.0
  resolution: "cachedir@npm:2.4.0"
  checksum: 10c0/76bff9009f2c446cd3777a4aede99af634a89670a67012b8041f65e951d3d36cefe8940341ea80c72219ee9913fa1f6146824cd9dfe9874a4bded728af7e6d76
  languageName: node
  linkType: hard

"callsites@npm:^3.0.0":
  version: 3.1.0
  resolution: "callsites@npm:3.1.0"
  checksum: 10c0/fff92277400eb06c3079f9e74f3af120db9f8ea03bad0e84d9aede54bbe2d44a56cccb5f6cf12211f93f52306df87077ecec5b712794c5a9b5dac6d615a3f301
  languageName: node
  linkType: hard

"camelcase@npm:^5.3.1":
  version: 5.3.1
  resolution: "camelcase@npm:5.3.1"
  checksum: 10c0/92ff9b443bfe8abb15f2b1513ca182d16126359ad4f955ebc83dc4ddcc4ef3fdd2c078bc223f2673dc223488e75c99b16cc4d056624374b799e6a1555cf61b23
  languageName: node
  linkType: hard

"camelcase@npm:^6.2.0":
  version: 6.3.0
  resolution: "camelcase@npm:6.3.0"
  checksum: 10c0/0d701658219bd3116d12da3eab31acddb3f9440790c0792e0d398f0a520a6a4058018e546862b6fba89d7ae990efaeb97da71e1913e9ebf5a8b5621a3d55c710
  languageName: node
  linkType: hard

"caniuse-lite@npm:^1.0.30001587":
  version: 1.0.30001617
  resolution: "caniuse-lite@npm:1.0.30001617"
  checksum: 10c0/711702501063968b2807d1a8f40981e66f45eb8962968b4b84c70392dc804cee62845e8e391e9749f78ff41ca48be2a4a7a38620c44af526b5e03bc3c7a1bc0a
  languageName: node
  linkType: hard

"chalk@npm:^2.4.2":
  version: 2.4.2
  resolution: "chalk@npm:2.4.2"
  dependencies:
    ansi-styles: "npm:^3.2.1"
    escape-string-regexp: "npm:^1.0.5"
    supports-color: "npm:^5.3.0"
  checksum: 10c0/e6543f02ec877732e3a2d1c3c3323ddb4d39fbab687c23f526e25bd4c6a9bf3b83a696e8c769d078e04e5754921648f7821b2a2acfd16c550435fd630026e073
  languageName: node
  linkType: hard

"chalk@npm:^4.0.0, chalk@npm:^4.1.2":
  version: 4.1.2
  resolution: "chalk@npm:4.1.2"
  dependencies:
    ansi-styles: "npm:^4.1.0"
    supports-color: "npm:^7.1.0"
  checksum: 10c0/4a3fef5cc34975c898ffe77141450f679721df9dde00f6c304353fa9c8b571929123b26a0e4617bde5018977eb655b31970c297b91b63ee83bb82aeb04666880
  languageName: node
  linkType: hard

"char-regex@npm:^1.0.2":
  version: 1.0.2
  resolution: "char-regex@npm:1.0.2"
  checksum: 10c0/57a09a86371331e0be35d9083ba429e86c4f4648ecbe27455dbfb343037c16ee6fdc7f6b61f433a57cc5ded5561d71c56a150e018f40c2ffb7bc93a26dae341e
  languageName: node
  linkType: hard

"chownr@npm:^2.0.0":
  version: 2.0.0
  resolution: "chownr@npm:2.0.0"
  checksum: 10c0/594754e1303672171cc04e50f6c398ae16128eb134a88f801bf5354fd96f205320f23536a045d9abd8b51024a149696e51231565891d4efdab8846021ecf88e6
  languageName: node
  linkType: hard

"ci-info@npm:^3.2.0":
  version: 3.9.0
  resolution: "ci-info@npm:3.9.0"
  checksum: 10c0/6f0109e36e111684291d46123d491bc4e7b7a1934c3a20dea28cba89f1d4a03acd892f5f6a81ed3855c38647e285a150e3c9ba062e38943bef57fee6c1554c3a
  languageName: node
  linkType: hard

"cjs-module-lexer@npm:^1.0.0":
  version: 1.3.1
  resolution: "cjs-module-lexer@npm:1.3.1"
  checksum: 10c0/cd98fbf3c7f4272fb0ebf71d08d0c54bc75ce0e30b9d186114e15b4ba791f3d310af65a339eea2a0318599af2818cdd8886d353b43dfab94468f72987397ad16
  languageName: node
  linkType: hard

"clean-stack@npm:^2.0.0":
  version: 2.2.0
  resolution: "clean-stack@npm:2.2.0"
  checksum: 10c0/1f90262d5f6230a17e27d0c190b09d47ebe7efdd76a03b5a1127863f7b3c9aec4c3e6c8bb3a7bbf81d553d56a1fd35728f5a8ef4c63f867ac8d690109742a8c1
  languageName: node
  linkType: hard

"cliui@npm:^8.0.1":
  version: 8.0.1
  resolution: "cliui@npm:8.0.1"
  dependencies:
    string-width: "npm:^4.2.0"
    strip-ansi: "npm:^6.0.1"
    wrap-ansi: "npm:^7.0.0"
  checksum: 10c0/4bda0f09c340cbb6dfdc1ed508b3ca080f12992c18d68c6be4d9cf51756033d5266e61ec57529e610dacbf4da1c634423b0c1b11037709cc6b09045cbd815df5
  languageName: node
  linkType: hard

"co@npm:^4.6.0":
  version: 4.6.0
  resolution: "co@npm:4.6.0"
  checksum: 10c0/c0e85ea0ca8bf0a50cbdca82efc5af0301240ca88ebe3644a6ffb8ffe911f34d40f8fbcf8f1d52c5ddd66706abd4d3bfcd64259f1e8e2371d4f47573b0dc8c28
  languageName: node
  linkType: hard

"collect-v8-coverage@npm:^1.0.0":
  version: 1.0.2
  resolution: "collect-v8-coverage@npm:1.0.2"
  checksum: 10c0/ed7008e2e8b6852c5483b444a3ae6e976e088d4335a85aa0a9db2861c5f1d31bd2d7ff97a60469b3388deeba661a619753afbe201279fb159b4b9548ab8269a1
  languageName: node
  linkType: hard

"color-convert@npm:^1.9.0":
  version: 1.9.3
  resolution: "color-convert@npm:1.9.3"
  dependencies:
    color-name: "npm:1.1.3"
  checksum: 10c0/5ad3c534949a8c68fca8fbc6f09068f435f0ad290ab8b2f76841b9e6af7e0bb57b98cb05b0e19fe33f5d91e5a8611ad457e5f69e0a484caad1f7487fd0e8253c
  languageName: node
  linkType: hard

"color-convert@npm:^2.0.1":
  version: 2.0.1
  resolution: "color-convert@npm:2.0.1"
  dependencies:
    color-name: "npm:~1.1.4"
  checksum: 10c0/37e1150172f2e311fe1b2df62c6293a342ee7380da7b9cfdba67ea539909afbd74da27033208d01d6d5cfc65ee7868a22e18d7e7648e004425441c0f8a15a7d7
  languageName: node
  linkType: hard

"color-name@npm:1.1.3":
  version: 1.1.3
  resolution: "color-name@npm:1.1.3"
  checksum: 10c0/566a3d42cca25b9b3cd5528cd7754b8e89c0eb646b7f214e8e2eaddb69994ac5f0557d9c175eb5d8f0ad73531140d9c47525085ee752a91a2ab15ab459caf6d6
  languageName: node
  linkType: hard

"color-name@npm:~1.1.4":
  version: 1.1.4
  resolution: "color-name@npm:1.1.4"
  checksum: 10c0/a1a3f914156960902f46f7f56bc62effc6c94e84b2cae157a526b1c1f74b677a47ec602bf68a61abfa2b42d15b7c5651c6dbe72a43af720bc588dff885b10f95
  languageName: node
  linkType: hard

"combined-stream@npm:^1.0.8":
  version: 1.0.8
  resolution: "combined-stream@npm:1.0.8"
  dependencies:
    delayed-stream: "npm:~1.0.0"
  checksum: 10c0/0dbb829577e1b1e839fa82b40c07ffaf7de8a09b935cadd355a73652ae70a88b4320db322f6634a4ad93424292fa80973ac6480986247f1734a1137debf271d5
  languageName: node
  linkType: hard

"concat-map@npm:0.0.1":
  version: 0.0.1
  resolution: "concat-map@npm:0.0.1"
  checksum: 10c0/c996b1cfdf95b6c90fee4dae37e332c8b6eb7d106430c17d538034c0ad9a1630cb194d2ab37293b1bdd4d779494beee7786d586a50bd9376fd6f7bcc2bd4c98f
  languageName: node
  linkType: hard

"convert-source-map@npm:^2.0.0":
  version: 2.0.0
  resolution: "convert-source-map@npm:2.0.0"
  checksum: 10c0/8f2f7a27a1a011cc6cc88cc4da2d7d0cfa5ee0369508baae3d98c260bb3ac520691464e5bbe4ae7cdf09860c1d69ecc6f70c63c6e7c7f7e3f18ec08484dc7d9b
  languageName: node
  linkType: hard

"create-jest@npm:^29.7.0":
  version: 29.7.0
  resolution: "create-jest@npm:29.7.0"
  dependencies:
    "@jest/types": "npm:^29.6.3"
    chalk: "npm:^4.0.0"
    exit: "npm:^0.1.2"
    graceful-fs: "npm:^4.2.9"
    jest-config: "npm:^29.7.0"
    jest-util: "npm:^29.7.0"
    prompts: "npm:^2.0.1"
  bin:
    create-jest: bin/create-jest.js
  checksum: 10c0/e7e54c280692470d3398f62a6238fd396327e01c6a0757002833f06d00afc62dd7bfe04ff2b9cd145264460e6b4d1eb8386f2925b7e567f97939843b7b0e812f
  languageName: node
  linkType: hard

"cross-spawn@npm:^7.0.0, cross-spawn@npm:^7.0.3":
  version: 7.0.3
  resolution: "cross-spawn@npm:7.0.3"
  dependencies:
    path-key: "npm:^3.1.0"
    shebang-command: "npm:^2.0.0"
    which: "npm:^2.0.1"
  checksum: 10c0/5738c312387081c98d69c98e105b6327b069197f864a60593245d64c8089c8a0a744e16349281210d56835bb9274130d825a78b2ad6853ca13cfbeffc0c31750
  languageName: node
  linkType: hard

"debug@npm:4, debug@npm:^4.1.0, debug@npm:^4.1.1, debug@npm:^4.3.1, debug@npm:^4.3.4":
  version: 4.3.4
  resolution: "debug@npm:4.3.4"
  dependencies:
    ms: "npm:2.1.2"
  peerDependenciesMeta:
    supports-color:
      optional: true
  checksum: 10c0/cedbec45298dd5c501d01b92b119cd3faebe5438c3917ff11ae1bff86a6c722930ac9c8659792824013168ba6db7c4668225d845c633fbdafbbf902a6389f736
  languageName: node
  linkType: hard

"dedent@npm:^1.0.0":
  version: 1.5.3
  resolution: "dedent@npm:1.5.3"
  peerDependencies:
    babel-plugin-macros: ^3.1.0
  peerDependenciesMeta:
    babel-plugin-macros:
      optional: true
  checksum: 10c0/d94bde6e6f780be4da4fd760288fcf755ec368872f4ac5218197200d86430aeb8d90a003a840bff1c20221188e3f23adced0119cb811c6873c70d0ac66d12832
  languageName: node
  linkType: hard

"deepmerge@npm:^4.2.2":
  version: 4.3.1
  resolution: "deepmerge@npm:4.3.1"
  checksum: 10c0/e53481aaf1aa2c4082b5342be6b6d8ad9dfe387bc92ce197a66dea08bd4265904a087e75e464f14d1347cf2ac8afe1e4c16b266e0561cc5df29382d3c5f80044
  languageName: node
  linkType: hard

"delayed-stream@npm:~1.0.0":
  version: 1.0.0
  resolution: "delayed-stream@npm:1.0.0"
  checksum: 10c0/d758899da03392e6712f042bec80aa293bbe9e9ff1b2634baae6a360113e708b91326594c8a486d475c69d6259afb7efacdc3537bfcda1c6c648e390ce601b19
  languageName: node
  linkType: hard

"detect-newline@npm:^3.0.0":
  version: 3.1.0
  resolution: "detect-newline@npm:3.1.0"
  checksum: 10c0/c38cfc8eeb9fda09febb44bcd85e467c970d4e3bf526095394e5a4f18bc26dd0cf6b22c69c1fa9969261521c593836db335c2795218f6d781a512aea2fb8209d
  languageName: node
  linkType: hard

"diff-sequences@npm:^29.6.3":
  version: 29.6.3
  resolution: "diff-sequences@npm:29.6.3"
  checksum: 10c0/32e27ac7dbffdf2fb0eb5a84efd98a9ad084fbabd5ac9abb8757c6770d5320d2acd172830b28c4add29bb873d59420601dfc805ac4064330ce59b1adfd0593b2
  languageName: node
  linkType: hard

"eastasianwidth@npm:^0.2.0":
  version: 0.2.0
  resolution: "eastasianwidth@npm:0.2.0"
  checksum: 10c0/26f364ebcdb6395f95124fda411f63137a4bfb5d3a06453f7f23dfe52502905bd84e0488172e0f9ec295fdc45f05c23d5d91baf16bd26f0fe9acd777a188dc39
  languageName: node
  linkType: hard

"electron-to-chromium@npm:^1.4.668":
  version: 1.4.761
  resolution: "electron-to-chromium@npm:1.4.761"
  checksum: 10c0/f5b2e114235280ab0cf525c3949d752458772695d979667642939bcc26b89da59794f1a8b2601d5259e9dbf0d51aab635b0a2a1ac9930be13a5a8fda7e8754f6
  languageName: node
  linkType: hard

"emittery@npm:^0.13.1":
  version: 0.13.1
  resolution: "emittery@npm:0.13.1"
  checksum: 10c0/1573d0ae29ab34661b6c63251ff8f5facd24ccf6a823f19417ae8ba8c88ea450325788c67f16c99edec8de4b52ce93a10fe441ece389fd156e88ee7dab9bfa35
  languageName: node
  linkType: hard

"emoji-regex@npm:^8.0.0":
  version: 8.0.0
  resolution: "emoji-regex@npm:8.0.0"
  checksum: 10c0/b6053ad39951c4cf338f9092d7bfba448cdfd46fe6a2a034700b149ac9ffbc137e361cbd3c442297f86bed2e5f7576c1b54cc0a6bf8ef5106cc62f496af35010
  languageName: node
  linkType: hard

"emoji-regex@npm:^9.2.2":
  version: 9.2.2
  resolution: "emoji-regex@npm:9.2.2"
  checksum: 10c0/af014e759a72064cf66e6e694a7fc6b0ed3d8db680427b021a89727689671cefe9d04151b2cad51dbaf85d5ba790d061cd167f1cf32eb7b281f6368b3c181639
  languageName: node
  linkType: hard

"encoding@npm:^0.1.13":
  version: 0.1.13
  resolution: "encoding@npm:0.1.13"
  dependencies:
    iconv-lite: "npm:^0.6.2"
  checksum: 10c0/36d938712ff00fe1f4bac88b43bcffb5930c1efa57bbcdca9d67e1d9d6c57cfb1200fb01efe0f3109b2ce99b231f90779532814a81370a1bd3274a0f58585039
  languageName: node
  linkType: hard

"env-paths@npm:^2.2.0":
  version: 2.2.1
  resolution: "env-paths@npm:2.2.1"
  checksum: 10c0/285325677bf00e30845e330eec32894f5105529db97496ee3f598478e50f008c5352a41a30e5e72ec9de8a542b5a570b85699cd63bd2bc646dbcb9f311d83bc4
  languageName: node
  linkType: hard

"err-code@npm:^2.0.2":
  version: 2.0.3
  resolution: "err-code@npm:2.0.3"
  checksum: 10c0/b642f7b4dd4a376e954947550a3065a9ece6733ab8e51ad80db727aaae0817c2e99b02a97a3d6cecc648a97848305e728289cf312d09af395403a90c9d4d8a66
  languageName: node
  linkType: hard

"error-ex@npm:^1.3.1":
  version: 1.3.2
  resolution: "error-ex@npm:1.3.2"
  dependencies:
    is-arrayish: "npm:^0.2.1"
  checksum: 10c0/ba827f89369b4c93382cfca5a264d059dfefdaa56ecc5e338ffa58a6471f5ed93b71a20add1d52290a4873d92381174382658c885ac1a2305f7baca363ce9cce
  languageName: node
  linkType: hard

"escalade@npm:^3.1.1, escalade@npm:^3.1.2":
  version: 3.1.2
  resolution: "escalade@npm:3.1.2"
  checksum: 10c0/6b4adafecd0682f3aa1cd1106b8fff30e492c7015b178bc81b2d2f75106dabea6c6d6e8508fc491bd58e597c74abb0e8e2368f943ecb9393d4162e3c2f3cf287
  languageName: node
  linkType: hard

"escape-string-regexp@npm:^1.0.5":
  version: 1.0.5
  resolution: "escape-string-regexp@npm:1.0.5"
  checksum: 10c0/a968ad453dd0c2724e14a4f20e177aaf32bb384ab41b674a8454afe9a41c5e6fe8903323e0a1052f56289d04bd600f81278edf140b0fcc02f5cac98d0f5b5371
  languageName: node
  linkType: hard

"escape-string-regexp@npm:^2.0.0":
  version: 2.0.0
  resolution: "escape-string-regexp@npm:2.0.0"
  checksum: 10c0/2530479fe8db57eace5e8646c9c2a9c80fa279614986d16dcc6bcaceb63ae77f05a851ba6c43756d816c61d7f4534baf56e3c705e3e0d884818a46808811c507
  languageName: node
  linkType: hard

"esprima@npm:^4.0.0":
  version: 4.0.1
  resolution: "esprima@npm:4.0.1"
  bin:
    esparse: ./bin/esparse.js
    esvalidate: ./bin/esvalidate.js
  checksum: 10c0/ad4bab9ead0808cf56501750fd9d3fb276f6b105f987707d059005d57e182d18a7c9ec7f3a01794ebddcca676773e42ca48a32d67a250c9d35e009ca613caba3
  languageName: node
  linkType: hard

"execa@npm:^5.0.0":
  version: 5.1.1
  resolution: "execa@npm:5.1.1"
  dependencies:
    cross-spawn: "npm:^7.0.3"
    get-stream: "npm:^6.0.0"
    human-signals: "npm:^2.1.0"
    is-stream: "npm:^2.0.0"
    merge-stream: "npm:^2.0.0"
    npm-run-path: "npm:^4.0.1"
    onetime: "npm:^5.1.2"
    signal-exit: "npm:^3.0.3"
    strip-final-newline: "npm:^2.0.0"
  checksum: 10c0/c8e615235e8de4c5addf2fa4c3da3e3aa59ce975a3e83533b4f6a71750fb816a2e79610dc5f1799b6e28976c9ae86747a36a606655bf8cb414a74d8d507b304f
  languageName: node
  linkType: hard

"exit@npm:^0.1.2":
  version: 0.1.2
  resolution: "exit@npm:0.1.2"
  checksum: 10c0/71d2ad9b36bc25bb8b104b17e830b40a08989be7f7d100b13269aaae7c3784c3e6e1e88a797e9e87523993a25ba27c8958959a554535370672cfb4d824af8989
  languageName: node
  linkType: hard

"expect@npm:^29.0.0, expect@npm:^29.7.0":
  version: 29.7.0
  resolution: "expect@npm:29.7.0"
  dependencies:
    "@jest/expect-utils": "npm:^29.7.0"
    jest-get-type: "npm:^29.6.3"
    jest-matcher-utils: "npm:^29.7.0"
    jest-message-util: "npm:^29.7.0"
    jest-util: "npm:^29.7.0"
  checksum: 10c0/2eddeace66e68b8d8ee5f7be57f3014b19770caaf6815c7a08d131821da527fb8c8cb7b3dcd7c883d2d3d8d184206a4268984618032d1e4b16dc8d6596475d41
  languageName: node
  linkType: hard

"exponential-backoff@npm:^3.1.1":
  version: 3.1.1
  resolution: "exponential-backoff@npm:3.1.1"
  checksum: 10c0/160456d2d647e6019640bd07111634d8c353038d9fa40176afb7cd49b0548bdae83b56d05e907c2cce2300b81cae35d800ef92fefb9d0208e190fa3b7d6bb579
  languageName: node
  linkType: hard

"fast-json-stable-stringify@npm:2.x, fast-json-stable-stringify@npm:^2.1.0":
  version: 2.1.0
  resolution: "fast-json-stable-stringify@npm:2.1.0"
  checksum: 10c0/7f081eb0b8a64e0057b3bb03f974b3ef00135fbf36c1c710895cd9300f13c94ba809bb3a81cf4e1b03f6e5285610a61abbd7602d0652de423144dfee5a389c9b
  languageName: node
  linkType: hard

"fb-watchman@npm:^2.0.0":
  version: 2.0.2
  resolution: "fb-watchman@npm:2.0.2"
  dependencies:
    bser: "npm:2.1.1"
  checksum: 10c0/feae89ac148adb8f6ae8ccd87632e62b13563e6fb114cacb5265c51f585b17e2e268084519fb2edd133872f1d47a18e6bfd7e5e08625c0d41b93149694187581
  languageName: node
  linkType: hard

"fill-range@npm:^7.0.1":
  version: 7.0.1
  resolution: "fill-range@npm:7.0.1"
  dependencies:
    to-regex-range: "npm:^5.0.1"
  checksum: 10c0/7cdad7d426ffbaadf45aeb5d15ec675bbd77f7597ad5399e3d2766987ed20bda24d5fac64b3ee79d93276f5865608bb22344a26b9b1ae6c4d00bd94bf611623f
  languageName: node
  linkType: hard

"find-up@npm:^4.0.0, find-up@npm:^4.1.0":
  version: 4.1.0
  resolution: "find-up@npm:4.1.0"
  dependencies:
    locate-path: "npm:^5.0.0"
    path-exists: "npm:^4.0.0"
  checksum: 10c0/0406ee89ebeefa2d507feb07ec366bebd8a6167ae74aa4e34fb4c4abd06cf782a3ce26ae4194d70706f72182841733f00551c209fe575cb00bd92104056e78c1
  languageName: node
  linkType: hard

"follow-redirects@npm:^1.15.6":
  version: 1.15.6
  resolution: "follow-redirects@npm:1.15.6"
  peerDependenciesMeta:
    debug:
      optional: true
  checksum: 10c0/9ff767f0d7be6aa6870c82ac79cf0368cd73e01bbc00e9eb1c2a16fbb198ec105e3c9b6628bb98e9f3ac66fe29a957b9645bcb9a490bb7aa0d35f908b6b85071
  languageName: node
  linkType: hard

"foreground-child@npm:^3.1.0":
  version: 3.1.1
  resolution: "foreground-child@npm:3.1.1"
  dependencies:
    cross-spawn: "npm:^7.0.0"
    signal-exit: "npm:^4.0.1"
  checksum: 10c0/9700a0285628abaeb37007c9a4d92bd49f67210f09067638774338e146c8e9c825c5c877f072b2f75f41dc6a2d0be8664f79ffc03f6576649f54a84fb9b47de0
  languageName: node
  linkType: hard

"form-data@npm:^4.0.0":
  version: 4.0.0
  resolution: "form-data@npm:4.0.0"
  dependencies:
    asynckit: "npm:^0.4.0"
    combined-stream: "npm:^1.0.8"
    mime-types: "npm:^2.1.12"
  checksum: 10c0/cb6f3ac49180be03ff07ba3ff125f9eba2ff0b277fb33c7fc47569fc5e616882c5b1c69b9904c4c4187e97dd0419dd03b134174756f296dec62041e6527e2c6e
  languageName: node
  linkType: hard

"fs-minipass@npm:^2.0.0":
  version: 2.1.0
  resolution: "fs-minipass@npm:2.1.0"
  dependencies:
    minipass: "npm:^3.0.0"
  checksum: 10c0/703d16522b8282d7299337539c3ed6edddd1afe82435e4f5b76e34a79cd74e488a8a0e26a636afc2440e1a23b03878e2122e3a2cfe375a5cf63c37d92b86a004
  languageName: node
  linkType: hard

"fs-minipass@npm:^3.0.0":
  version: 3.0.3
  resolution: "fs-minipass@npm:3.0.3"
  dependencies:
    minipass: "npm:^7.0.3"
  checksum: 10c0/63e80da2ff9b621e2cb1596abcb9207f1cf82b968b116ccd7b959e3323144cce7fb141462200971c38bbf2ecca51695069db45265705bed09a7cd93ae5b89f94
  languageName: node
  linkType: hard

"fs.realpath@npm:^1.0.0":
  version: 1.0.0
  resolution: "fs.realpath@npm:1.0.0"
  checksum: 10c0/444cf1291d997165dfd4c0d58b69f0e4782bfd9149fd72faa4fe299e68e0e93d6db941660b37dd29153bf7186672ececa3b50b7e7249477b03fdf850f287c948
  languageName: node
  linkType: hard

"fsevents@npm:^2.3.2":
  version: 2.3.3
  resolution: "fsevents@npm:2.3.3"
  dependencies:
    node-gyp: "npm:latest"
  checksum: 10c0/a1f0c44595123ed717febbc478aa952e47adfc28e2092be66b8ab1635147254ca6cfe1df792a8997f22716d4cbafc73309899ff7bfac2ac3ad8cf2e4ecc3ec60
  conditions: os=darwin
  languageName: node
  linkType: hard

"fsevents@patch:fsevents@npm%3A^2.3.2#optional!builtin<compat/fsevents>":
  version: 2.3.3
  resolution: "fsevents@patch:fsevents@npm%3A2.3.3#optional!builtin<compat/fsevents>::version=2.3.3&hash=df0bf1"
  dependencies:
    node-gyp: "npm:latest"
  conditions: os=darwin
  languageName: node
  linkType: hard

"function-bind@npm:^1.1.2":
  version: 1.1.2
  resolution: "function-bind@npm:1.1.2"
  checksum: 10c0/d8680ee1e5fcd4c197e4ac33b2b4dce03c71f4d91717292785703db200f5c21f977c568d28061226f9b5900cbcd2c84463646134fd5337e7925e0942bc3f46d5
  languageName: node
  linkType: hard

"gensync@npm:^1.0.0-beta.2":
  version: 1.0.0-beta.2
  resolution: "gensync@npm:1.0.0-beta.2"
  checksum: 10c0/782aba6cba65b1bb5af3b095d96249d20edbe8df32dbf4696fd49be2583faf676173bf4809386588828e4dd76a3354fcbeb577bab1c833ccd9fc4577f26103f8
  languageName: node
  linkType: hard

"get-caller-file@npm:^2.0.5":
  version: 2.0.5
  resolution: "get-caller-file@npm:2.0.5"
  checksum: 10c0/c6c7b60271931fa752aeb92f2b47e355eac1af3a2673f47c9589e8f8a41adc74d45551c1bc57b5e66a80609f10ffb72b6f575e4370d61cc3f7f3aaff01757cde
  languageName: node
  linkType: hard

"get-package-type@npm:^0.1.0":
  version: 0.1.0
  resolution: "get-package-type@npm:0.1.0"
  checksum: 10c0/e34cdf447fdf1902a1f6d5af737eaadf606d2ee3518287abde8910e04159368c268568174b2e71102b87b26c2020486f126bfca9c4fb1ceb986ff99b52ecd1be
  languageName: node
  linkType: hard

"get-stream@npm:^6.0.0":
  version: 6.0.1
  resolution: "get-stream@npm:6.0.1"
  checksum: 10c0/49825d57d3fd6964228e6200a58169464b8e8970489b3acdc24906c782fb7f01f9f56f8e6653c4a50713771d6658f7cfe051e5eb8c12e334138c9c918b296341
  languageName: node
  linkType: hard

"glob@npm:^10.2.2, glob@npm:^10.3.10":
  version: 10.3.14
  resolution: "glob@npm:10.3.14"
  dependencies:
    foreground-child: "npm:^3.1.0"
    jackspeak: "npm:^2.3.6"
    minimatch: "npm:^9.0.1"
    minipass: "npm:^7.0.4"
    path-scurry: "npm:^1.11.0"
  bin:
    glob: dist/esm/bin.mjs
  checksum: 10c0/19126e53b99c94dea9b3509500e22b325e24d2674523fc95b9fe710f1549ad7e091fbb0704c325c53d3a172fc21a8251acce5395c4f3efd872a2e65a376c82a1
  languageName: node
  linkType: hard

"glob@npm:^7.1.3, glob@npm:^7.1.4":
  version: 7.2.3
  resolution: "glob@npm:7.2.3"
  dependencies:
    fs.realpath: "npm:^1.0.0"
    inflight: "npm:^1.0.4"
    inherits: "npm:2"
    minimatch: "npm:^3.1.1"
    once: "npm:^1.3.0"
    path-is-absolute: "npm:^1.0.0"
  checksum: 10c0/65676153e2b0c9095100fe7f25a778bf45608eeb32c6048cf307f579649bcc30353277b3b898a3792602c65764e5baa4f643714dfbdfd64ea271d210c7a425fe
  languageName: node
  linkType: hard

"globals@npm:^11.1.0":
  version: 11.12.0
  resolution: "globals@npm:11.12.0"
  checksum: 10c0/758f9f258e7b19226bd8d4af5d3b0dcf7038780fb23d82e6f98932c44e239f884847f1766e8fa9cc5635ccb3204f7fa7314d4408dd4002a5e8ea827b4018f0a1
  languageName: node
  linkType: hard

"graceful-fs@npm:^4.2.6, graceful-fs@npm:^4.2.9":
  version: 4.2.11
  resolution: "graceful-fs@npm:4.2.11"
  checksum: 10c0/386d011a553e02bc594ac2ca0bd6d9e4c22d7fa8cfbfc448a6d148c59ea881b092db9dbe3547ae4b88e55f1b01f7c4a2ecc53b310c042793e63aa44cf6c257f2
  languageName: node
  linkType: hard

"has-flag@npm:^3.0.0":
  version: 3.0.0
  resolution: "has-flag@npm:3.0.0"
  checksum: 10c0/1c6c83b14b8b1b3c25b0727b8ba3e3b647f99e9e6e13eb7322107261de07a4c1be56fc0d45678fc376e09772a3a1642ccdaf8fc69bdf123b6c086598397ce473
  languageName: node
  linkType: hard

"has-flag@npm:^4.0.0":
  version: 4.0.0
  resolution: "has-flag@npm:4.0.0"
  checksum: 10c0/2e789c61b7888d66993e14e8331449e525ef42aac53c627cc53d1c3334e768bcb6abdc4f5f0de1478a25beec6f0bd62c7549058b7ac53e924040d4f301f02fd1
  languageName: node
  linkType: hard

"hasown@npm:^2.0.0":
  version: 2.0.2
  resolution: "hasown@npm:2.0.2"
  dependencies:
    function-bind: "npm:^1.1.2"
  checksum: 10c0/3769d434703b8ac66b209a4cca0737519925bbdb61dd887f93a16372b14694c63ff4e797686d87c90f08168e81082248b9b028bad60d4da9e0d1148766f56eb9
  languageName: node
  linkType: hard

"html-escaper@npm:^2.0.0":
  version: 2.0.2
  resolution: "html-escaper@npm:2.0.2"
  checksum: 10c0/208e8a12de1a6569edbb14544f4567e6ce8ecc30b9394fcaa4e7bb1e60c12a7c9a1ed27e31290817157e8626f3a4f29e76c8747030822eb84a6abb15c255f0a0
  languageName: node
  linkType: hard

"http-cache-semantics@npm:^4.1.1":
  version: 4.1.1
  resolution: "http-cache-semantics@npm:4.1.1"
  checksum: 10c0/ce1319b8a382eb3cbb4a37c19f6bfe14e5bb5be3d09079e885e8c513ab2d3cd9214902f8a31c9dc4e37022633ceabfc2d697405deeaf1b8f3552bb4ed996fdfc
  languageName: node
  linkType: hard

"http-proxy-agent@npm:^7.0.0":
  version: 7.0.2
  resolution: "http-proxy-agent@npm:7.0.2"
  dependencies:
    agent-base: "npm:^7.1.0"
    debug: "npm:^4.3.4"
  checksum: 10c0/4207b06a4580fb85dd6dff521f0abf6db517489e70863dca1a0291daa7f2d3d2d6015a57bd702af068ea5cf9f1f6ff72314f5f5b4228d299c0904135d2aef921
  languageName: node
  linkType: hard

"https-proxy-agent@npm:^7.0.1":
  version: 7.0.4
  resolution: "https-proxy-agent@npm:7.0.4"
  dependencies:
    agent-base: "npm:^7.0.2"
    debug: "npm:4"
  checksum: 10c0/bc4f7c38da32a5fc622450b6cb49a24ff596f9bd48dcedb52d2da3fa1c1a80e100fb506bd59b326c012f21c863c69b275c23de1a01d0b84db396822fdf25e52b
  languageName: node
  linkType: hard

"human-signals@npm:^2.1.0":
  version: 2.1.0
  resolution: "human-signals@npm:2.1.0"
  checksum: 10c0/695edb3edfcfe9c8b52a76926cd31b36978782062c0ed9b1192b36bebc75c4c87c82e178dfcb0ed0fc27ca59d434198aac0bd0be18f5781ded775604db22304a
  languageName: node
  linkType: hard

"iconv-lite@npm:^0.6.2":
  version: 0.6.3
  resolution: "iconv-lite@npm:0.6.3"
  dependencies:
    safer-buffer: "npm:>= 2.1.2 < 3.0.0"
  checksum: 10c0/98102bc66b33fcf5ac044099d1257ba0b7ad5e3ccd3221f34dd508ab4070edff183276221684e1e0555b145fce0850c9f7d2b60a9fcac50fbb4ea0d6e845a3b1
  languageName: node
  linkType: hard

"import-local@npm:^3.0.2":
  version: 3.1.0
  resolution: "import-local@npm:3.1.0"
  dependencies:
    pkg-dir: "npm:^4.2.0"
    resolve-cwd: "npm:^3.0.0"
  bin:
    import-local-fixture: fixtures/cli.js
  checksum: 10c0/c67ecea72f775fe8684ca3d057e54bdb2ae28c14bf261d2607c269c18ea0da7b730924c06262eca9aed4b8ab31e31d65bc60b50e7296c85908a56e2f7d41ecd2
  languageName: node
  linkType: hard

"imurmurhash@npm:^0.1.4":
  version: 0.1.4
  resolution: "imurmurhash@npm:0.1.4"
  checksum: 10c0/8b51313850dd33605c6c9d3fd9638b714f4c4c40250cff658209f30d40da60f78992fb2df5dabee4acf589a6a82bbc79ad5486550754bd9ec4e3fc0d4a57d6a6
  languageName: node
  linkType: hard

"indent-string@npm:^4.0.0":
  version: 4.0.0
  resolution: "indent-string@npm:4.0.0"
  checksum: 10c0/1e1904ddb0cb3d6cce7cd09e27a90184908b7a5d5c21b92e232c93579d314f0b83c246ffb035493d0504b1e9147ba2c9b21df0030f48673fba0496ecd698161f
  languageName: node
  linkType: hard

"inflight@npm:^1.0.4":
  version: 1.0.6
  resolution: "inflight@npm:1.0.6"
  dependencies:
    once: "npm:^1.3.0"
    wrappy: "npm:1"
  checksum: 10c0/7faca22584600a9dc5b9fca2cd5feb7135ac8c935449837b315676b4c90aa4f391ec4f42240178244b5a34e8bede1948627fda392ca3191522fc46b34e985ab2
  languageName: node
  linkType: hard

"inherits@npm:2":
  version: 2.0.4
  resolution: "inherits@npm:2.0.4"
  checksum: 10c0/4e531f648b29039fb7426fb94075e6545faa1eb9fe83c29f0b6d9e7263aceb4289d2d4557db0d428188eeb449cc7c5e77b0a0b2c4e248ff2a65933a0dee49ef2
  languageName: node
  linkType: hard

"ip-address@npm:^9.0.5":
  version: 9.0.5
  resolution: "ip-address@npm:9.0.5"
  dependencies:
    jsbn: "npm:1.1.0"
    sprintf-js: "npm:^1.1.3"
  checksum: 10c0/331cd07fafcb3b24100613e4b53e1a2b4feab11e671e655d46dc09ee233da5011284d09ca40c4ecbdfe1d0004f462958675c224a804259f2f78d2465a87824bc
  languageName: node
  linkType: hard

"is-arrayish@npm:^0.2.1":
  version: 0.2.1
  resolution: "is-arrayish@npm:0.2.1"
  checksum: 10c0/e7fb686a739068bb70f860b39b67afc62acc62e36bb61c5f965768abce1873b379c563e61dd2adad96ebb7edf6651111b385e490cf508378959b0ed4cac4e729
  languageName: node
  linkType: hard

"is-core-module@npm:^2.13.0":
  version: 2.13.1
  resolution: "is-core-module@npm:2.13.1"
  dependencies:
    hasown: "npm:^2.0.0"
  checksum: 10c0/2cba9903aaa52718f11c4896dabc189bab980870aae86a62dc0d5cedb546896770ee946fb14c84b7adf0735f5eaea4277243f1b95f5cefa90054f92fbcac2518
  languageName: node
  linkType: hard

"is-fullwidth-code-point@npm:^3.0.0":
  version: 3.0.0
  resolution: "is-fullwidth-code-point@npm:3.0.0"
  checksum: 10c0/bb11d825e049f38e04c06373a8d72782eee0205bda9d908cc550ccb3c59b99d750ff9537982e01733c1c94a58e35400661f57042158ff5e8f3e90cf936daf0fc
  languageName: node
  linkType: hard

"is-generator-fn@npm:^2.0.0":
  version: 2.1.0
  resolution: "is-generator-fn@npm:2.1.0"
  checksum: 10c0/2957cab387997a466cd0bf5c1b6047bd21ecb32bdcfd8996b15747aa01002c1c88731802f1b3d34ac99f4f6874b626418bd118658cf39380fe5fff32a3af9c4d
  languageName: node
  linkType: hard

"is-lambda@npm:^1.0.1":
  version: 1.0.1
  resolution: "is-lambda@npm:1.0.1"
  checksum: 10c0/85fee098ae62ba6f1e24cf22678805473c7afd0fb3978a3aa260e354cb7bcb3a5806cf0a98403188465efedec41ab4348e8e4e79305d409601323855b3839d4d
  languageName: node
  linkType: hard

"is-number@npm:^7.0.0":
  version: 7.0.0
  resolution: "is-number@npm:7.0.0"
  checksum: 10c0/b4686d0d3053146095ccd45346461bc8e53b80aeb7671cc52a4de02dbbf7dc0d1d2a986e2fe4ae206984b4d34ef37e8b795ebc4f4295c978373e6575e295d811
  languageName: node
  linkType: hard

"is-stream@npm:^2.0.0":
  version: 2.0.1
  resolution: "is-stream@npm:2.0.1"
  checksum: 10c0/7c284241313fc6efc329b8d7f08e16c0efeb6baab1b4cd0ba579eb78e5af1aa5da11e68559896a2067cd6c526bd29241dda4eb1225e627d5aa1a89a76d4635a5
  languageName: node
  linkType: hard

"isexe@npm:^2.0.0":
  version: 2.0.0
  resolution: "isexe@npm:2.0.0"
  checksum: 10c0/228cfa503fadc2c31596ab06ed6aa82c9976eec2bfd83397e7eaf06d0ccf42cd1dfd6743bf9aeb01aebd4156d009994c5f76ea898d2832c1fe342da923ca457d
  languageName: node
  linkType: hard

"isexe@npm:^3.1.1":
  version: 3.1.1
  resolution: "isexe@npm:3.1.1"
  checksum: 10c0/9ec257654093443eb0a528a9c8cbba9c0ca7616ccb40abd6dde7202734d96bb86e4ac0d764f0f8cd965856aacbff2f4ce23e730dc19dfb41e3b0d865ca6fdcc7
  languageName: node
  linkType: hard

"isomorphic-fetch@npm:^3.0.0":
  version: 3.0.0
  resolution: "isomorphic-fetch@npm:3.0.0"
  dependencies:
    node-fetch: "npm:^2.6.1"
    whatwg-fetch: "npm:^3.4.1"
  checksum: 10c0/511b1135c6d18125a07de661091f5e7403b7640060355d2d704ce081e019bc1862da849482d079ce5e2559b8976d3de7709566063aec1b908369c0b98a2b075b
  languageName: node
  linkType: hard

"istanbul-lib-coverage@npm:^3.0.0, istanbul-lib-coverage@npm:^3.2.0":
  version: 3.2.2
  resolution: "istanbul-lib-coverage@npm:3.2.2"
  checksum: 10c0/6c7ff2106769e5f592ded1fb418f9f73b4411fd5a084387a5410538332b6567cd1763ff6b6cadca9b9eb2c443cce2f7ea7d7f1b8d315f9ce58539793b1e0922b
  languageName: node
  linkType: hard

"istanbul-lib-instrument@npm:^5.0.4":
  version: 5.2.1
  resolution: "istanbul-lib-instrument@npm:5.2.1"
  dependencies:
    "@babel/core": "npm:^7.12.3"
    "@babel/parser": "npm:^7.14.7"
    "@istanbuljs/schema": "npm:^0.1.2"
    istanbul-lib-coverage: "npm:^3.2.0"
    semver: "npm:^6.3.0"
  checksum: 10c0/8a1bdf3e377dcc0d33ec32fe2b6ecacdb1e4358fd0eb923d4326bb11c67622c0ceb99600a680f3dad5d29c66fc1991306081e339b4d43d0b8a2ab2e1d910a6ee
  languageName: node
  linkType: hard

"istanbul-lib-instrument@npm:^6.0.0":
  version: 6.0.2
  resolution: "istanbul-lib-instrument@npm:6.0.2"
  dependencies:
    "@babel/core": "npm:^7.23.9"
    "@babel/parser": "npm:^7.23.9"
    "@istanbuljs/schema": "npm:^0.1.3"
    istanbul-lib-coverage: "npm:^3.2.0"
    semver: "npm:^7.5.4"
  checksum: 10c0/405c6ac037bf8c7ee7495980b0cd5544b2c53078c10534d0c9ceeb92a9ea7dcf8510f58ccfce31336458a8fa6ccef27b570bbb602abaa8c1650f5496a807477c
  languageName: node
  linkType: hard

"istanbul-lib-report@npm:^3.0.0":
  version: 3.0.1
  resolution: "istanbul-lib-report@npm:3.0.1"
  dependencies:
    istanbul-lib-coverage: "npm:^3.0.0"
    make-dir: "npm:^4.0.0"
    supports-color: "npm:^7.1.0"
  checksum: 10c0/84323afb14392de8b6a5714bd7e9af845cfbd56cfe71ed276cda2f5f1201aea673c7111901227ee33e68e4364e288d73861eb2ed48f6679d1e69a43b6d9b3ba7
  languageName: node
  linkType: hard

"istanbul-lib-source-maps@npm:^4.0.0":
  version: 4.0.1
  resolution: "istanbul-lib-source-maps@npm:4.0.1"
  dependencies:
    debug: "npm:^4.1.1"
    istanbul-lib-coverage: "npm:^3.0.0"
    source-map: "npm:^0.6.1"
  checksum: 10c0/19e4cc405016f2c906dff271a76715b3e881fa9faeb3f09a86cb99b8512b3a5ed19cadfe0b54c17ca0e54c1142c9c6de9330d65506e35873994e06634eebeb66
  languageName: node
  linkType: hard

"istanbul-reports@npm:^3.1.3":
  version: 3.1.7
  resolution: "istanbul-reports@npm:3.1.7"
  dependencies:
    html-escaper: "npm:^2.0.0"
    istanbul-lib-report: "npm:^3.0.0"
  checksum: 10c0/a379fadf9cf8dc5dfe25568115721d4a7eb82fbd50b005a6672aff9c6989b20cc9312d7865814e0859cd8df58cbf664482e1d3604be0afde1f7fc3ccc1394a51
  languageName: node
  linkType: hard

"jackspeak@npm:^2.3.6":
  version: 2.3.6
  resolution: "jackspeak@npm:2.3.6"
  dependencies:
    "@isaacs/cliui": "npm:^8.0.2"
    "@pkgjs/parseargs": "npm:^0.11.0"
  dependenciesMeta:
    "@pkgjs/parseargs":
      optional: true
  checksum: 10c0/f01d8f972d894cd7638bc338e9ef5ddb86f7b208ce177a36d718eac96ec86638a6efa17d0221b10073e64b45edc2ce15340db9380b1f5d5c5d000cbc517dc111
  languageName: node
  linkType: hard

"jest-changed-files@npm:^29.7.0":
  version: 29.7.0
  resolution: "jest-changed-files@npm:29.7.0"
  dependencies:
    execa: "npm:^5.0.0"
    jest-util: "npm:^29.7.0"
    p-limit: "npm:^3.1.0"
  checksum: 10c0/e071384d9e2f6bb462231ac53f29bff86f0e12394c1b49ccafbad225ce2ab7da226279a8a94f421949920bef9be7ef574fd86aee22e8adfa149be73554ab828b
  languageName: node
  linkType: hard

"jest-circus@npm:^29.7.0":
  version: 29.7.0
  resolution: "jest-circus@npm:29.7.0"
  dependencies:
    "@jest/environment": "npm:^29.7.0"
    "@jest/expect": "npm:^29.7.0"
    "@jest/test-result": "npm:^29.7.0"
    "@jest/types": "npm:^29.6.3"
    "@types/node": "npm:*"
    chalk: "npm:^4.0.0"
    co: "npm:^4.6.0"
    dedent: "npm:^1.0.0"
    is-generator-fn: "npm:^2.0.0"
    jest-each: "npm:^29.7.0"
    jest-matcher-utils: "npm:^29.7.0"
    jest-message-util: "npm:^29.7.0"
    jest-runtime: "npm:^29.7.0"
    jest-snapshot: "npm:^29.7.0"
    jest-util: "npm:^29.7.0"
    p-limit: "npm:^3.1.0"
    pretty-format: "npm:^29.7.0"
    pure-rand: "npm:^6.0.0"
    slash: "npm:^3.0.0"
    stack-utils: "npm:^2.0.3"
  checksum: 10c0/8d15344cf7a9f14e926f0deed64ed190c7a4fa1ed1acfcd81e4cc094d3cc5bf7902ebb7b874edc98ada4185688f90c91e1747e0dfd7ac12463b097968ae74b5e
  languageName: node
  linkType: hard

"jest-cli@npm:^29.7.0":
  version: 29.7.0
  resolution: "jest-cli@npm:29.7.0"
  dependencies:
    "@jest/core": "npm:^29.7.0"
    "@jest/test-result": "npm:^29.7.0"
    "@jest/types": "npm:^29.6.3"
    chalk: "npm:^4.0.0"
    create-jest: "npm:^29.7.0"
    exit: "npm:^0.1.2"
    import-local: "npm:^3.0.2"
    jest-config: "npm:^29.7.0"
    jest-util: "npm:^29.7.0"
    jest-validate: "npm:^29.7.0"
    yargs: "npm:^17.3.1"
  peerDependencies:
    node-notifier: ^8.0.1 || ^9.0.0 || ^10.0.0
  peerDependenciesMeta:
    node-notifier:
      optional: true
  bin:
    jest: bin/jest.js
  checksum: 10c0/a658fd55050d4075d65c1066364595962ead7661711495cfa1dfeecf3d6d0a8ffec532f3dbd8afbb3e172dd5fd2fb2e813c5e10256e7cf2fea766314942fb43a
  languageName: node
  linkType: hard

"jest-config@npm:^29.7.0":
  version: 29.7.0
  resolution: "jest-config@npm:29.7.0"
  dependencies:
    "@babel/core": "npm:^7.11.6"
    "@jest/test-sequencer": "npm:^29.7.0"
    "@jest/types": "npm:^29.6.3"
    babel-jest: "npm:^29.7.0"
    chalk: "npm:^4.0.0"
    ci-info: "npm:^3.2.0"
    deepmerge: "npm:^4.2.2"
    glob: "npm:^7.1.3"
    graceful-fs: "npm:^4.2.9"
    jest-circus: "npm:^29.7.0"
    jest-environment-node: "npm:^29.7.0"
    jest-get-type: "npm:^29.6.3"
    jest-regex-util: "npm:^29.6.3"
    jest-resolve: "npm:^29.7.0"
    jest-runner: "npm:^29.7.0"
    jest-util: "npm:^29.7.0"
    jest-validate: "npm:^29.7.0"
    micromatch: "npm:^4.0.4"
    parse-json: "npm:^5.2.0"
    pretty-format: "npm:^29.7.0"
    slash: "npm:^3.0.0"
    strip-json-comments: "npm:^3.1.1"
  peerDependencies:
    "@types/node": "*"
    ts-node: ">=9.0.0"
  peerDependenciesMeta:
    "@types/node":
      optional: true
    ts-node:
      optional: true
  checksum: 10c0/bab23c2eda1fff06e0d104b00d6adfb1d1aabb7128441899c9bff2247bd26710b050a5364281ce8d52b46b499153bf7e3ee88b19831a8f3451f1477a0246a0f1
  languageName: node
  linkType: hard

"jest-diff@npm:^29.7.0":
  version: 29.7.0
  resolution: "jest-diff@npm:29.7.0"
  dependencies:
    chalk: "npm:^4.0.0"
    diff-sequences: "npm:^29.6.3"
    jest-get-type: "npm:^29.6.3"
    pretty-format: "npm:^29.7.0"
  checksum: 10c0/89a4a7f182590f56f526443dde69acefb1f2f0c9e59253c61d319569856c4931eae66b8a3790c443f529267a0ddba5ba80431c585deed81827032b2b2a1fc999
  languageName: node
  linkType: hard

"jest-docblock@npm:^29.7.0":
  version: 29.7.0
  resolution: "jest-docblock@npm:29.7.0"
  dependencies:
    detect-newline: "npm:^3.0.0"
  checksum: 10c0/d932a8272345cf6b6142bb70a2bb63e0856cc0093f082821577ea5bdf4643916a98744dfc992189d2b1417c38a11fa42466f6111526bc1fb81366f56410f3be9
  languageName: node
  linkType: hard

"jest-each@npm:^29.7.0":
  version: 29.7.0
  resolution: "jest-each@npm:29.7.0"
  dependencies:
    "@jest/types": "npm:^29.6.3"
    chalk: "npm:^4.0.0"
    jest-get-type: "npm:^29.6.3"
    jest-util: "npm:^29.7.0"
    pretty-format: "npm:^29.7.0"
  checksum: 10c0/f7f9a90ebee80cc688e825feceb2613627826ac41ea76a366fa58e669c3b2403d364c7c0a74d862d469b103c843154f8456d3b1c02b487509a12afa8b59edbb4
  languageName: node
  linkType: hard

"jest-environment-node@npm:^29.7.0":
  version: 29.7.0
  resolution: "jest-environment-node@npm:29.7.0"
  dependencies:
    "@jest/environment": "npm:^29.7.0"
    "@jest/fake-timers": "npm:^29.7.0"
    "@jest/types": "npm:^29.6.3"
    "@types/node": "npm:*"
    jest-mock: "npm:^29.7.0"
    jest-util: "npm:^29.7.0"
  checksum: 10c0/61f04fec077f8b1b5c1a633e3612fc0c9aa79a0ab7b05600683428f1e01a4d35346c474bde6f439f9fcc1a4aa9a2861ff852d079a43ab64b02105d1004b2592b
  languageName: node
  linkType: hard

"jest-get-type@npm:^29.6.3":
  version: 29.6.3
  resolution: "jest-get-type@npm:29.6.3"
  checksum: 10c0/552e7a97a983d3c2d4e412a44eb7de0430ff773dd99f7500962c268d6dfbfa431d7d08f919c9d960530e5f7f78eb47f267ad9b318265e5092b3ff9ede0db7c2b
  languageName: node
  linkType: hard

"jest-haste-map@npm:^29.7.0":
  version: 29.7.0
  resolution: "jest-haste-map@npm:29.7.0"
  dependencies:
    "@jest/types": "npm:^29.6.3"
    "@types/graceful-fs": "npm:^4.1.3"
    "@types/node": "npm:*"
    anymatch: "npm:^3.0.3"
    fb-watchman: "npm:^2.0.0"
    fsevents: "npm:^2.3.2"
    graceful-fs: "npm:^4.2.9"
    jest-regex-util: "npm:^29.6.3"
    jest-util: "npm:^29.7.0"
    jest-worker: "npm:^29.7.0"
    micromatch: "npm:^4.0.4"
    walker: "npm:^1.0.8"
  dependenciesMeta:
    fsevents:
      optional: true
  checksum: 10c0/2683a8f29793c75a4728787662972fedd9267704c8f7ef9d84f2beed9a977f1cf5e998c07b6f36ba5603f53cb010c911fe8cd0ac9886e073fe28ca66beefd30c
  languageName: node
  linkType: hard

"jest-leak-detector@npm:^29.7.0":
  version: 29.7.0
  resolution: "jest-leak-detector@npm:29.7.0"
  dependencies:
    jest-get-type: "npm:^29.6.3"
    pretty-format: "npm:^29.7.0"
  checksum: 10c0/71bb9f77fc489acb842a5c7be030f2b9acb18574dc9fb98b3100fc57d422b1abc55f08040884bd6e6dbf455047a62f7eaff12aa4058f7cbdc11558718ca6a395
  languageName: node
  linkType: hard

"jest-matcher-utils@npm:^29.7.0":
  version: 29.7.0
  resolution: "jest-matcher-utils@npm:29.7.0"
  dependencies:
    chalk: "npm:^4.0.0"
    jest-diff: "npm:^29.7.0"
    jest-get-type: "npm:^29.6.3"
    pretty-format: "npm:^29.7.0"
  checksum: 10c0/0d0e70b28fa5c7d4dce701dc1f46ae0922102aadc24ed45d594dd9b7ae0a8a6ef8b216718d1ab79e451291217e05d4d49a82666e1a3cc2b428b75cd9c933244e
  languageName: node
  linkType: hard

"jest-message-util@npm:^29.7.0":
  version: 29.7.0
  resolution: "jest-message-util@npm:29.7.0"
  dependencies:
    "@babel/code-frame": "npm:^7.12.13"
    "@jest/types": "npm:^29.6.3"
    "@types/stack-utils": "npm:^2.0.0"
    chalk: "npm:^4.0.0"
    graceful-fs: "npm:^4.2.9"
    micromatch: "npm:^4.0.4"
    pretty-format: "npm:^29.7.0"
    slash: "npm:^3.0.0"
    stack-utils: "npm:^2.0.3"
  checksum: 10c0/850ae35477f59f3e6f27efac5215f706296e2104af39232bb14e5403e067992afb5c015e87a9243ec4d9df38525ef1ca663af9f2f4766aa116f127247008bd22
  languageName: node
  linkType: hard

"jest-mock@npm:^29.7.0":
  version: 29.7.0
  resolution: "jest-mock@npm:29.7.0"
  dependencies:
    "@jest/types": "npm:^29.6.3"
    "@types/node": "npm:*"
    jest-util: "npm:^29.7.0"
  checksum: 10c0/7b9f8349ee87695a309fe15c46a74ab04c853369e5c40952d68061d9dc3159a0f0ed73e215f81b07ee97a9faaf10aebe5877a9d6255068a0977eae6a9ff1d5ac
  languageName: node
  linkType: hard

"jest-pnp-resolver@npm:^1.2.2":
  version: 1.2.3
  resolution: "jest-pnp-resolver@npm:1.2.3"
  peerDependencies:
    jest-resolve: "*"
  peerDependenciesMeta:
    jest-resolve:
      optional: true
  checksum: 10c0/86eec0c78449a2de733a6d3e316d49461af6a858070e113c97f75fb742a48c2396ea94150cbca44159ffd4a959f743a47a8b37a792ef6fdad2cf0a5cba973fac
  languageName: node
  linkType: hard

"jest-regex-util@npm:^29.6.3":
  version: 29.6.3
  resolution: "jest-regex-util@npm:29.6.3"
  checksum: 10c0/4e33fb16c4f42111159cafe26397118dcfc4cf08bc178a67149fb05f45546a91928b820894572679d62559839d0992e21080a1527faad65daaae8743a5705a3b
  languageName: node
  linkType: hard

"jest-resolve-dependencies@npm:^29.7.0":
  version: 29.7.0
  resolution: "jest-resolve-dependencies@npm:29.7.0"
  dependencies:
    jest-regex-util: "npm:^29.6.3"
    jest-snapshot: "npm:^29.7.0"
  checksum: 10c0/b6e9ad8ae5b6049474118ea6441dfddd385b6d1fc471db0136f7c8fbcfe97137a9665e4f837a9f49f15a29a1deb95a14439b7aec812f3f99d08f228464930f0d
  languageName: node
  linkType: hard

"jest-resolve@npm:^29.7.0":
  version: 29.7.0
  resolution: "jest-resolve@npm:29.7.0"
  dependencies:
    chalk: "npm:^4.0.0"
    graceful-fs: "npm:^4.2.9"
    jest-haste-map: "npm:^29.7.0"
    jest-pnp-resolver: "npm:^1.2.2"
    jest-util: "npm:^29.7.0"
    jest-validate: "npm:^29.7.0"
    resolve: "npm:^1.20.0"
    resolve.exports: "npm:^2.0.0"
    slash: "npm:^3.0.0"
  checksum: 10c0/59da5c9c5b50563e959a45e09e2eace783d7f9ac0b5dcc6375dea4c0db938d2ebda97124c8161310082760e8ebbeff9f6b177c15ca2f57fb424f637a5d2adb47
  languageName: node
  linkType: hard

"jest-runner@npm:^29.7.0":
  version: 29.7.0
  resolution: "jest-runner@npm:29.7.0"
  dependencies:
    "@jest/console": "npm:^29.7.0"
    "@jest/environment": "npm:^29.7.0"
    "@jest/test-result": "npm:^29.7.0"
    "@jest/transform": "npm:^29.7.0"
    "@jest/types": "npm:^29.6.3"
    "@types/node": "npm:*"
    chalk: "npm:^4.0.0"
    emittery: "npm:^0.13.1"
    graceful-fs: "npm:^4.2.9"
    jest-docblock: "npm:^29.7.0"
    jest-environment-node: "npm:^29.7.0"
    jest-haste-map: "npm:^29.7.0"
    jest-leak-detector: "npm:^29.7.0"
    jest-message-util: "npm:^29.7.0"
    jest-resolve: "npm:^29.7.0"
    jest-runtime: "npm:^29.7.0"
    jest-util: "npm:^29.7.0"
    jest-watcher: "npm:^29.7.0"
    jest-worker: "npm:^29.7.0"
    p-limit: "npm:^3.1.0"
    source-map-support: "npm:0.5.13"
  checksum: 10c0/2194b4531068d939f14c8d3274fe5938b77fa73126aedf9c09ec9dec57d13f22c72a3b5af01ac04f5c1cf2e28d0ac0b4a54212a61b05f10b5d6b47f2a1097bb4
  languageName: node
  linkType: hard

"jest-runtime@npm:^29.7.0":
  version: 29.7.0
  resolution: "jest-runtime@npm:29.7.0"
  dependencies:
    "@jest/environment": "npm:^29.7.0"
    "@jest/fake-timers": "npm:^29.7.0"
    "@jest/globals": "npm:^29.7.0"
    "@jest/source-map": "npm:^29.6.3"
    "@jest/test-result": "npm:^29.7.0"
    "@jest/transform": "npm:^29.7.0"
    "@jest/types": "npm:^29.6.3"
    "@types/node": "npm:*"
    chalk: "npm:^4.0.0"
    cjs-module-lexer: "npm:^1.0.0"
    collect-v8-coverage: "npm:^1.0.0"
    glob: "npm:^7.1.3"
    graceful-fs: "npm:^4.2.9"
    jest-haste-map: "npm:^29.7.0"
    jest-message-util: "npm:^29.7.0"
    jest-mock: "npm:^29.7.0"
    jest-regex-util: "npm:^29.6.3"
    jest-resolve: "npm:^29.7.0"
    jest-snapshot: "npm:^29.7.0"
    jest-util: "npm:^29.7.0"
    slash: "npm:^3.0.0"
    strip-bom: "npm:^4.0.0"
  checksum: 10c0/7cd89a1deda0bda7d0941835434e44f9d6b7bd50b5c5d9b0fc9a6c990b2d4d2cab59685ab3cb2850ed4cc37059f6de903af5a50565d7f7f1192a77d3fd6dd2a6
  languageName: node
  linkType: hard

"jest-snapshot@npm:^29.7.0":
  version: 29.7.0
  resolution: "jest-snapshot@npm:29.7.0"
  dependencies:
    "@babel/core": "npm:^7.11.6"
    "@babel/generator": "npm:^7.7.2"
    "@babel/plugin-syntax-jsx": "npm:^7.7.2"
    "@babel/plugin-syntax-typescript": "npm:^7.7.2"
    "@babel/types": "npm:^7.3.3"
    "@jest/expect-utils": "npm:^29.7.0"
    "@jest/transform": "npm:^29.7.0"
    "@jest/types": "npm:^29.6.3"
    babel-preset-current-node-syntax: "npm:^1.0.0"
    chalk: "npm:^4.0.0"
    expect: "npm:^29.7.0"
    graceful-fs: "npm:^4.2.9"
    jest-diff: "npm:^29.7.0"
    jest-get-type: "npm:^29.6.3"
    jest-matcher-utils: "npm:^29.7.0"
    jest-message-util: "npm:^29.7.0"
    jest-util: "npm:^29.7.0"
    natural-compare: "npm:^1.4.0"
    pretty-format: "npm:^29.7.0"
    semver: "npm:^7.5.3"
  checksum: 10c0/6e9003c94ec58172b4a62864a91c0146513207bedf4e0a06e1e2ac70a4484088a2683e3a0538d8ea913bcfd53dc54a9b98a98cdfa562e7fe1d1339aeae1da570
  languageName: node
  linkType: hard

"jest-util@npm:^29.0.0, jest-util@npm:^29.7.0":
  version: 29.7.0
  resolution: "jest-util@npm:29.7.0"
  dependencies:
    "@jest/types": "npm:^29.6.3"
    "@types/node": "npm:*"
    chalk: "npm:^4.0.0"
    ci-info: "npm:^3.2.0"
    graceful-fs: "npm:^4.2.9"
    picomatch: "npm:^2.2.3"
  checksum: 10c0/bc55a8f49fdbb8f51baf31d2a4f312fb66c9db1483b82f602c9c990e659cdd7ec529c8e916d5a89452ecbcfae4949b21b40a7a59d4ffc0cd813a973ab08c8150
  languageName: node
  linkType: hard

"jest-validate@npm:^29.7.0":
  version: 29.7.0
  resolution: "jest-validate@npm:29.7.0"
  dependencies:
    "@jest/types": "npm:^29.6.3"
    camelcase: "npm:^6.2.0"
    chalk: "npm:^4.0.0"
    jest-get-type: "npm:^29.6.3"
    leven: "npm:^3.1.0"
    pretty-format: "npm:^29.7.0"
  checksum: 10c0/a20b930480c1ed68778c739f4739dce39423131bc070cd2505ddede762a5570a256212e9c2401b7ae9ba4d7b7c0803f03c5b8f1561c62348213aba18d9dbece2
  languageName: node
  linkType: hard

"jest-watcher@npm:^29.7.0":
  version: 29.7.0
  resolution: "jest-watcher@npm:29.7.0"
  dependencies:
    "@jest/test-result": "npm:^29.7.0"
    "@jest/types": "npm:^29.6.3"
    "@types/node": "npm:*"
    ansi-escapes: "npm:^4.2.1"
    chalk: "npm:^4.0.0"
    emittery: "npm:^0.13.1"
    jest-util: "npm:^29.7.0"
    string-length: "npm:^4.0.1"
  checksum: 10c0/ec6c75030562fc8f8c727cb8f3b94e75d831fc718785abfc196e1f2a2ebc9a2e38744a15147170039628a853d77a3b695561ce850375ede3a4ee6037a2574567
  languageName: node
  linkType: hard

"jest-worker@npm:^29.7.0":
  version: 29.7.0
  resolution: "jest-worker@npm:29.7.0"
  dependencies:
    "@types/node": "npm:*"
    jest-util: "npm:^29.7.0"
    merge-stream: "npm:^2.0.0"
    supports-color: "npm:^8.0.0"
  checksum: 10c0/5570a3a005b16f46c131968b8a5b56d291f9bbb85ff4217e31c80bd8a02e7de799e59a54b95ca28d5c302f248b54cbffde2d177c2f0f52ffcee7504c6eabf660
  languageName: node
  linkType: hard

"jest@npm:^29.7.0":
  version: 29.7.0
  resolution: "jest@npm:29.7.0"
  dependencies:
    "@jest/core": "npm:^29.7.0"
    "@jest/types": "npm:^29.6.3"
    import-local: "npm:^3.0.2"
    jest-cli: "npm:^29.7.0"
  peerDependencies:
    node-notifier: ^8.0.1 || ^9.0.0 || ^10.0.0
  peerDependenciesMeta:
    node-notifier:
      optional: true
  bin:
    jest: bin/jest.js
  checksum: 10c0/f40eb8171cf147c617cc6ada49d062fbb03b4da666cb8d39cdbfb739a7d75eea4c3ca150fb072d0d273dce0c753db4d0467d54906ad0293f59c54f9db4a09d8b
  languageName: node
  linkType: hard

"js-sha256@npm:^0.9.0":
  version: 0.9.0
  resolution: "js-sha256@npm:0.9.0"
  checksum: 10c0/f20b9245f6ebe666f42ca05536f777301132fb1aa7fbc22f10578fa302717a6cca507344894efdeaf40a011256eb2f7d517b94ac7105bd5cf087fa61551ad634
  languageName: node
  linkType: hard

"js-tokens@npm:^4.0.0":
  version: 4.0.0
  resolution: "js-tokens@npm:4.0.0"
  checksum: 10c0/e248708d377aa058eacf2037b07ded847790e6de892bbad3dac0abba2e759cb9f121b00099a65195616badcb6eca8d14d975cb3e89eb1cfda644756402c8aeed
  languageName: node
  linkType: hard

"js-yaml@npm:^3.13.1":
  version: 3.14.1
  resolution: "js-yaml@npm:3.14.1"
  dependencies:
    argparse: "npm:^1.0.7"
    esprima: "npm:^4.0.0"
  bin:
    js-yaml: bin/js-yaml.js
  checksum: 10c0/6746baaaeac312c4db8e75fa22331d9a04cccb7792d126ed8ce6a0bbcfef0cedaddd0c5098fade53db067c09fe00aa1c957674b4765610a8b06a5a189e46433b
  languageName: node
  linkType: hard

"jsbn@npm:1.1.0":
  version: 1.1.0
  resolution: "jsbn@npm:1.1.0"
  checksum: 10c0/4f907fb78d7b712e11dea8c165fe0921f81a657d3443dde75359ed52eb2b5d33ce6773d97985a089f09a65edd80b11cb75c767b57ba47391fee4c969f7215c96
  languageName: node
  linkType: hard

"jsesc@npm:^2.5.1":
  version: 2.5.2
  resolution: "jsesc@npm:2.5.2"
  bin:
    jsesc: bin/jsesc
  checksum: 10c0/dbf59312e0ebf2b4405ef413ec2b25abb5f8f4d9bc5fb8d9f90381622ebca5f2af6a6aa9a8578f65903f9e33990a6dc798edd0ce5586894bf0e9e31803a1de88
  languageName: node
  linkType: hard

"json-parse-even-better-errors@npm:^2.3.0":
  version: 2.3.1
  resolution: "json-parse-even-better-errors@npm:2.3.1"
  checksum: 10c0/140932564c8f0b88455432e0f33c4cb4086b8868e37524e07e723f4eaedb9425bdc2bafd71bd1d9765bd15fd1e2d126972bc83990f55c467168c228c24d665f3
  languageName: node
  linkType: hard

"json5@npm:^2.2.3":
  version: 2.2.3
  resolution: "json5@npm:2.2.3"
  bin:
    json5: lib/cli.js
  checksum: 10c0/5a04eed94810fa55c5ea138b2f7a5c12b97c3750bc63d11e511dcecbfef758003861522a070c2272764ee0f4e3e323862f386945aeb5b85b87ee43f084ba586c
  languageName: node
  linkType: hard

"kleur@npm:^3.0.3":
  version: 3.0.3
  resolution: "kleur@npm:3.0.3"
  checksum: 10c0/cd3a0b8878e7d6d3799e54340efe3591ca787d9f95f109f28129bdd2915e37807bf8918bb295ab86afb8c82196beec5a1adcaf29042ce3f2bd932b038fe3aa4b
  languageName: node
  linkType: hard

"leven@npm:^3.1.0":
  version: 3.1.0
  resolution: "leven@npm:3.1.0"
  checksum: 10c0/cd778ba3fbab0f4d0500b7e87d1f6e1f041507c56fdcd47e8256a3012c98aaee371d4c15e0a76e0386107af2d42e2b7466160a2d80688aaa03e66e49949f42df
  languageName: node
  linkType: hard

"lines-and-columns@npm:^1.1.6":
  version: 1.2.4
  resolution: "lines-and-columns@npm:1.2.4"
  checksum: 10c0/3da6ee62d4cd9f03f5dc90b4df2540fb85b352081bee77fe4bbcd12c9000ead7f35e0a38b8d09a9bb99b13223446dd8689ff3c4959807620726d788701a83d2d
  languageName: node
  linkType: hard

"locate-path@npm:^5.0.0":
  version: 5.0.0
  resolution: "locate-path@npm:5.0.0"
  dependencies:
    p-locate: "npm:^4.1.0"
  checksum: 10c0/33a1c5247e87e022f9713e6213a744557a3e9ec32c5d0b5efb10aa3a38177615bf90221a5592674857039c1a0fd2063b82f285702d37b792d973e9e72ace6c59
  languageName: node
  linkType: hard

"lodash.memoize@npm:4.x":
  version: 4.1.2
  resolution: "lodash.memoize@npm:4.1.2"
  checksum: 10c0/c8713e51eccc650422716a14cece1809cfe34bc5ab5e242b7f8b4e2241c2483697b971a604252807689b9dd69bfe3a98852e19a5b89d506b000b4187a1285df8
  languageName: node
  linkType: hard

"lru-cache@npm:^10.0.1, lru-cache@npm:^10.2.0":
  version: 10.2.2
  resolution: "lru-cache@npm:10.2.2"
  checksum: 10c0/402d31094335851220d0b00985084288136136992979d0e015f0f1697e15d1c86052d7d53ae86b614e5b058425606efffc6969a31a091085d7a2b80a8a1e26d6
  languageName: node
  linkType: hard

"lru-cache@npm:^5.1.1":
  version: 5.1.1
  resolution: "lru-cache@npm:5.1.1"
  dependencies:
    yallist: "npm:^3.0.2"
  checksum: 10c0/89b2ef2ef45f543011e38737b8a8622a2f8998cddf0e5437174ef8f1f70a8b9d14a918ab3e232cb3ba343b7abddffa667f0b59075b2b80e6b4d63c3de6127482
  languageName: node
  linkType: hard

"make-dir@npm:^4.0.0":
  version: 4.0.0
  resolution: "make-dir@npm:4.0.0"
  dependencies:
    semver: "npm:^7.5.3"
  checksum: 10c0/69b98a6c0b8e5c4fe9acb61608a9fbcfca1756d910f51e5dbe7a9e5cfb74fca9b8a0c8a0ffdf1294a740826c1ab4871d5bf3f62f72a3049e5eac6541ddffed68
  languageName: node
  linkType: hard

"make-error@npm:1.x":
  version: 1.3.6
  resolution: "make-error@npm:1.3.6"
  checksum: 10c0/171e458d86854c6b3fc46610cfacf0b45149ba043782558c6875d9f42f222124384ad0b468c92e996d815a8a2003817a710c0a160e49c1c394626f76fa45396f
  languageName: node
  linkType: hard

"make-fetch-happen@npm:^13.0.0":
  version: 13.0.1
  resolution: "make-fetch-happen@npm:13.0.1"
  dependencies:
    "@npmcli/agent": "npm:^2.0.0"
    cacache: "npm:^18.0.0"
    http-cache-semantics: "npm:^4.1.1"
    is-lambda: "npm:^1.0.1"
    minipass: "npm:^7.0.2"
    minipass-fetch: "npm:^3.0.0"
    minipass-flush: "npm:^1.0.5"
    minipass-pipeline: "npm:^1.2.4"
    negotiator: "npm:^0.6.3"
    proc-log: "npm:^4.2.0"
    promise-retry: "npm:^2.0.1"
    ssri: "npm:^10.0.0"
  checksum: 10c0/df5f4dbb6d98153b751bccf4dc4cc500de85a96a9331db9805596c46aa9f99d9555983954e6c1266d9f981ae37a9e4647f42b9a4bb5466f867f4012e582c9e7e
  languageName: node
  linkType: hard

"makeerror@npm:1.0.12":
  version: 1.0.12
  resolution: "makeerror@npm:1.0.12"
  dependencies:
    tmpl: "npm:1.0.5"
  checksum: 10c0/b0e6e599780ce6bab49cc413eba822f7d1f0dfebd1c103eaa3785c59e43e22c59018323cf9e1708f0ef5329e94a745d163fcbb6bff8e4c6742f9be9e86f3500c
  languageName: node
  linkType: hard

"merge-stream@npm:^2.0.0":
  version: 2.0.0
  resolution: "merge-stream@npm:2.0.0"
  checksum: 10c0/867fdbb30a6d58b011449b8885601ec1690c3e41c759ecd5a9d609094f7aed0096c37823ff4a7190ef0b8f22cc86beb7049196ff68c016e3b3c671d0dac91ce5
  languageName: node
  linkType: hard

"micromatch@npm:^4.0.4":
  version: 4.0.5
  resolution: "micromatch@npm:4.0.5"
  dependencies:
    braces: "npm:^3.0.2"
    picomatch: "npm:^2.3.1"
  checksum: 10c0/3d6505b20f9fa804af5d8c596cb1c5e475b9b0cd05f652c5b56141cf941bd72adaeb7a436fda344235cef93a7f29b7472efc779fcdb83b478eab0867b95cdeff
  languageName: node
  linkType: hard

"mime-db@npm:1.52.0":
  version: 1.52.0
  resolution: "mime-db@npm:1.52.0"
  checksum: 10c0/0557a01deebf45ac5f5777fe7740b2a5c309c6d62d40ceab4e23da9f821899ce7a900b7ac8157d4548ddbb7beffe9abc621250e6d182b0397ec7f10c7b91a5aa
  languageName: node
  linkType: hard

"mime-types@npm:^2.1.12":
  version: 2.1.35
  resolution: "mime-types@npm:2.1.35"
  dependencies:
    mime-db: "npm:1.52.0"
  checksum: 10c0/82fb07ec56d8ff1fc999a84f2f217aa46cb6ed1033fefaabd5785b9a974ed225c90dc72fff460259e66b95b73648596dbcc50d51ed69cdf464af2d237d3149b2
  languageName: node
  linkType: hard

"mimic-fn@npm:^2.1.0":
  version: 2.1.0
  resolution: "mimic-fn@npm:2.1.0"
  checksum: 10c0/b26f5479d7ec6cc2bce275a08f146cf78f5e7b661b18114e2506dd91ec7ec47e7a25bf4360e5438094db0560bcc868079fb3b1fb3892b833c1ecbf63f80c95a4
  languageName: node
  linkType: hard

"minimatch@npm:^3.0.4, minimatch@npm:^3.1.1":
  version: 3.1.2
  resolution: "minimatch@npm:3.1.2"
  dependencies:
    brace-expansion: "npm:^1.1.7"
  checksum: 10c0/0262810a8fc2e72cca45d6fd86bd349eee435eb95ac6aa45c9ea2180e7ee875ef44c32b55b5973ceabe95ea12682f6e3725cbb63d7a2d1da3ae1163c8b210311
  languageName: node
  linkType: hard

"minimatch@npm:^9.0.1":
  version: 9.0.4
  resolution: "minimatch@npm:9.0.4"
  dependencies:
    brace-expansion: "npm:^2.0.1"
  checksum: 10c0/2c16f21f50e64922864e560ff97c587d15fd491f65d92a677a344e970fe62aafdbeafe648965fa96d33c061b4d0eabfe0213466203dd793367e7f28658cf6414
  languageName: node
  linkType: hard

"minipass-collect@npm:^2.0.1":
  version: 2.0.1
  resolution: "minipass-collect@npm:2.0.1"
  dependencies:
    minipass: "npm:^7.0.3"
  checksum: 10c0/5167e73f62bb74cc5019594709c77e6a742051a647fe9499abf03c71dca75515b7959d67a764bdc4f8b361cf897fbf25e2d9869ee039203ed45240f48b9aa06e
  languageName: node
  linkType: hard

"minipass-fetch@npm:^3.0.0":
  version: 3.0.5
  resolution: "minipass-fetch@npm:3.0.5"
  dependencies:
    encoding: "npm:^0.1.13"
    minipass: "npm:^7.0.3"
    minipass-sized: "npm:^1.0.3"
    minizlib: "npm:^2.1.2"
  dependenciesMeta:
    encoding:
      optional: true
  checksum: 10c0/9d702d57f556274286fdd97e406fc38a2f5c8d15e158b498d7393b1105974b21249289ec571fa2b51e038a4872bfc82710111cf75fae98c662f3d6f95e72152b
  languageName: node
  linkType: hard

"minipass-flush@npm:^1.0.5":
  version: 1.0.5
  resolution: "minipass-flush@npm:1.0.5"
  dependencies:
    minipass: "npm:^3.0.0"
  checksum: 10c0/2a51b63feb799d2bb34669205eee7c0eaf9dce01883261a5b77410c9408aa447e478efd191b4de6fc1101e796ff5892f8443ef20d9544385819093dbb32d36bd
  languageName: node
  linkType: hard

"minipass-pipeline@npm:^1.2.4":
  version: 1.2.4
  resolution: "minipass-pipeline@npm:1.2.4"
  dependencies:
    minipass: "npm:^3.0.0"
  checksum: 10c0/cbda57cea20b140b797505dc2cac71581a70b3247b84480c1fed5ca5ba46c25ecc25f68bfc9e6dcb1a6e9017dab5c7ada5eab73ad4f0a49d84e35093e0c643f2
  languageName: node
  linkType: hard

"minipass-sized@npm:^1.0.3":
  version: 1.0.3
  resolution: "minipass-sized@npm:1.0.3"
  dependencies:
    minipass: "npm:^3.0.0"
  checksum: 10c0/298f124753efdc745cfe0f2bdfdd81ba25b9f4e753ca4a2066eb17c821f25d48acea607dfc997633ee5bf7b6dfffb4eee4f2051eb168663f0b99fad2fa4829cb
  languageName: node
  linkType: hard

"minipass@npm:^3.0.0":
  version: 3.3.6
  resolution: "minipass@npm:3.3.6"
  dependencies:
    yallist: "npm:^4.0.0"
  checksum: 10c0/a114746943afa1dbbca8249e706d1d38b85ed1298b530f5808ce51f8e9e941962e2a5ad2e00eae7dd21d8a4aae6586a66d4216d1a259385e9d0358f0c1eba16c
  languageName: node
  linkType: hard

"minipass@npm:^5.0.0":
  version: 5.0.0
  resolution: "minipass@npm:5.0.0"
  checksum: 10c0/a91d8043f691796a8ac88df039da19933ef0f633e3d7f0d35dcd5373af49131cf2399bfc355f41515dc495e3990369c3858cd319e5c2722b4753c90bf3152462
  languageName: node
  linkType: hard

"minipass@npm:^5.0.0 || ^6.0.2 || ^7.0.0, minipass@npm:^7.0.2, minipass@npm:^7.0.3, minipass@npm:^7.0.4":
  version: 7.1.1
  resolution: "minipass@npm:7.1.1"
  checksum: 10c0/fdccc2f99c31083f45f881fd1e6971d798e333e078ab3c8988fb818c470fbd5e935388ad9adb286397eba50baebf46ef8ff487c8d3f455a69c6f3efc327bdff9
  languageName: node
  linkType: hard

"minizlib@npm:^2.1.1, minizlib@npm:^2.1.2":
  version: 2.1.2
  resolution: "minizlib@npm:2.1.2"
  dependencies:
    minipass: "npm:^3.0.0"
    yallist: "npm:^4.0.0"
  checksum: 10c0/64fae024e1a7d0346a1102bb670085b17b7f95bf6cfdf5b128772ec8faf9ea211464ea4add406a3a6384a7d87a0cd1a96263692134323477b4fb43659a6cab78
  languageName: node
  linkType: hard

"mkdirp@npm:^1.0.3":
  version: 1.0.4
  resolution: "mkdirp@npm:1.0.4"
  bin:
    mkdirp: bin/cmd.js
  checksum: 10c0/46ea0f3ffa8bc6a5bc0c7081ffc3907777f0ed6516888d40a518c5111f8366d97d2678911ad1a6882bf592fa9de6c784fea32e1687bb94e1f4944170af48a5cf
  languageName: node
  linkType: hard

"ms@npm:2.1.2":
  version: 2.1.2
  resolution: "ms@npm:2.1.2"
  checksum: 10c0/a437714e2f90dbf881b5191d35a6db792efbca5badf112f87b9e1c712aace4b4b9b742dd6537f3edf90fd6f684de897cec230abde57e87883766712ddda297cc
  languageName: node
  linkType: hard

"nats@npm:^2.27.0":
  version: 2.28.0
  resolution: "nats@npm:2.28.0"
  dependencies:
    nkeys.js: "npm:1.1.0"
  checksum: 10c0/a14738a8e2730f76e164e3debf99d5d7d10ca93346e87c7e4c3e56ac81167be1565baae92bb5785f374c0483c79e29879984fda76a21a1de0d5f1f047c0535bb
  languageName: node
  linkType: hard

"natural-compare@npm:^1.4.0":
  version: 1.4.0
  resolution: "natural-compare@npm:1.4.0"
  checksum: 10c0/f5f9a7974bfb28a91afafa254b197f0f22c684d4a1731763dda960d2c8e375b36c7d690e0d9dc8fba774c537af14a7e979129bca23d88d052fbeb9466955e447
  languageName: node
  linkType: hard

"negotiator@npm:^0.6.3":
  version: 0.6.3
  resolution: "negotiator@npm:0.6.3"
  checksum: 10c0/3ec9fd413e7bf071c937ae60d572bc67155262068ed522cf4b3be5edbe6ddf67d095ec03a3a14ebf8fc8e95f8e1d61be4869db0dbb0de696f6b837358bd43fc2
  languageName: node
  linkType: hard

"nkeys.js@npm:1.1.0":
  version: 1.1.0
  resolution: "nkeys.js@npm:1.1.0"
  dependencies:
    tweetnacl: "npm:1.0.3"
  checksum: 10c0/44ff8d61e46d2b345351ed7844d66036a815aeca23927def6ca258e27a18a1678fe5ab161c5cf0b6e3a3993a945d422b71036986d09669b214540c8491478bef
  languageName: node
  linkType: hard

"node-fetch@npm:^2.6.1":
  version: 2.7.0
  resolution: "node-fetch@npm:2.7.0"
  dependencies:
    whatwg-url: "npm:^5.0.0"
  peerDependencies:
    encoding: ^0.1.0
  peerDependenciesMeta:
    encoding:
      optional: true
  checksum: 10c0/b55786b6028208e6fbe594ccccc213cab67a72899c9234eb59dba51062a299ea853210fcf526998eaa2867b0963ad72338824450905679ff0fa304b8c5093ae8
  languageName: node
  linkType: hard

"node-gyp@npm:latest":
  version: 10.1.0
  resolution: "node-gyp@npm:10.1.0"
  dependencies:
    env-paths: "npm:^2.2.0"
    exponential-backoff: "npm:^3.1.1"
    glob: "npm:^10.3.10"
    graceful-fs: "npm:^4.2.6"
    make-fetch-happen: "npm:^13.0.0"
    nopt: "npm:^7.0.0"
    proc-log: "npm:^3.0.0"
    semver: "npm:^7.3.5"
    tar: "npm:^6.1.2"
    which: "npm:^4.0.0"
  bin:
    node-gyp: bin/node-gyp.js
  checksum: 10c0/9cc821111ca244a01fb7f054db7523ab0a0cd837f665267eb962eb87695d71fb1e681f9e21464cc2fd7c05530dc4c81b810bca1a88f7d7186909b74477491a3c
  languageName: node
  linkType: hard

"node-int64@npm:^0.4.0":
  version: 0.4.0
  resolution: "node-int64@npm:0.4.0"
  checksum: 10c0/a6a4d8369e2f2720e9c645255ffde909c0fbd41c92ea92a5607fc17055955daac99c1ff589d421eee12a0d24e99f7bfc2aabfeb1a4c14742f6c099a51863f31a
  languageName: node
  linkType: hard

"node-releases@npm:^2.0.14":
  version: 2.0.14
  resolution: "node-releases@npm:2.0.14"
  checksum: 10c0/199fc93773ae70ec9969bc6d5ac5b2bbd6eb986ed1907d751f411fef3ede0e4bfdb45ceb43711f8078bea237b6036db8b1bf208f6ff2b70c7d615afd157f3ab9
  languageName: node
  linkType: hard

"nopt@npm:^7.0.0":
  version: 7.2.1
  resolution: "nopt@npm:7.2.1"
  dependencies:
    abbrev: "npm:^2.0.0"
  bin:
    nopt: bin/nopt.js
  checksum: 10c0/a069c7c736767121242037a22a788863accfa932ab285a1eb569eb8cd534b09d17206f68c37f096ae785647435e0c5a5a0a67b42ec743e481a455e5ae6a6df81
  languageName: node
  linkType: hard

"normalize-path@npm:^3.0.0":
  version: 3.0.0
  resolution: "normalize-path@npm:3.0.0"
  checksum: 10c0/e008c8142bcc335b5e38cf0d63cfd39d6cf2d97480af9abdbe9a439221fd4d749763bab492a8ee708ce7a194bb00c9da6d0a115018672310850489137b3da046
  languageName: node
  linkType: hard

"npm-run-path@npm:^4.0.1":
  version: 4.0.1
  resolution: "npm-run-path@npm:4.0.1"
  dependencies:
    path-key: "npm:^3.0.0"
  checksum: 10c0/6f9353a95288f8455cf64cbeb707b28826a7f29690244c1e4bb61ec573256e021b6ad6651b394eb1ccfd00d6ec50147253aba2c5fe58a57ceb111fad62c519ac
  languageName: node
  linkType: hard

"o1js@npm:^1.4.0":
  version: 1.4.0
  resolution: "o1js@npm:1.4.0"
  dependencies:
    blakejs: "npm:1.2.1"
    cachedir: "npm:^2.4.0"
    isomorphic-fetch: "npm:^3.0.0"
    js-sha256: "npm:^0.9.0"
    reflect-metadata: "npm:^0.1.13"
    tslib: "npm:^2.3.0"
  bin:
    snarky-run: src/build/run.js
  checksum: 10c0/5c193005bb73fdb14c9af5ebf8512a850c42bf1c4123932d75a88f31a8962b4fdf01215f191690dd09a13921c8e8332b4684486bc1782e1761cbc38408cf7ee8
  languageName: node
  linkType: hard

"once@npm:^1.3.0":
  version: 1.4.0
  resolution: "once@npm:1.4.0"
  dependencies:
    wrappy: "npm:1"
  checksum: 10c0/5d48aca287dfefabd756621c5dfce5c91a549a93e9fdb7b8246bc4c4790aa2ec17b34a260530474635147aeb631a2dcc8b32c613df0675f96041cbb8244517d0
  languageName: node
  linkType: hard

"onetime@npm:^5.1.2":
  version: 5.1.2
  resolution: "onetime@npm:5.1.2"
  dependencies:
    mimic-fn: "npm:^2.1.0"
  checksum: 10c0/ffcef6fbb2692c3c40749f31ea2e22677a876daea92959b8a80b521d95cca7a668c884d8b2045d1d8ee7d56796aa405c405462af112a1477594cc63531baeb8f
  languageName: node
  linkType: hard

"p-limit@npm:^2.2.0":
  version: 2.3.0
  resolution: "p-limit@npm:2.3.0"
  dependencies:
    p-try: "npm:^2.0.0"
  checksum: 10c0/8da01ac53efe6a627080fafc127c873da40c18d87b3f5d5492d465bb85ec7207e153948df6b9cbaeb130be70152f874229b8242ee2be84c0794082510af97f12
  languageName: node
  linkType: hard

"p-limit@npm:^3.1.0":
  version: 3.1.0
  resolution: "p-limit@npm:3.1.0"
  dependencies:
    yocto-queue: "npm:^0.1.0"
  checksum: 10c0/9db675949dbdc9c3763c89e748d0ef8bdad0afbb24d49ceaf4c46c02c77d30db4e0652ed36d0a0a7a95154335fab810d95c86153105bb73b3a90448e2bb14e1a
  languageName: node
  linkType: hard

"p-locate@npm:^4.1.0":
  version: 4.1.0
  resolution: "p-locate@npm:4.1.0"
  dependencies:
    p-limit: "npm:^2.2.0"
  checksum: 10c0/1b476ad69ad7f6059744f343b26d51ce091508935c1dbb80c4e0a2f397ffce0ca3a1f9f5cd3c7ce19d7929a09719d5c65fe70d8ee289c3f267cd36f2881813e9
  languageName: node
  linkType: hard

"p-map@npm:^4.0.0":
  version: 4.0.0
  resolution: "p-map@npm:4.0.0"
  dependencies:
    aggregate-error: "npm:^3.0.0"
  checksum: 10c0/592c05bd6262c466ce269ff172bb8de7c6975afca9b50c975135b974e9bdaafbfe80e61aaaf5be6d1200ba08b30ead04b88cfa7e25ff1e3b93ab28c9f62a2c75
  languageName: node
  linkType: hard

"p-try@npm:^2.0.0":
  version: 2.2.0
  resolution: "p-try@npm:2.2.0"
  checksum: 10c0/c36c19907734c904b16994e6535b02c36c2224d433e01a2f1ab777237f4d86e6289fd5fd464850491e940379d4606ed850c03e0f9ab600b0ebddb511312e177f
  languageName: node
  linkType: hard

"parse-json@npm:^5.2.0":
  version: 5.2.0
  resolution: "parse-json@npm:5.2.0"
  dependencies:
    "@babel/code-frame": "npm:^7.0.0"
    error-ex: "npm:^1.3.1"
    json-parse-even-better-errors: "npm:^2.3.0"
    lines-and-columns: "npm:^1.1.6"
  checksum: 10c0/77947f2253005be7a12d858aedbafa09c9ae39eb4863adf330f7b416ca4f4a08132e453e08de2db46459256fb66afaac5ee758b44fe6541b7cdaf9d252e59585
  languageName: node
  linkType: hard

"path-exists@npm:^4.0.0":
  version: 4.0.0
  resolution: "path-exists@npm:4.0.0"
  checksum: 10c0/8c0bd3f5238188197dc78dced15207a4716c51cc4e3624c44fc97acf69558f5ebb9a2afff486fe1b4ee148e0c133e96c5e11a9aa5c48a3006e3467da070e5e1b
  languageName: node
  linkType: hard

"path-is-absolute@npm:^1.0.0":
  version: 1.0.1
  resolution: "path-is-absolute@npm:1.0.1"
  checksum: 10c0/127da03c82172a2a50099cddbf02510c1791fc2cc5f7713ddb613a56838db1e8168b121a920079d052e0936c23005562059756d653b7c544c53185efe53be078
  languageName: node
  linkType: hard

"path-key@npm:^3.0.0, path-key@npm:^3.1.0":
  version: 3.1.1
  resolution: "path-key@npm:3.1.1"
  checksum: 10c0/748c43efd5a569c039d7a00a03b58eecd1d75f3999f5a28303d75f521288df4823bc057d8784eb72358b2895a05f29a070bc9f1f17d28226cc4e62494cc58c4c
  languageName: node
  linkType: hard

"path-parse@npm:^1.0.7":
  version: 1.0.7
  resolution: "path-parse@npm:1.0.7"
  checksum: 10c0/11ce261f9d294cc7a58d6a574b7f1b935842355ec66fba3c3fd79e0f036462eaf07d0aa95bb74ff432f9afef97ce1926c720988c6a7451d8a584930ae7de86e1
  languageName: node
  linkType: hard

"path-scurry@npm:^1.11.0":
  version: 1.11.0
  resolution: "path-scurry@npm:1.11.0"
  dependencies:
    lru-cache: "npm:^10.2.0"
    minipass: "npm:^5.0.0 || ^6.0.2 || ^7.0.0"
  checksum: 10c0/a5cd5dfbc6d5bb01d06bc2eb16ccdf303d617865438a21fe15431b8ad334f23351f73259abeb7e4be56f9c68d237b26b4dba51c78b508586035dfc2b55085493
  languageName: node
  linkType: hard

"picocolors@npm:^1.0.0":
  version: 1.0.0
  resolution: "picocolors@npm:1.0.0"
  checksum: 10c0/20a5b249e331c14479d94ec6817a182fd7a5680debae82705747b2db7ec50009a5f6648d0621c561b0572703f84dbef0858abcbd5856d3c5511426afcb1961f7
  languageName: node
  linkType: hard

"picomatch@npm:^2.0.4, picomatch@npm:^2.2.3, picomatch@npm:^2.3.1":
  version: 2.3.1
  resolution: "picomatch@npm:2.3.1"
  checksum: 10c0/26c02b8d06f03206fc2ab8d16f19960f2ff9e81a658f831ecb656d8f17d9edc799e8364b1f4a7873e89d9702dff96204be0fa26fe4181f6843f040f819dac4be
  languageName: node
  linkType: hard

"pirates@npm:^4.0.4":
  version: 4.0.6
  resolution: "pirates@npm:4.0.6"
  checksum: 10c0/00d5fa51f8dded94d7429700fb91a0c1ead00ae2c7fd27089f0c5b63e6eca36197fe46384631872690a66f390c5e27198e99006ab77ae472692ab9c2ca903f36
  languageName: node
  linkType: hard

"pkg-dir@npm:^4.2.0":
  version: 4.2.0
  resolution: "pkg-dir@npm:4.2.0"
  dependencies:
    find-up: "npm:^4.0.0"
  checksum: 10c0/c56bda7769e04907a88423feb320babaed0711af8c436ce3e56763ab1021ba107c7b0cafb11cde7529f669cfc22bffcaebffb573645cbd63842ea9fb17cd7728
  languageName: node
  linkType: hard

"pretty-format@npm:^29.0.0, pretty-format@npm:^29.7.0":
  version: 29.7.0
  resolution: "pretty-format@npm:29.7.0"
  dependencies:
    "@jest/schemas": "npm:^29.6.3"
    ansi-styles: "npm:^5.0.0"
    react-is: "npm:^18.0.0"
  checksum: 10c0/edc5ff89f51916f036c62ed433506b55446ff739358de77207e63e88a28ca2894caac6e73dcb68166a606e51c8087d32d400473e6a9fdd2dbe743f46c9c0276f
  languageName: node
  linkType: hard

"proc-log@npm:^3.0.0":
  version: 3.0.0
  resolution: "proc-log@npm:3.0.0"
  checksum: 10c0/f66430e4ff947dbb996058f6fd22de2c66612ae1a89b097744e17fb18a4e8e7a86db99eda52ccf15e53f00b63f4ec0b0911581ff2aac0355b625c8eac509b0dc
  languageName: node
  linkType: hard

"proc-log@npm:^4.2.0":
  version: 4.2.0
  resolution: "proc-log@npm:4.2.0"
  checksum: 10c0/17db4757c2a5c44c1e545170e6c70a26f7de58feb985091fb1763f5081cab3d01b181fb2dd240c9f4a4255a1d9227d163d5771b7e69c9e49a561692db865efb9
  languageName: node
  linkType: hard

"promise-retry@npm:^2.0.1":
  version: 2.0.1
  resolution: "promise-retry@npm:2.0.1"
  dependencies:
    err-code: "npm:^2.0.2"
    retry: "npm:^0.12.0"
  checksum: 10c0/9c7045a1a2928094b5b9b15336dcd2a7b1c052f674550df63cc3f36cd44028e5080448175b6f6ca32b642de81150f5e7b1a98b728f15cb069f2dd60ac2616b96
  languageName: node
  linkType: hard

"prompts@npm:^2.0.1":
  version: 2.4.2
  resolution: "prompts@npm:2.4.2"
  dependencies:
    kleur: "npm:^3.0.3"
    sisteransi: "npm:^1.0.5"
  checksum: 10c0/16f1ac2977b19fe2cf53f8411cc98db7a3c8b115c479b2ca5c82b5527cd937aa405fa04f9a5960abeb9daef53191b53b4d13e35c1f5d50e8718c76917c5f1ea4
  languageName: node
  linkType: hard

"proxy-from-env@npm:^1.1.0":
  version: 1.1.0
  resolution: "proxy-from-env@npm:1.1.0"
  checksum: 10c0/fe7dd8b1bdbbbea18d1459107729c3e4a2243ca870d26d34c2c1bcd3e4425b7bcc5112362df2d93cc7fb9746f6142b5e272fd1cc5c86ddf8580175186f6ad42b
  languageName: node
  linkType: hard

"pure-rand@npm:^6.0.0":
  version: 6.1.0
  resolution: "pure-rand@npm:6.1.0"
  checksum: 10c0/1abe217897bf74dcb3a0c9aba3555fe975023147b48db540aa2faf507aee91c03bf54f6aef0eb2bf59cc259a16d06b28eca37f0dc426d94f4692aeff02fb0e65
  languageName: node
  linkType: hard

"react-is@npm:^18.0.0":
  version: 18.3.1
  resolution: "react-is@npm:18.3.1"
  checksum: 10c0/f2f1e60010c683479e74c63f96b09fb41603527cd131a9959e2aee1e5a8b0caf270b365e5ca77d4a6b18aae659b60a86150bb3979073528877029b35aecd2072
  languageName: node
  linkType: hard

"reflect-metadata@npm:^0.1.13":
  version: 0.1.14
  resolution: "reflect-metadata@npm:0.1.14"
  checksum: 10c0/3a6190c7f6cb224f26a012d11f9e329360c01c1945e2cbefea23976a8bacf9db6b794aeb5bf18adcb673c448a234fbc06fc41853c00a6c206b30f0777ecf019e
  languageName: node
  linkType: hard

"require-directory@npm:^2.1.1":
  version: 2.1.1
  resolution: "require-directory@npm:2.1.1"
  checksum: 10c0/83aa76a7bc1531f68d92c75a2ca2f54f1b01463cb566cf3fbc787d0de8be30c9dbc211d1d46be3497dac5785fe296f2dd11d531945ac29730643357978966e99
  languageName: node
  linkType: hard

"resolve-cwd@npm:^3.0.0":
  version: 3.0.0
  resolution: "resolve-cwd@npm:3.0.0"
  dependencies:
    resolve-from: "npm:^5.0.0"
  checksum: 10c0/e608a3ebd15356264653c32d7ecbc8fd702f94c6703ea4ac2fb81d9c359180cba0ae2e6b71faa446631ed6145454d5a56b227efc33a2d40638ac13f8beb20ee4
  languageName: node
  linkType: hard

"resolve-from@npm:^5.0.0":
  version: 5.0.0
  resolution: "resolve-from@npm:5.0.0"
  checksum: 10c0/b21cb7f1fb746de8107b9febab60095187781137fd803e6a59a76d421444b1531b641bba5857f5dc011974d8a5c635d61cec49e6bd3b7fc20e01f0fafc4efbf2
  languageName: node
  linkType: hard

"resolve.exports@npm:^2.0.0":
  version: 2.0.2
  resolution: "resolve.exports@npm:2.0.2"
  checksum: 10c0/cc4cffdc25447cf34730f388dca5021156ba9302a3bad3d7f168e790dc74b2827dff603f1bc6ad3d299bac269828dca96dd77e036dc9fba6a2a1807c47ab5c98
  languageName: node
  linkType: hard

"resolve@npm:^1.20.0":
  version: 1.22.8
  resolution: "resolve@npm:1.22.8"
  dependencies:
    is-core-module: "npm:^2.13.0"
    path-parse: "npm:^1.0.7"
    supports-preserve-symlinks-flag: "npm:^1.0.0"
  bin:
    resolve: bin/resolve
  checksum: 10c0/07e179f4375e1fd072cfb72ad66d78547f86e6196c4014b31cb0b8bb1db5f7ca871f922d08da0fbc05b94e9fd42206f819648fa3b5b873ebbc8e1dc68fec433a
  languageName: node
  linkType: hard

"resolve@patch:resolve@npm%3A^1.20.0#optional!builtin<compat/resolve>":
  version: 1.22.8
  resolution: "resolve@patch:resolve@npm%3A1.22.8#optional!builtin<compat/resolve>::version=1.22.8&hash=c3c19d"
  dependencies:
    is-core-module: "npm:^2.13.0"
    path-parse: "npm:^1.0.7"
    supports-preserve-symlinks-flag: "npm:^1.0.0"
  bin:
    resolve: bin/resolve
  checksum: 10c0/0446f024439cd2e50c6c8fa8ba77eaa8370b4180f401a96abf3d1ebc770ac51c1955e12764cde449fde3fff480a61f84388e3505ecdbab778f4bef5f8212c729
  languageName: node
  linkType: hard

"retry@npm:^0.12.0":
  version: 0.12.0
  resolution: "retry@npm:0.12.0"
  checksum: 10c0/59933e8501727ba13ad73ef4a04d5280b3717fd650408460c987392efe9d7be2040778ed8ebe933c5cbd63da3dcc37919c141ef8af0a54a6e4fca5a2af177bfe
  languageName: node
  linkType: hard

"safer-buffer@npm:>= 2.1.2 < 3.0.0":
  version: 2.1.2
  resolution: "safer-buffer@npm:2.1.2"
  checksum: 10c0/7e3c8b2e88a1841c9671094bbaeebd94448111dd90a81a1f606f3f67708a6ec57763b3b47f06da09fc6054193e0e6709e77325415dc8422b04497a8070fa02d4
  languageName: node
  linkType: hard

"semver@npm:^6.3.0, semver@npm:^6.3.1":
  version: 6.3.1
  resolution: "semver@npm:6.3.1"
  bin:
    semver: bin/semver.js
  checksum: 10c0/e3d79b609071caa78bcb6ce2ad81c7966a46a7431d9d58b8800cfa9cb6a63699b3899a0e4bcce36167a284578212d9ae6942b6929ba4aa5015c079a67751d42d
  languageName: node
  linkType: hard

"semver@npm:^7.3.5, semver@npm:^7.5.3, semver@npm:^7.5.4":
  version: 7.6.2
  resolution: "semver@npm:7.6.2"
  bin:
    semver: bin/semver.js
  checksum: 10c0/97d3441e97ace8be4b1976433d1c32658f6afaff09f143e52c593bae7eef33de19e3e369c88bd985ce1042c6f441c80c6803078d1de2a9988080b66684cbb30c
  languageName: node
  linkType: hard

"shebang-command@npm:^2.0.0":
  version: 2.0.0
  resolution: "shebang-command@npm:2.0.0"
  dependencies:
    shebang-regex: "npm:^3.0.0"
  checksum: 10c0/a41692e7d89a553ef21d324a5cceb5f686d1f3c040759c50aab69688634688c5c327f26f3ecf7001ebfd78c01f3c7c0a11a7c8bfd0a8bc9f6240d4f40b224e4e
  languageName: node
  linkType: hard

"shebang-regex@npm:^3.0.0":
  version: 3.0.0
  resolution: "shebang-regex@npm:3.0.0"
  checksum: 10c0/1dbed0726dd0e1152a92696c76c7f06084eb32a90f0528d11acd764043aacf76994b2fb30aa1291a21bd019d6699164d048286309a278855ee7bec06cf6fb690
  languageName: node
  linkType: hard

"signal-exit@npm:^3.0.3, signal-exit@npm:^3.0.7":
  version: 3.0.7
  resolution: "signal-exit@npm:3.0.7"
  checksum: 10c0/25d272fa73e146048565e08f3309d5b942c1979a6f4a58a8c59d5fa299728e9c2fcd1a759ec870863b1fd38653670240cd420dad2ad9330c71f36608a6a1c912
  languageName: node
  linkType: hard

"signal-exit@npm:^4.0.1":
  version: 4.1.0
  resolution: "signal-exit@npm:4.1.0"
  checksum: 10c0/41602dce540e46d599edba9d9860193398d135f7ff72cab629db5171516cfae628d21e7bfccde1bbfdf11c48726bc2a6d1a8fb8701125852fbfda7cf19c6aa83
  languageName: node
  linkType: hard

"sisteransi@npm:^1.0.5":
  version: 1.0.5
  resolution: "sisteransi@npm:1.0.5"
  checksum: 10c0/230ac975cca485b7f6fe2b96a711aa62a6a26ead3e6fb8ba17c5a00d61b8bed0d7adc21f5626b70d7c33c62ff4e63933017a6462942c719d1980bb0b1207ad46
  languageName: node
  linkType: hard

"slash@npm:^3.0.0":
  version: 3.0.0
  resolution: "slash@npm:3.0.0"
  checksum: 10c0/e18488c6a42bdfd4ac5be85b2ced3ccd0224773baae6ad42cfbb9ec74fc07f9fa8396bd35ee638084ead7a2a0818eb5e7151111544d4731ce843019dab4be47b
  languageName: node
  linkType: hard

"smart-buffer@npm:^4.2.0":
  version: 4.2.0
  resolution: "smart-buffer@npm:4.2.0"
  checksum: 10c0/a16775323e1404dd43fabafe7460be13a471e021637bc7889468eb45ce6a6b207261f454e4e530a19500cc962c4cc5348583520843b363f4193cee5c00e1e539
  languageName: node
  linkType: hard

"socks-proxy-agent@npm:^8.0.3":
  version: 8.0.3
  resolution: "socks-proxy-agent@npm:8.0.3"
  dependencies:
    agent-base: "npm:^7.1.1"
    debug: "npm:^4.3.4"
    socks: "npm:^2.7.1"
  checksum: 10c0/4950529affd8ccd6951575e21c1b7be8531b24d924aa4df3ee32df506af34b618c4e50d261f4cc603f1bfd8d426915b7d629966c8ce45b05fb5ad8c8b9a6459d
  languageName: node
  linkType: hard

"socks@npm:^2.7.1":
  version: 2.8.3
  resolution: "socks@npm:2.8.3"
  dependencies:
    ip-address: "npm:^9.0.5"
    smart-buffer: "npm:^4.2.0"
  checksum: 10c0/d54a52bf9325165770b674a67241143a3d8b4e4c8884560c4e0e078aace2a728dffc7f70150660f51b85797c4e1a3b82f9b7aa25e0a0ceae1a243365da5c51a7
  languageName: node
  linkType: hard

"source-map-support@npm:0.5.13":
  version: 0.5.13
  resolution: "source-map-support@npm:0.5.13"
  dependencies:
    buffer-from: "npm:^1.0.0"
    source-map: "npm:^0.6.0"
  checksum: 10c0/137539f8c453fa0f496ea42049ab5da4569f96781f6ac8e5bfda26937be9494f4e8891f523c5f98f0e85f71b35d74127a00c46f83f6a4f54672b58d53202565e
  languageName: node
  linkType: hard

"source-map@npm:^0.6.0, source-map@npm:^0.6.1":
  version: 0.6.1
  resolution: "source-map@npm:0.6.1"
  checksum: 10c0/ab55398007c5e5532957cb0beee2368529618ac0ab372d789806f5718123cc4367d57de3904b4e6a4170eb5a0b0f41373066d02ca0735a0c4d75c7d328d3e011
  languageName: node
  linkType: hard

"sprintf-js@npm:^1.1.3":
  version: 1.1.3
  resolution: "sprintf-js@npm:1.1.3"
  checksum: 10c0/09270dc4f30d479e666aee820eacd9e464215cdff53848b443964202bf4051490538e5dd1b42e1a65cf7296916ca17640aebf63dae9812749c7542ee5f288dec
  languageName: node
  linkType: hard

"sprintf-js@npm:~1.0.2":
  version: 1.0.3
  resolution: "sprintf-js@npm:1.0.3"
  checksum: 10c0/ecadcfe4c771890140da5023d43e190b7566d9cf8b2d238600f31bec0fc653f328da4450eb04bd59a431771a8e9cc0e118f0aa3974b683a4981b4e07abc2a5bb
  languageName: node
  linkType: hard

"ssri@npm:^10.0.0":
  version: 10.0.6
  resolution: "ssri@npm:10.0.6"
  dependencies:
    minipass: "npm:^7.0.3"
  checksum: 10c0/e5a1e23a4057a86a97971465418f22ea89bd439ac36ade88812dd920e4e61873e8abd6a9b72a03a67ef50faa00a2daf1ab745c5a15b46d03e0544a0296354227
  languageName: node
  linkType: hard

"stack-utils@npm:^2.0.3":
  version: 2.0.6
  resolution: "stack-utils@npm:2.0.6"
  dependencies:
    escape-string-regexp: "npm:^2.0.0"
  checksum: 10c0/651c9f87667e077584bbe848acaecc6049bc71979f1e9a46c7b920cad4431c388df0f51b8ad7cfd6eed3db97a2878d0fc8b3122979439ea8bac29c61c95eec8a
  languageName: node
  linkType: hard

"string-length@npm:^4.0.1":
  version: 4.0.2
  resolution: "string-length@npm:4.0.2"
  dependencies:
    char-regex: "npm:^1.0.2"
    strip-ansi: "npm:^6.0.0"
  checksum: 10c0/1cd77409c3d7db7bc59406f6bcc9ef0783671dcbabb23597a1177c166906ef2ee7c8290f78cae73a8aec858768f189d2cb417797df5e15ec4eb5e16b3346340c
  languageName: node
  linkType: hard

"string-width-cjs@npm:string-width@^4.2.0, string-width@npm:^4.1.0, string-width@npm:^4.2.0, string-width@npm:^4.2.3":
  version: 4.2.3
  resolution: "string-width@npm:4.2.3"
  dependencies:
    emoji-regex: "npm:^8.0.0"
    is-fullwidth-code-point: "npm:^3.0.0"
    strip-ansi: "npm:^6.0.1"
  checksum: 10c0/1e525e92e5eae0afd7454086eed9c818ee84374bb80328fc41217ae72ff5f065ef1c9d7f72da41de40c75fa8bb3dee63d92373fd492c84260a552c636392a47b
  languageName: node
  linkType: hard

"string-width@npm:^5.0.1, string-width@npm:^5.1.2":
  version: 5.1.2
  resolution: "string-width@npm:5.1.2"
  dependencies:
    eastasianwidth: "npm:^0.2.0"
    emoji-regex: "npm:^9.2.2"
    strip-ansi: "npm:^7.0.1"
  checksum: 10c0/ab9c4264443d35b8b923cbdd513a089a60de339216d3b0ed3be3ba57d6880e1a192b70ae17225f764d7adbf5994e9bb8df253a944736c15a0240eff553c678ca
  languageName: node
  linkType: hard

"strip-ansi-cjs@npm:strip-ansi@^6.0.1, strip-ansi@npm:^6.0.0, strip-ansi@npm:^6.0.1":
  version: 6.0.1
  resolution: "strip-ansi@npm:6.0.1"
  dependencies:
    ansi-regex: "npm:^5.0.1"
  checksum: 10c0/1ae5f212a126fe5b167707f716942490e3933085a5ff6c008ab97ab2f272c8025d3aa218b7bd6ab25729ca20cc81cddb252102f8751e13482a5199e873680952
  languageName: node
  linkType: hard

"strip-ansi@npm:^7.0.1":
  version: 7.1.0
  resolution: "strip-ansi@npm:7.1.0"
  dependencies:
    ansi-regex: "npm:^6.0.1"
  checksum: 10c0/a198c3762e8832505328cbf9e8c8381de14a4fa50a4f9b2160138158ea88c0f5549fb50cb13c651c3088f47e63a108b34622ec18c0499b6c8c3a5ddf6b305ac4
  languageName: node
  linkType: hard

"strip-bom@npm:^4.0.0":
  version: 4.0.0
  resolution: "strip-bom@npm:4.0.0"
  checksum: 10c0/26abad1172d6bc48985ab9a5f96c21e440f6e7e476686de49be813b5a59b3566dccb5c525b831ec54fe348283b47f3ffb8e080bc3f965fde12e84df23f6bb7ef
  languageName: node
  linkType: hard

"strip-final-newline@npm:^2.0.0":
  version: 2.0.0
  resolution: "strip-final-newline@npm:2.0.0"
  checksum: 10c0/bddf8ccd47acd85c0e09ad7375409d81653f645fda13227a9d459642277c253d877b68f2e5e4d819fe75733b0e626bac7e954c04f3236f6d196f79c94fa4a96f
  languageName: node
  linkType: hard

"strip-json-comments@npm:^3.1.1":
  version: 3.1.1
  resolution: "strip-json-comments@npm:3.1.1"
  checksum: 10c0/9681a6257b925a7fa0f285851c0e613cc934a50661fa7bb41ca9cbbff89686bb4a0ee366e6ecedc4daafd01e83eee0720111ab294366fe7c185e935475ebcecd
  languageName: node
  linkType: hard

"supports-color@npm:^5.3.0":
  version: 5.5.0
  resolution: "supports-color@npm:5.5.0"
  dependencies:
    has-flag: "npm:^3.0.0"
  checksum: 10c0/6ae5ff319bfbb021f8a86da8ea1f8db52fac8bd4d499492e30ec17095b58af11f0c55f8577390a749b1c4dde691b6a0315dab78f5f54c9b3d83f8fb5905c1c05
  languageName: node
  linkType: hard

"supports-color@npm:^7.1.0":
  version: 7.2.0
  resolution: "supports-color@npm:7.2.0"
  dependencies:
    has-flag: "npm:^4.0.0"
  checksum: 10c0/afb4c88521b8b136b5f5f95160c98dee7243dc79d5432db7efc27efb219385bbc7d9427398e43dd6cc730a0f87d5085ce1652af7efbe391327bc0a7d0f7fc124
  languageName: node
  linkType: hard

"supports-color@npm:^8.0.0":
  version: 8.1.1
  resolution: "supports-color@npm:8.1.1"
  dependencies:
    has-flag: "npm:^4.0.0"
  checksum: 10c0/ea1d3c275dd604c974670f63943ed9bd83623edc102430c05adb8efc56ba492746b6e95386e7831b872ec3807fd89dd8eb43f735195f37b5ec343e4234cc7e89
  languageName: node
  linkType: hard

"supports-preserve-symlinks-flag@npm:^1.0.0":
  version: 1.0.0
  resolution: "supports-preserve-symlinks-flag@npm:1.0.0"
  checksum: 10c0/6c4032340701a9950865f7ae8ef38578d8d7053f5e10518076e6554a9381fa91bd9c6850193695c141f32b21f979c985db07265a758867bac95de05f7d8aeb39
  languageName: node
  linkType: hard

"tar@npm:^6.1.11, tar@npm:^6.1.2":
  version: 6.2.1
  resolution: "tar@npm:6.2.1"
  dependencies:
    chownr: "npm:^2.0.0"
    fs-minipass: "npm:^2.0.0"
    minipass: "npm:^5.0.0"
    minizlib: "npm:^2.1.1"
    mkdirp: "npm:^1.0.3"
    yallist: "npm:^4.0.0"
  checksum: 10c0/a5eca3eb50bc11552d453488344e6507156b9193efd7635e98e867fab275d527af53d8866e2370cd09dfe74378a18111622ace35af6a608e5223a7d27fe99537
  languageName: node
  linkType: hard

"test-exclude@npm:^6.0.0":
  version: 6.0.0
  resolution: "test-exclude@npm:6.0.0"
  dependencies:
    "@istanbuljs/schema": "npm:^0.1.2"
    glob: "npm:^7.1.4"
    minimatch: "npm:^3.0.4"
  checksum: 10c0/019d33d81adff3f9f1bfcff18125fb2d3c65564f437d9be539270ee74b994986abb8260c7c2ce90e8f30162178b09dbbce33c6389273afac4f36069c48521f57
  languageName: node
  linkType: hard

"tmpl@npm:1.0.5":
  version: 1.0.5
  resolution: "tmpl@npm:1.0.5"
  checksum: 10c0/f935537799c2d1922cb5d6d3805f594388f75338fe7a4a9dac41504dd539704ca4db45b883b52e7b0aa5b2fd5ddadb1452bf95cd23a69da2f793a843f9451cc9
  languageName: node
  linkType: hard

"to-fast-properties@npm:^2.0.0":
  version: 2.0.0
  resolution: "to-fast-properties@npm:2.0.0"
  checksum: 10c0/b214d21dbfb4bce3452b6244b336806ffea9c05297148d32ebb428d5c43ce7545bdfc65a1ceb58c9ef4376a65c0cb2854d645f33961658b3e3b4f84910ddcdd7
  languageName: node
  linkType: hard

"to-regex-range@npm:^5.0.1":
  version: 5.0.1
  resolution: "to-regex-range@npm:5.0.1"
  dependencies:
    is-number: "npm:^7.0.0"
  checksum: 10c0/487988b0a19c654ff3e1961b87f471702e708fa8a8dd02a298ef16da7206692e8552a0250e8b3e8759270f62e9d8314616f6da274734d3b558b1fc7b7724e892
  languageName: node
  linkType: hard

"tr46@npm:~0.0.3":
  version: 0.0.3
  resolution: "tr46@npm:0.0.3"
  checksum: 10c0/047cb209a6b60c742f05c9d3ace8fa510bff609995c129a37ace03476a9b12db4dbf975e74600830ef0796e18882b2381fb5fb1f6b4f96b832c374de3ab91a11
  languageName: node
  linkType: hard

"ts-jest@npm:^29.1.5":
  version: 29.1.5
  resolution: "ts-jest@npm:29.1.5"
  dependencies:
    bs-logger: "npm:0.x"
    fast-json-stable-stringify: "npm:2.x"
    jest-util: "npm:^29.0.0"
    json5: "npm:^2.2.3"
    lodash.memoize: "npm:4.x"
    make-error: "npm:1.x"
    semver: "npm:^7.5.3"
    yargs-parser: "npm:^21.0.1"
  peerDependencies:
    "@babel/core": ">=7.0.0-beta.0 <8"
    "@jest/transform": ^29.0.0
    "@jest/types": ^29.0.0
    babel-jest: ^29.0.0
    jest: ^29.0.0
    typescript: ">=4.3 <6"
  peerDependenciesMeta:
    "@babel/core":
      optional: true
    "@jest/transform":
      optional: true
    "@jest/types":
      optional: true
    babel-jest:
      optional: true
    esbuild:
      optional: true
  bin:
    ts-jest: cli.js
  checksum: 10c0/5c1baf4d23342e138745d6283ae530b07957b779b103abc99fd6713e1fd7fc65d4a4638695d5a76e177f78c46c80ec53598b365f245997db5d3d00617940bf87
  languageName: node
  linkType: hard

"tslib@npm:^2.3.0":
  version: 2.6.2
  resolution: "tslib@npm:2.6.2"
  checksum: 10c0/e03a8a4271152c8b26604ed45535954c0a45296e32445b4b87f8a5abdb2421f40b59b4ca437c4346af0f28179780d604094eb64546bee2019d903d01c6c19bdb
  languageName: node
  linkType: hard

"tweetnacl@npm:1.0.3":
  version: 1.0.3
  resolution: "tweetnacl@npm:1.0.3"
  checksum: 10c0/069d9df51e8ad4a89fbe6f9806c68e06c65be3c7d42f0701cc43dba5f0d6064686b238bbff206c5addef8854e3ce00c643bff59432ea2f2c639feab0ee1a93f9
  languageName: node
  linkType: hard

"type-detect@npm:4.0.8":
  version: 4.0.8
  resolution: "type-detect@npm:4.0.8"
  checksum: 10c0/8fb9a51d3f365a7de84ab7f73b653534b61b622aa6800aecdb0f1095a4a646d3f5eb295322127b6573db7982afcd40ab492d038cf825a42093a58b1e1353e0bd
  languageName: node
  linkType: hard

"type-fest@npm:^0.21.3":
  version: 0.21.3
  resolution: "type-fest@npm:0.21.3"
  checksum: 10c0/902bd57bfa30d51d4779b641c2bc403cdf1371fb9c91d3c058b0133694fcfdb817aef07a47f40faf79039eecbaa39ee9d3c532deff244f3a19ce68cea71a61e8
  languageName: node
  linkType: hard

"typescript@npm:^5.5.3":
  version: 5.5.3
  resolution: "typescript@npm:5.5.3"
  bin:
    tsc: bin/tsc
    tsserver: bin/tsserver
  checksum: 10c0/f52c71ccbc7080b034b9d3b72051d563601a4815bf3e39ded188e6ce60813f75dbedf11ad15dd4d32a12996a9ed8c7155b46c93a9b9c9bad1049766fe614bbdd
  languageName: node
  linkType: hard

"typescript@patch:typescript@npm%3A^5.5.3#optional!builtin<compat/typescript>":
  version: 5.5.3
  resolution: "typescript@patch:typescript@npm%3A5.5.3#optional!builtin<compat/typescript>::version=5.5.3&hash=b45daf"
  bin:
    tsc: bin/tsc
    tsserver: bin/tsserver
  checksum: 10c0/5a437c416251334deeaf29897157032311f3f126547cfdc4b133768b606cb0e62bcee733bb97cf74c42fe7268801aea1392d8e40988cdef112e9546eba4c03c5
  languageName: node
  linkType: hard

"undici-types@npm:~5.26.4":
  version: 5.26.5
  resolution: "undici-types@npm:5.26.5"
  checksum: 10c0/bb673d7876c2d411b6eb6c560e0c571eef4a01c1c19925175d16e3a30c4c428181fb8d7ae802a261f283e4166a0ac435e2f505743aa9e45d893f9a3df017b501
  languageName: node
  linkType: hard

"unique-filename@npm:^3.0.0":
  version: 3.0.0
  resolution: "unique-filename@npm:3.0.0"
  dependencies:
    unique-slug: "npm:^4.0.0"
  checksum: 10c0/6363e40b2fa758eb5ec5e21b3c7fb83e5da8dcfbd866cc0c199d5534c42f03b9ea9ab069769cc388e1d7ab93b4eeef28ef506ab5f18d910ef29617715101884f
  languageName: node
  linkType: hard

"unique-slug@npm:^4.0.0":
  version: 4.0.0
  resolution: "unique-slug@npm:4.0.0"
  dependencies:
    imurmurhash: "npm:^0.1.4"
  checksum: 10c0/cb811d9d54eb5821b81b18205750be84cb015c20a4a44280794e915f5a0a70223ce39066781a354e872df3572e8155c228f43ff0cce94c7cbf4da2cc7cbdd635
  languageName: node
  linkType: hard

"update-browserslist-db@npm:^1.0.13":
  version: 1.0.15
  resolution: "update-browserslist-db@npm:1.0.15"
  dependencies:
    escalade: "npm:^3.1.2"
    picocolors: "npm:^1.0.0"
  peerDependencies:
    browserslist: ">= 4.21.0"
  bin:
    update-browserslist-db: cli.js
  checksum: 10c0/c5f67dc68aba9a37701a14199e57e22f20c579411d386f47b4d81f6e3f06fd3ec256310594f4f9d6b01bc1cfb93cb1ebb1a1da70c4fa28720bc1d030f55bb8a1
  languageName: node
  linkType: hard

"v8-to-istanbul@npm:^9.0.1":
  version: 9.2.0
  resolution: "v8-to-istanbul@npm:9.2.0"
  dependencies:
    "@jridgewell/trace-mapping": "npm:^0.3.12"
    "@types/istanbul-lib-coverage": "npm:^2.0.1"
    convert-source-map: "npm:^2.0.0"
  checksum: 10c0/e691ba4dd0dea4a884e52c37dbda30cce6f9eeafe9b26721e449429c6bb0f4b6d1e33fabe7711d0f67f7a34c3bfd56c873f7375bba0b1534e6a2843ce99550e5
  languageName: node
  linkType: hard

"walker@npm:^1.0.8":
  version: 1.0.8
  resolution: "walker@npm:1.0.8"
  dependencies:
    makeerror: "npm:1.0.12"
  checksum: 10c0/a17e037bccd3ca8a25a80cb850903facdfed0de4864bd8728f1782370715d679fa72e0a0f5da7c1c1379365159901e5935f35be531229da53bbfc0efdabdb48e
  languageName: node
  linkType: hard

"webidl-conversions@npm:^3.0.0":
  version: 3.0.1
  resolution: "webidl-conversions@npm:3.0.1"
  checksum: 10c0/5612d5f3e54760a797052eb4927f0ddc01383550f542ccd33d5238cfd65aeed392a45ad38364970d0a0f4fea32e1f4d231b3d8dac4a3bdd385e5cf802ae097db
  languageName: node
  linkType: hard

"whatwg-fetch@npm:^3.4.1":
  version: 3.6.20
  resolution: "whatwg-fetch@npm:3.6.20"
  checksum: 10c0/fa972dd14091321d38f36a4d062298df58c2248393ef9e8b154493c347c62e2756e25be29c16277396046d6eaa4b11bd174f34e6403fff6aaca9fb30fa1ff46d
  languageName: node
  linkType: hard

"whatwg-url@npm:^5.0.0":
  version: 5.0.0
  resolution: "whatwg-url@npm:5.0.0"
  dependencies:
    tr46: "npm:~0.0.3"
    webidl-conversions: "npm:^3.0.0"
  checksum: 10c0/1588bed84d10b72d5eec1d0faa0722ba1962f1821e7539c535558fb5398d223b0c50d8acab950b8c488b4ba69043fd833cc2697056b167d8ad46fac3995a55d5
  languageName: node
  linkType: hard

"which@npm:^2.0.1":
  version: 2.0.2
  resolution: "which@npm:2.0.2"
  dependencies:
    isexe: "npm:^2.0.0"
  bin:
    node-which: ./bin/node-which
  checksum: 10c0/66522872a768b60c2a65a57e8ad184e5372f5b6a9ca6d5f033d4b0dc98aff63995655a7503b9c0a2598936f532120e81dd8cc155e2e92ed662a2b9377cc4374f
  languageName: node
  linkType: hard

"which@npm:^4.0.0":
  version: 4.0.0
  resolution: "which@npm:4.0.0"
  dependencies:
    isexe: "npm:^3.1.1"
  bin:
    node-which: bin/which.js
  checksum: 10c0/449fa5c44ed120ccecfe18c433296a4978a7583bf2391c50abce13f76878d2476defde04d0f79db8165bdf432853c1f8389d0485ca6e8ebce3bbcded513d5e6a
  languageName: node
  linkType: hard

"worker-example@workspace:.":
  version: 0.0.0-use.local
  resolution: "worker-example@workspace:."
  dependencies:
    "@jest/globals": "npm:^29.7.0"
    "@types/jest": "npm:^29.5.12"
    "@types/node": "npm:^20.14.10"
    jest: "npm:^29.7.0"
    o1js: "npm:^1.4.0"
    ts-jest: "npm:^29.1.5"
    typescript: "npm:^5.5.3"
    zkcloudworker: "npm:^0.12.2"
  languageName: unknown
  linkType: soft

"wrap-ansi-cjs@npm:wrap-ansi@^7.0.0, wrap-ansi@npm:^7.0.0":
  version: 7.0.0
  resolution: "wrap-ansi@npm:7.0.0"
  dependencies:
    ansi-styles: "npm:^4.0.0"
    string-width: "npm:^4.1.0"
    strip-ansi: "npm:^6.0.0"
  checksum: 10c0/d15fc12c11e4cbc4044a552129ebc75ee3f57aa9c1958373a4db0292d72282f54373b536103987a4a7594db1ef6a4f10acf92978f79b98c49306a4b58c77d4da
  languageName: node
  linkType: hard

"wrap-ansi@npm:^8.1.0":
  version: 8.1.0
  resolution: "wrap-ansi@npm:8.1.0"
  dependencies:
    ansi-styles: "npm:^6.1.0"
    string-width: "npm:^5.0.1"
    strip-ansi: "npm:^7.0.1"
  checksum: 10c0/138ff58a41d2f877eae87e3282c0630fc2789012fc1af4d6bd626eeb9a2f9a65ca92005e6e69a75c7b85a68479fe7443c7dbe1eb8fbaa681a4491364b7c55c60
  languageName: node
  linkType: hard

"wrappy@npm:1":
  version: 1.0.2
  resolution: "wrappy@npm:1.0.2"
  checksum: 10c0/56fece1a4018c6a6c8e28fbc88c87e0fbf4ea8fd64fc6c63b18f4acc4bd13e0ad2515189786dd2c30d3eec9663d70f4ecf699330002f8ccb547e4a18231fc9f0
  languageName: node
  linkType: hard

"write-file-atomic@npm:^4.0.2":
  version: 4.0.2
  resolution: "write-file-atomic@npm:4.0.2"
  dependencies:
    imurmurhash: "npm:^0.1.4"
    signal-exit: "npm:^3.0.7"
  checksum: 10c0/a2c282c95ef5d8e1c27b335ae897b5eca00e85590d92a3fd69a437919b7b93ff36a69ea04145da55829d2164e724bc62202cdb5f4b208b425aba0807889375c7
  languageName: node
  linkType: hard

"y18n@npm:^5.0.5":
  version: 5.0.8
  resolution: "y18n@npm:5.0.8"
  checksum: 10c0/4df2842c36e468590c3691c894bc9cdbac41f520566e76e24f59401ba7d8b4811eb1e34524d57e54bc6d864bcb66baab7ffd9ca42bf1eda596618f9162b91249
  languageName: node
  linkType: hard

"yallist@npm:^3.0.2":
  version: 3.1.1
  resolution: "yallist@npm:3.1.1"
  checksum: 10c0/c66a5c46bc89af1625476f7f0f2ec3653c1a1791d2f9407cfb4c2ba812a1e1c9941416d71ba9719876530e3340a99925f697142989371b72d93b9ee628afd8c1
  languageName: node
  linkType: hard

"yallist@npm:^4.0.0":
  version: 4.0.0
  resolution: "yallist@npm:4.0.0"
  checksum: 10c0/2286b5e8dbfe22204ab66e2ef5cc9bbb1e55dfc873bbe0d568aa943eb255d131890dfd5bf243637273d31119b870f49c18fcde2c6ffbb7a7a092b870dc90625a
  languageName: node
  linkType: hard

"yargs-parser@npm:^21.0.1, yargs-parser@npm:^21.1.1":
  version: 21.1.1
  resolution: "yargs-parser@npm:21.1.1"
  checksum: 10c0/f84b5e48169479d2f402239c59f084cfd1c3acc197a05c59b98bab067452e6b3ea46d4dd8ba2985ba7b3d32a343d77df0debd6b343e5dae3da2aab2cdf5886b2
  languageName: node
  linkType: hard

"yargs@npm:^17.3.1":
  version: 17.7.2
  resolution: "yargs@npm:17.7.2"
  dependencies:
    cliui: "npm:^8.0.1"
    escalade: "npm:^3.1.1"
    get-caller-file: "npm:^2.0.5"
    require-directory: "npm:^2.1.1"
    string-width: "npm:^4.2.3"
    y18n: "npm:^5.0.5"
    yargs-parser: "npm:^21.1.1"
  checksum: 10c0/ccd7e723e61ad5965fffbb791366db689572b80cca80e0f96aad968dfff4156cd7cd1ad18607afe1046d8241e6fb2d6c08bf7fa7bfb5eaec818735d8feac8f05
  languageName: node
  linkType: hard

"yocto-queue@npm:^0.1.0":
  version: 0.1.0
  resolution: "yocto-queue@npm:0.1.0"
  checksum: 10c0/dceb44c28578b31641e13695d200d34ec4ab3966a5729814d5445b194933c096b7ced71494ce53a0e8820685d1d010df8b2422e5bf2cdea7e469d97ffbea306f
  languageName: node
  linkType: hard

"zkcloudworker@npm:^0.12.2":
  version: 0.12.2
  resolution: "zkcloudworker@npm:0.12.2"
  dependencies:
    axios: "npm:^1.7.2"
    chalk: "npm:^4.1.2"
    nats: "npm:^2.27.0"
  peerDependencies:
    o1js: ^1.4.0
  checksum: 10c0/2b1f19279409001cbde92a83711570c18ff6ec3a787fefaabbb6c4c6fbe4d923d32e6cffd07eb3efeecd809604f1ddeeae4214aed38e6ce4ad46287d2cb1f437
  languageName: node
  linkType: hard

```

Contents of package.json:
```
{
  "name": "worker-example",
  "version": "0.7.0",
  "author": "DFST",
  "scripts": {
    "test": "jest",
    "local": "jest --chain=local --cloud=local --deploy=true --send=false --one=true --many=true",
    "lightnet.deploy": "jest --chain=lightnet --cloud=local --deploy=true --one=false --many=false",
    "lightnet.run": "jest --chain=lightnet --cloud=local --deploy=false --one=true --many=true",
    "zeko.deploy": "jest --chain=zeko --deploy=true --cloud=local --one=false --many=false",
    "zeko.run": "jest --chain=zeko --deploy=false --one=true --many=true -send=false",
    "devnet.deploy": "jest --chain=devnet --cloud=local --deploy=true --one=false --many=false",
    "devnet.run": "jest --chain=devnet --deploy=false --one=true --many=true --send=false",
    "devnet.test": "jest --chain=devnet --deploy=false --one=true --many=false --send=false",
    "files.local": "jest --chain=local --cloud=local --deploy=false --one=false --many=false --send=false --files=true",
    "files.devnet": "jest --chain=devnet --deploy=false --one=false --many=false --send=false --files=true",
    "encrypt.local": "jest --chain=local --cloud=local --deploy=false --one=false --many=false --send=false --encrypt=true",
    "encrypt.devnet": "jest --chain=devnet --deploy=false --one=false --many=false --send=false --encrypt=true"
  },
  "devDependencies": {
    "@jest/globals": "^29.7.0",
    "@types/jest": "^29.5.12",
    "@types/node": "^20.14.10",
    "jest": "^29.7.0",
    "ts-jest": "^29.1.5",
    "typescript": "^5.5.3"
  },
  "packageManager": "yarn@4.2.1",
  "dependencies": {
    "o1js": "^1.4.0",
    "zkcloudworker": "^0.12.2"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "slowTestThreshold": 1500,
    "testTimeout": 10800000,
    "bail": true,
    "verbose": true,
    "roots": [
      "tests"
    ],
    "setupFilesAfterEnv": [
      "./jest-config.ts"
    ]
  }
}

```

Contents of tsconfig.json:
```
{
  "compilerOptions": {
    "target": "es2021" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', 'ES2021', or 'ESNEXT'. */,
    "lib": ["es2021", "dom"],
    "module": "CommonJS" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */,
    "outDir": "./dist" /* Redirect output structure to the directory. */,
    "strict": true /* Enable all strict type-checking options. */,
    "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
    "skipLibCheck": true /* Skip type checking of declaration files. */,
    "forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */,
    "composite": true,
    "experimentalDecorators": true,
    "emitDecoratorMetadata": true,
    "strictPropertyInitialization": false,
    "moduleResolution": "node",
    "resolveJsonModule": true
  },
  "include": ["**/*.ts", "package.json", "env.json"],
  "exclude": ["node_modules", "dist"]
}

```

Contents of index.ts:
```
import {
  Cloud,
  zkCloudWorker,
  initBlockchain,
  VerificationData,
  blockchain,
} from "zkcloudworker";
import { initializeBindings } from "o1js";
import { AddWorker } from "./src/worker";
import packageJson from "./package.json";
import { AddContract, AddProgram } from "./src/contract";

export async function zkcloudworker(cloud: Cloud): Promise<zkCloudWorker> {
  console.log(
    `starting worker example version ${
      packageJson.version ?? "unknown"
    } on chain ${cloud.chain}`
  );
  await initializeBindings();
  await initBlockchain(cloud.chain);
  return new AddWorker(cloud);
}

export async function verify(chain: blockchain): Promise<VerificationData> {
  if (chain !== "devnet") throw new Error("Unsupported chain");
  return {
    contract: AddContract,
    programDependencies: [AddProgram],
    contractDependencies: [],
    address: "B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD",
    chain: "devnet",
  } as VerificationData;
}

```

Contents of dist/tsconfig.tsbuildinfo:
```
{"program":{"fileNames":["../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es5.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2015.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2016.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2017.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2018.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2019.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2020.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2021.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.dom.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2015.core.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2015.collection.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2015.generator.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2015.promise.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2016.intl.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2017.date.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2017.object.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2017.string.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2017.intl.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2018.intl.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2018.promise.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2019.array.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2019.object.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2019.string.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2019.symbol.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2019.intl.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2020.date.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2020.promise.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2020.string.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2020.intl.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2020.number.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2021.promise.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2021.string.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2021.weakref.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.es2021.intl.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.esnext.intl.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.decorators.d.ts","../../../../../../.nvm/versions/node/v20.12.2/lib/node_modules/typescript/lib/lib.decorators.legacy.d.ts","../node_modules/zkcloudworker/lib/web/src/cloud/utils/graphql.d.ts","../node_modules/zkcloudworker/lib/web/src/cloud/utils/utils.d.ts","../node_modules/zkcloudworker/lib/web/src/cloud/utils/base64.d.ts","../node_modules/zkcloudworker/lib/web/src/cloud/utils/index.d.ts","../node_modules/@types/node/assert.d.ts","../node_modules/@types/node/assert/strict.d.ts","../node_modules/undici-types/header.d.ts","../node_modules/undici-types/readable.d.ts","../node_modules/undici-types/file.d.ts","../node_modules/undici-types/fetch.d.ts","../node_modules/undici-types/formdata.d.ts","../node_modules/undici-types/connector.d.ts","../node_modules/undici-types/client.d.ts","../node_modules/undici-types/errors.d.ts","../node_modules/undici-types/dispatcher.d.ts","../node_modules/undici-types/global-dispatcher.d.ts","../node_modules/undici-types/global-origin.d.ts","../node_modules/undici-types/pool-stats.d.ts","../node_modules/undici-types/pool.d.ts","../node_modules/undici-types/handlers.d.ts","../node_modules/undici-types/balanced-pool.d.ts","../node_modules/undici-types/agent.d.ts","../node_modules/undici-types/mock-interceptor.d.ts","../node_modules/undici-types/mock-agent.d.ts","../node_modules/undici-types/mock-client.d.ts","../node_modules/undici-types/mock-pool.d.ts","../node_modules/undici-types/mock-errors.d.ts","../node_modules/undici-types/proxy-agent.d.ts","../node_modules/undici-types/api.d.ts","../node_modules/undici-types/cookies.d.ts","../node_modules/undici-types/patch.d.ts","../node_modules/undici-types/filereader.d.ts","../node_modules/undici-types/diagnostics-channel.d.ts","../node_modules/undici-types/websocket.d.ts","../node_modules/undici-types/content-type.d.ts","../node_modules/undici-types/cache.d.ts","../node_modules/undici-types/interceptors.d.ts","../node_modules/undici-types/index.d.ts","../node_modules/@types/node/globals.d.ts","../node_modules/@types/node/async_hooks.d.ts","../node_modules/@types/node/buffer.d.ts","../node_modules/@types/node/child_process.d.ts","../node_modules/@types/node/cluster.d.ts","../node_modules/@types/node/console.d.ts","../node_modules/@types/node/constants.d.ts","../node_modules/@types/node/crypto.d.ts","../node_modules/@types/node/dgram.d.ts","../node_modules/@types/node/diagnostics_channel.d.ts","../node_modules/@types/node/dns.d.ts","../node_modules/@types/node/dns/promises.d.ts","../node_modules/@types/node/domain.d.ts","../node_modules/@types/node/dom-events.d.ts","../node_modules/@types/node/events.d.ts","../node_modules/@types/node/fs.d.ts","../node_modules/@types/node/fs/promises.d.ts","../node_modules/@types/node/http.d.ts","../node_modules/@types/node/http2.d.ts","../node_modules/@types/node/https.d.ts","../node_modules/@types/node/inspector.d.ts","../node_modules/@types/node/module.d.ts","../node_modules/@types/node/net.d.ts","../node_modules/@types/node/os.d.ts","../node_modules/@types/node/path.d.ts","../node_modules/@types/node/perf_hooks.d.ts","../node_modules/@types/node/process.d.ts","../node_modules/@types/node/punycode.d.ts","../node_modules/@types/node/querystring.d.ts","../node_modules/@types/node/readline.d.ts","../node_modules/@types/node/readline/promises.d.ts","../node_modules/@types/node/repl.d.ts","../node_modules/@types/node/sea.d.ts","../node_modules/@types/node/stream.d.ts","../node_modules/@types/node/stream/promises.d.ts","../node_modules/@types/node/stream/consumers.d.ts","../node_modules/@types/node/stream/web.d.ts","../node_modules/@types/node/string_decoder.d.ts","../node_modules/@types/node/test.d.ts","../node_modules/@types/node/timers.d.ts","../node_modules/@types/node/timers/promises.d.ts","../node_modules/@types/node/tls.d.ts","../node_modules/@types/node/trace_events.d.ts","../node_modules/@types/node/tty.d.ts","../node_modules/@types/node/url.d.ts","../node_modules/@types/node/util.d.ts","../node_modules/@types/node/v8.d.ts","../node_modules/@types/node/vm.d.ts","../node_modules/@types/node/wasi.d.ts","../node_modules/@types/node/worker_threads.d.ts","../node_modules/@types/node/zlib.d.ts","../node_modules/@types/node/globals.global.d.ts","../node_modules/@types/node/index.d.ts","../node_modules/zkcloudworker/lib/web/src/cloud/networks.d.ts","../node_modules/zkcloudworker/lib/web/src/cloud/worker/job.d.ts","../node_modules/zkcloudworker/lib/web/src/cloud/worker/transaction.d.ts","../node_modules/zkcloudworker/lib/web/src/cloud/worker/cloud.d.ts","../node_modules/zkcloudworker/lib/web/src/cloud/worker/task.d.ts","../node_modules/zkcloudworker/lib/web/src/cloud/worker/worker.d.ts","../node_modules/zkcloudworker/lib/web/src/cloud/worker/index.d.ts","../node_modules/zkcloudworker/lib/web/src/cloud/config.d.ts","../node_modules/zkcloudworker/lib/web/src/cloud/index.d.ts","../node_modules/zkcloudworker/lib/web/src/mina/api/api.d.ts","../node_modules/zkcloudworker/lib/web/src/mina/encryption/connections.d.ts","../node_modules/o1js/dist/node/bindings/crypto/non-negative.d.ts","../node_modules/o1js/dist/node/lib/provable/core/fieldvar.d.ts","../node_modules/o1js/dist/node/lib/provable/bool.d.ts","../node_modules/o1js/dist/node/lib/provable/field.d.ts","../node_modules/o1js/dist/node/lib/provable/types/provable-intf.d.ts","../node_modules/o1js/dist/node/bindings/mina-transaction/transaction-leaves-json.d.ts","../node_modules/o1js/dist/node/bindings/mina-transaction/gen/transaction-json.d.ts","../node_modules/o1js/dist/node/lib/util/types.d.ts","../node_modules/o1js/dist/node/lib/provable/gadgets/foreign-field.d.ts","../node_modules/o1js/dist/node/lib/provable/gadgets/native-curve.d.ts","../node_modules/o1js/dist/node/lib/provable/group.d.ts","../node_modules/o1js/dist/node/lib/provable/wrapped.d.ts","../node_modules/o1js/dist/node/bindings/lib/binable.d.ts","../node_modules/o1js/dist/node/bindings/lib/generic.d.ts","../node_modules/o1js/dist/node/bindings/lib/provable-generic.d.ts","../node_modules/o1js/dist/node/lib/provable/types/provable-derivers.d.ts","../node_modules/o1js/dist/node/lib/provable/scalar.d.ts","../node_modules/o1js/dist/node/lib/ml/base.d.ts","../node_modules/o1js/dist/node/lib/util/global-context.d.ts","../node_modules/o1js/dist/node/bindings/crypto/bindings/bigint256.d.ts","../node_modules/o1js/dist/node/bindings/crypto/bindings/field.d.ts","../node_modules/o1js/dist/node/bindings/crypto/bindings/vector.d.ts","../node_modules/o1js/dist/node/lib/provable/core/provable-context.d.ts","../node_modules/o1js/dist/node/lib/provable/types/witness.d.ts","../node_modules/o1js/dist/node/lib/provable/provable.d.ts","../node_modules/o1js/dist/node/lib/provable/types/struct.d.ts","../node_modules/reflect-metadata/index.d.ts","../node_modules/o1js/dist/node/lib/provable/types/circuit-value.d.ts","../node_modules/o1js/dist/node/lib/provable/crypto/signature.d.ts","../node_modules/o1js/dist/node/lib/ml/conversion.d.ts","../node_modules/o1js/dist/node/bindings/compiled/node_bindings/plonk_wasm.d.cts","../node_modules/o1js/dist/node/bindings/crypto/bindings/lookup.d.ts","../node_modules/o1js/dist/node/bindings/crypto/elliptic-curve.d.ts","../node_modules/o1js/dist/node/bindings/crypto/bindings/curve.d.ts","../node_modules/o1js/dist/node/bindings/crypto/bindings/kimchi-types.d.ts","../node_modules/o1js/dist/node/lib/proof-system/cache.d.ts","../node_modules/o1js/dist/node/lib/proof-system/zkprogram.d.ts","../node_modules/o1js/dist/node/lib/proof-system/prover-keys.d.ts","../node_modules/o1js/dist/node/lib/provable/gates.d.ts","../node_modules/o1js/dist/node/snarky.d.ts","../node_modules/o1js/dist/node/bindings/crypto/finite-field.d.ts","../node_modules/o1js/dist/node/lib/provable/foreign-field.d.ts","../node_modules/o1js/dist/node/lib/provable/gadgets/elliptic-curve.d.ts","../node_modules/o1js/dist/node/lib/provable/crypto/foreign-curve.d.ts","../node_modules/o1js/dist/node/bindings/mina-transaction/transaction-leaves.d.ts","../node_modules/o1js/dist/node/bindings/lib/from-layout.d.ts","../node_modules/o1js/dist/node/mina-signer/src/derivers-bigint.d.ts","../node_modules/o1js/dist/node/mina-signer/src/field-bigint.d.ts","../node_modules/o1js/dist/node/bindings/crypto/poseidon.d.ts","../node_modules/o1js/dist/node/bindings/crypto/constants.d.ts","../node_modules/o1js/dist/node/mina-signer/src/poseidon-bigint.d.ts","../node_modules/o1js/dist/node/mina-signer/src/curve-bigint.d.ts","../node_modules/o1js/dist/node/bindings/mina-transaction/transaction-leaves-bigint.d.ts","../node_modules/o1js/dist/node/bindings/mina-transaction/gen/transaction-bigint.d.ts","../node_modules/o1js/dist/node/bindings/mina-transaction/gen/transaction.d.ts","../node_modules/o1js/dist/node/bindings/mina-transaction/types.d.ts","../node_modules/o1js/dist/node/lib/provable/crypto/poseidon.d.ts","../node_modules/o1js/dist/node/lib/provable/int.d.ts","../node_modules/o1js/dist/node/lib/provable/bytes.d.ts","../node_modules/o1js/dist/node/lib/provable/wrapped-classes.d.ts","../node_modules/o1js/dist/node/lib/provable/crypto/foreign-ecdsa.d.ts","../node_modules/o1js/dist/node/lib/provable/crypto/keccak.d.ts","../node_modules/o1js/dist/node/lib/provable/crypto/hash.d.ts","../node_modules/o1js/dist/node/lib/provable/gadgets/common.d.ts","../node_modules/o1js/dist/node/lib/provable/types/unconstrained.d.ts","../node_modules/o1js/dist/node/lib/proof-system/circuit.d.ts","../node_modules/o1js/dist/node/lib/provable/packed.d.ts","../node_modules/o1js/dist/node/lib/provable/gadgets/arithmetic.d.ts","../node_modules/o1js/dist/node/lib/provable/gadgets/gadgets.d.ts","../node_modules/o1js/dist/node/lib/provable/merkle-list.d.ts","../node_modules/o1js/dist/node/lib/provable/option.d.ts","../node_modules/o1js/dist/node/lib/provable/merkle-tree-indexed.d.ts","../node_modules/o1js/dist/node/mina-signer/src/signature.d.ts","../node_modules/o1js/dist/node/mina-signer/src/types.d.ts","../node_modules/o1js/dist/node/lib/mina/smart-contract-base.d.ts","../node_modules/o1js/dist/node/lib/mina/precondition.d.ts","../node_modules/o1js/dist/node/lib/mina/zkapp.d.ts","../node_modules/o1js/dist/node/mina-signer/src/sign-zkapp-command.d.ts","../node_modules/o1js/dist/node/lib/mina/account-update.d.ts","../node_modules/o1js/dist/node/lib/mina/transaction-context.d.ts","../node_modules/o1js/dist/node/lib/mina/account.d.ts","../node_modules/o1js/dist/node/lib/mina/fetch.d.ts","../node_modules/o1js/dist/node/lib/mina/graphql.d.ts","../node_modules/o1js/dist/node/lib/mina/transaction.d.ts","../node_modules/o1js/dist/node/lib/mina/mina-instance.d.ts","../node_modules/o1js/dist/node/lib/mina/transaction-validation.d.ts","../node_modules/o1js/dist/node/lib/mina/local-blockchain.d.ts","../node_modules/o1js/dist/node/lib/mina/mina.d.ts","../node_modules/o1js/dist/node/lib/mina/actions/reducer.d.ts","../node_modules/o1js/dist/node/lib/mina/state.d.ts","../node_modules/o1js/dist/node/lib/mina/token/forest-iterator.d.ts","../node_modules/o1js/dist/node/lib/mina/token/token-contract.d.ts","../node_modules/o1js/dist/node/lib/provable/crypto/encryption.d.ts","../node_modules/o1js/dist/node/bindings/lib/encoding.d.ts","../node_modules/o1js/dist/node/lib/provable/string.d.ts","../node_modules/o1js/dist/node/lib/provable/merkle-tree.d.ts","../node_modules/o1js/dist/node/lib/provable/merkle-map.d.ts","../node_modules/o1js/dist/node/lib/provable/crypto/nullifier.d.ts","../node_modules/o1js/dist/node/bindings/crypto/elliptic-curve-examples.d.ts","../node_modules/o1js/dist/node/lib/provable/crypto/crypto.d.ts","../node_modules/o1js/dist/node/mina-signer/src/rosetta.d.ts","../node_modules/o1js/dist/node/mina-signer/mina-signer.d.ts","../node_modules/o1js/dist/node/lib/proof-system/workers.d.ts","../node_modules/o1js/dist/node/lib/mina/actions/offchain-state-serialization.d.ts","../node_modules/o1js/dist/node/lib/mina/actions/offchain-state-rollup.d.ts","../node_modules/o1js/dist/node/lib/mina/actions/offchain-state.d.ts","../node_modules/o1js/dist/node/index.d.ts","../node_modules/zkcloudworker/lib/web/src/mina/encryption/encryption.d.ts","../node_modules/zkcloudworker/lib/web/src/mina/encryption/client.d.ts","../node_modules/zkcloudworker/lib/web/src/mina/encryption/messages.d.ts","../node_modules/zkcloudworker/lib/web/src/mina/encryption/index.d.ts","../node_modules/zkcloudworker/lib/web/src/mina/utils/base64.d.ts","../node_modules/zkcloudworker/lib/web/src/mina/utils/fetch.d.ts","../node_modules/zkcloudworker/lib/web/src/mina/utils/fields.d.ts","../node_modules/zkcloudworker/lib/web/src/mina/utils/fee.d.ts","../node_modules/zkcloudworker/lib/web/src/mina/utils/mina.d.ts","../node_modules/zkcloudworker/lib/web/src/mina/utils/index.d.ts","../node_modules/zkcloudworker/lib/web/src/mina/local/local.d.ts","../node_modules/zkcloudworker/lib/web/src/mina/verification/verification.d.ts","../node_modules/zkcloudworker/lib/web/src/mina/verification/index.d.ts","../node_modules/zkcloudworker/lib/web/src/mina/index.d.ts","../node_modules/zkcloudworker/lib/web/src/index.d.ts","../src/contract.ts","../src/worker.ts","../package.json","../index.ts","../jest-config.ts","../tests/config.ts","../node_modules/@types/yargs-parser/index.d.ts","../node_modules/@types/yargs/index.d.ts","../node_modules/@types/istanbul-lib-coverage/index.d.ts","../node_modules/chalk/index.d.ts","../node_modules/@types/istanbul-lib-report/index.d.ts","../node_modules/@types/istanbul-reports/index.d.ts","../node_modules/@sinclair/typebox/typebox.d.ts","../node_modules/@jest/schemas/build/index.d.ts","../node_modules/@jest/types/build/index.d.ts","../node_modules/jest-mock/build/index.d.ts","../node_modules/@types/stack-utils/index.d.ts","../node_modules/jest-message-util/build/index.d.ts","../node_modules/@jest/fake-timers/build/index.d.ts","../node_modules/@jest/environment/build/index.d.ts","../node_modules/@jest/expect-utils/build/index.d.ts","../node_modules/pretty-format/build/index.d.ts","../node_modules/jest-diff/build/index.d.ts","../node_modules/jest-matcher-utils/build/index.d.ts","../node_modules/expect/build/index.d.ts","../node_modules/jest-snapshot/build/index.d.ts","../node_modules/@jest/expect/build/index.d.ts","../node_modules/@jest/globals/build/index.d.ts","../env.json","../tests/contract.test.ts","../node_modules/@babel/types/lib/index.d.ts","../node_modules/@types/babel__generator/index.d.ts","../node_modules/@babel/parser/typings/babel-parser.d.ts","../node_modules/@types/babel__template/index.d.ts","../node_modules/@types/babel__traverse/index.d.ts","../node_modules/@types/babel__core/index.d.ts","../node_modules/@types/graceful-fs/index.d.ts","../node_modules/@types/jest/index.d.ts"],"fileInfos":[{"version":"824cb491a40f7e8fdeb56f1df5edf91b23f3e3ee6b4cde84d4a99be32338faee","affectsGlobalScope":true},"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","9a68c0c07ae2fa71b44384a839b7b8d81662a236d4b9ac30916718f7510b1b2d","5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","feecb1be483ed332fad555aff858affd90a48ab19ba7272ee084704eb7167569",{"version":"87d693a4920d794a73384b3c779cadcb8548ac6945aa7a925832fe2418c9527a","affectsGlobalScope":true},{"version":"138fb588d26538783b78d1e3b2c2cc12d55840b97bf5e08bca7f7a174fbe2f17","affectsGlobalScope":true},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true},{"version":"4443e68b35f3332f753eacc66a04ac1d2053b8b035a0e0ac1d455392b5e243b3","affectsGlobalScope":true},{"version":"bc47685641087c015972a3f072480889f0d6c65515f12bd85222f49a98952ed7","affectsGlobalScope":true},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true},{"version":"93495ff27b8746f55d19fcbcdbaccc99fd95f19d057aed1bd2c0cafe1335fbf0","affectsGlobalScope":true},{"version":"6fc23bb8c3965964be8c597310a2878b53a0306edb71d4b5a4dfe760186bcc01","affectsGlobalScope":true},{"version":"ea011c76963fb15ef1cdd7ce6a6808b46322c527de2077b6cfdf23ae6f5f9ec7","affectsGlobalScope":true},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true},{"version":"bb42a7797d996412ecdc5b2787720de477103a0b2e53058569069a0e2bae6c7e","affectsGlobalScope":true},{"version":"4738f2420687fd85629c9efb470793bb753709c2379e5f85bc1815d875ceadcd","affectsGlobalScope":true},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true},{"version":"9fc46429fbe091ac5ad2608c657201eb68b6f1b8341bd6d670047d32ed0a88fa","affectsGlobalScope":true},{"version":"61c37c1de663cf4171e1192466e52c7a382afa58da01b1dc75058f032ddf0839","affectsGlobalScope":true},{"version":"b541a838a13f9234aba650a825393ffc2292dc0fc87681a5d81ef0c96d281e7a","affectsGlobalScope":true},{"version":"b20fe0eca9a4e405f1a5ae24a2b3290b37cf7f21eba6cbe4fc3fab979237d4f3","affectsGlobalScope":true},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true},{"version":"49ed889be54031e1044af0ad2c603d627b8bda8b50c1a68435fe85583901d072","affectsGlobalScope":true},{"version":"e93d098658ce4f0c8a0779e6cab91d0259efb88a318137f686ad76f8410ca270","affectsGlobalScope":true},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true},{"version":"bf14a426dbbf1022d11bd08d6b8e709a2e9d246f0c6c1032f3b2edb9a902adbe","affectsGlobalScope":true},{"version":"5e07ed3809d48205d5b985642a59f2eba47c402374a7cf8006b686f79efadcbd","affectsGlobalScope":true},{"version":"2b72d528b2e2fe3c57889ca7baef5e13a56c957b946906d03767c642f386bbc3","affectsGlobalScope":true},{"version":"8073890e29d2f46fdbc19b8d6d2eb9ea58db9a2052f8640af20baff9afbc8640","affectsGlobalScope":true},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true},{"version":"af3dd424cf267428f30ccfc376f47a2c0114546b55c44d8c0f1d57d841e28d74","affectsGlobalScope":true},{"version":"995c005ab91a498455ea8dfb63aa9f83fa2ea793c3d8aa344be4a1678d06d399","affectsGlobalScope":true},{"version":"51e547984877a62227042850456de71a5c45e7fe86b7c975c6e68896c86fa23b","affectsGlobalScope":true},{"version":"956d27abdea9652e8368ce029bb1e0b9174e9678a273529f426df4b3d90abd60","affectsGlobalScope":true},{"version":"13f6e6380c78e15e140243dc4be2fa546c287c6d61f4729bc2dd7cf449605471","affectsGlobalScope":true},{"version":"33358442698bb565130f52ba79bfd3d4d484ac85fe33f3cb1759c54d18201393","affectsGlobalScope":true},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true},"81722da336015ccd03dd0868fb492c748b40d6292217e1e3c4572f0a4e93c5bf","78d243bdc278e2efce4c7a39f70627286af3d99193f4f52ba22b77ad976be473","ea8446c6e28df31746c8609ec7fe7f26553b6b2faff808d25b739d5915b1a471","0094dee76ef8576557b17f4deae2dfe83e482227399d0731a8554e99de95e178","2db0dd3aaa2ed285950273ce96ae8a450b45423aa9da2d10e194570f1233fa6b","7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","5929864ce17fba74232584d90cb721a89b7ad277220627cc97054ba15a98ea8f","7180c03fd3cb6e22f911ce9ba0f8a7008b1a6ddbe88ccf16a9c8140ef9ac1686","25c8056edf4314820382a5fdb4bb7816999acdcb929c8f75e3f39473b87e85bc","54cb85a47d760da1c13c00add10d26b5118280d44d58e6908d8e89abbd9d7725","3e4825171442666d31c845aeb47fcd34b62e14041bb353ae2b874285d78482aa","c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","a967bfe3ad4e62243eb604bf956101e4c740f5921277c60debaf325c1320bf88","e9775e97ac4877aebf963a0289c81abe76d1ec9a2a7778dbe637e5151f25c5f3","471e1da5a78350bc55ef8cef24eb3aca6174143c281b8b214ca2beda51f5e04a","cadc8aced301244057c4e7e73fbcae534b0f5b12a37b150d80e5a45aa4bebcbd","385aab901643aa54e1c36f5ef3107913b10d1b5bb8cbcd933d4263b80a0d7f20","9670d44354bab9d9982eca21945686b5c24a3f893db73c0dae0fd74217a4c219","db3435f3525cd785bf21ec6769bf8da7e8a776be1a99e2e7efb5f244a2ef5fee","c3b170c45fc031db31f782e612adf7314b167e60439d304b49e704010e7bafe5","40383ebef22b943d503c6ce2cb2e060282936b952a01bea5f9f493d5fb487cc7","4893a895ea92c85345017a04ed427cbd6a1710453338df26881a6019432febdd","3a84b7cb891141824bd00ef8a50b6a44596aded4075da937f180c90e362fe5f6","13f6f39e12b1518c6650bbb220c8985999020fe0f21d818e28f512b7771d00f9","9b5369969f6e7175740bf51223112ff209f94ba43ecd3bb09eefff9fd675624a","4fe9e626e7164748e8769bbf74b538e09607f07ed17c2f20af8d680ee49fc1da","24515859bc0b836719105bb6cc3d68255042a9f02a6022b3187948b204946bd2","33203609eba548914dc83ddf6cadbc0bcb6e8ef89f6d648ca0908ae887f9fcc5","0db18c6e78ea846316c012478888f33c11ffadab9efd1cc8bcc12daded7a60b6","89167d696a849fce5ca508032aabfe901c0868f833a8625d5a9c6e861ef935d2","e53a3c2a9f624d90f24bf4588aacd223e7bec1b9d0d479b68d2f4a9e6011147f","339dc5265ee5ed92e536a93a04c4ebbc2128f45eeec6ed29f379e0085283542c","9f0a92164925aa37d4a5d9dd3e0134cff8177208dba55fd2310cd74beea40ee2","8bfdb79bf1a9d435ec48d9372dc93291161f152c0865b81fc0b2694aedb4578d","2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","d32275be3546f252e3ad33976caf8c5e842c09cb87d468cb40d5f4cf092d1acc","4a0c3504813a3289f7fb1115db13967c8e004aa8e4f8a9021b95285502221bd1",{"version":"e7be367719c613d580d4b27fdf8fe64c9736f48217f4b322c0d63b2971460918","affectsGlobalScope":true},"3d77c73be94570813f8cadd1f05ebc3dc5e2e4fdefe4d340ca20cd018724ee36",{"version":"392eadc2af403dd10b4debfbc655c089a7fa6a9750caeb770cfb30051e55e848","affectsGlobalScope":true},"62f1c00d3d246e0e3cf0224f91e122d560428ec1ccc36bb51d4574a84f1dbad0","53f0960fdcc53d097918adfd8861ffbe0db989c56ffc16c052197bf115da5ed6",{"version":"662163e5327f260b23ca0a1a1ad8a74078aabb587c904fcb5ef518986987eaff","affectsGlobalScope":true},"a40826e8476694e90da94aa008283a7de50d1dafd37beada623863f1901cb7fb",{"version":"c48c503c6b3f63baf18257e9a87559b5602a4e960107c762586d2a6a62b64a18","affectsGlobalScope":true},"b0c0d1d13be149f790a75b381b413490f98558649428bb916fd2d71a3f47a134","3c884d9d9ec454bdf0d5a0b8465bf8297d2caa4d853851d92cc417ac6f30b969","0364f8bb461d6e84252412d4e5590feda4eb582f77d47f7a024a7a9ff105dfdc","5433f7f77cd1fd53f45bd82445a4e437b2f6a72a32070e907530a4fea56c30c8","d0ca5d7df114035258a9d01165be309371fcccf0cccd9d57b1453204686d1ed0",{"version":"ee1ee365d88c4c6c0c0a5a5701d66ebc27ccd0bcfcfaa482c6e2e7fe7b98edf7","affectsGlobalScope":true},{"version":"1493cc4d72bfaabe2ac13e987d026a5fc99a816f6289bfca7192834a396205cf","affectsGlobalScope":true},"173b6275a81ebdb283b180654890f46516c21199734fed01a773b1c168b8c45c","304f66274aa8119e8d65a49b1cff84cbf803def6afe1b2cc987386e9a9890e22","1b9adafe8a7fefaeaf9099a0e06f602903f6268438147b843a33a5233ac71745","98273274f2dbb79b0b2009b20f74eca4a7146a3447c912d580cd5d2d94a7ae30","c933f7ba4b201c98b14275fd11a14abb950178afd2074703250fe3654fc10cd2","2eaa31492906bc8525aff3c3ec2236e22d90b0dfeee77089f196cd0adf0b3e3b",{"version":"ea455cc68871b049bcecd9f56d4cf27b852d6dafd5e3b54468ca87cc11604e4d","affectsGlobalScope":true},"8f5814f29dbaf8bacd1764aebdf1c8a6eb86381f6a188ddbac0fcbaab855ce52","a63d03de72adfb91777784015bd3b4125abd2f5ef867fc5a13920b5649e8f52b","d20e003f3d518a7c1f749dbe27c6ab5e3be7b3c905a48361b04a9557de4a6900",{"version":"1d4d78c8b23c9ddaaaa49485e6adc2ec01086dfe5d8d4d36ca4cdc98d2f7e74a","affectsGlobalScope":true},{"version":"44fc16356b81c0463cc7d7b2b35dcf324d8144136f5bc5ce73ced86f2b3475b5","affectsGlobalScope":true},"575fb200043b11b464db8e42cc64379c5fd322b6d787638e005b5ee98a64486d","6de2f225d942562733e231a695534b30039bdf1875b377bb7255881f0df8ede8","56249fd3ef1f6b90888e606f4ea648c43978ef43a7263aafad64f8d83cd3b8aa","139ad1dc93a503da85b7a0d5f615bddbae61ad796bc68fedd049150db67a1e26","7b166975fdbd3b37afb64707b98bca88e46577bbc6c59871f9383a7df2daacd1","9eece5e586312581ccd106d4853e861aaaa1a39f8e3ea672b8c3847eedd12f6e","81505c54d7cad0009352eaa21bd923ab7cdee7ec3405357a54d9a5da033a2084","269929a24b2816343a178008ac9ae9248304d92a8ba8e233055e0ed6dbe6ef71","93452d394fdd1dc551ec62f5042366f011a00d342d36d50793b3529bfc9bd633","3c1f19c7abcda6b3a4cf9438a15c7307a080bd3b51dfd56b198d9f86baf19447","2ee1645e0df9d84467cfe1d67b0ad3003c2f387de55874d565094464ee6f2927",{"version":"abe61b580e030f1ca3ee548c8fd7b40fc686a97a056d5d1481f34c39c637345f","affectsGlobalScope":true},{"version":"9cf780e96b687e4bdfd1907ed26a688c18b89797490a00598fa8b8ab683335dd","affectsGlobalScope":true},"98e00f3613402504bc2a2c9a621800ab48e0a463d1eed062208a4ae98ad8f84c","9ae88ce9f73446c24b2d2452e993b676da1b31fca5ceb7276e7f36279f693ed1","e49d7625faff2a7842e4e7b9b197f972633fca685afcf6b4403400c97d087c36","b82c38abc53922b1b3670c3af6f333c21b735722a8f156e7d357a2da7c53a0a0",{"version":"b423f53647708043299ded4daa68d95c967a2ac30aa1437adc4442129d7d0a6c","affectsGlobalScope":true},{"version":"7245af181218216bacb01fbdf51095617a51661f20d77178c69a377e16fb69ed","affectsGlobalScope":true},"4f0fc7b7f54422bd97cfaf558ddb4bca86893839367b746a8f86b60ac7619673","4cdd8b6b51599180a387cc7c1c50f49eca5ce06595d781638fd0216520d98246","d91a7d8b5655c42986f1bdfe2105c4408f472831c8f20cf11a8c3345b6b56c8c",{"version":"8704423bf338bff381ebc951ed819935d0252d90cd6de7dffe5b0a5debb65d07","affectsGlobalScope":true},"7c6929fd7cbf38499b6a600b91c3b603d1d78395046dc3499b2b92d01418b94b",{"version":"ab9b9a36e5284fd8d3bf2f7d5fcbc60052f25f27e4d20954782099282c60d23e","affectsGlobalScope":true},"a42be67ed1ddaec743582f41fc219db96a1b69719fccac6d1464321178d610fc","298fc464852d833b85d7ba830628552457fff10d8a83c57677bd8cc64b44866d","f8089555adf1f36edb3f7bafd7060b0ace098842f3cc5354dc62c75cd826578b","5f5d51b9587356c680331f7bf141fa8050e2330400aa3621c5e17ad51fc8b195","ea36a9fb0bc9a87c1e0751ae05c644f844dd061886bdc61323d19f84d95d572f","406170d6eacdd63713b2f061fcdfccd8fd424032db3a9b35b6c6fca7fe94323d","23b2de31422466ac27cebe5244696c8cebc2aed76f516f0b283596e51488b7ee","6e88d368297506d500bef0a247957f1da85510cdf5740662989e119cfd85faac","3b426ca49f4263b96473702d3b0e039eb755683ba0288a72a732b368e1ef3f4e","aba307df7c63b5a97f7c496e8db55a3c51a9281848aa3137147f19f56e7019f3","2d260866f1468ae706914ce6078917bbb72a64edba20ea140de3bbdbe6d563ec","262c43a08c3db86ede3f97dfaa43f65de2fa2c4f9a4938a8bba1b6e2a2a5de10","9a9d48f04dca9bb787522b012092ac36dd6ea22748f9f721d13dc4d84e42387d","f689b555fd226b172c13328f29fbdcabbb636b1746e75abfc9b620353819746f","dc957ce057181ebbf806448f8c4e8577987843e84e92b536096887d8e7505169","c0f652b8eea8975652ca6c19691ee534097a15553898521c84f9ea740f272ae9","830e5eaa2ee0c5b78cb15acfeec2753d6da27f5fa74b89b9ec88e2f7eff922c4","a72629c8ed67cd5d8ecb5fd60e1c64b07e11b246894aaf8a17e29a676f4be041","5240a5f0bf490d199ebf97f36a50e1e3b7844c3144dd90f45b93a7b0f3e404c2","ab557c40fb8521c229448329d2e17451921dab9559ec38ed8737e718bf305e2b","e819fa9a1d4c1d2d3788a895f9e6a6a7ddfe29d2d0164b9e16ec2bb386eef2bc","191c1b4e730675dd156b344c57c37d14b48aa3d5c969316b3a2e4a3af13e98ed","74d62a10e5ed7938e46793f3f9c40776d2fd667de084e65dc903c2da7941b175","204cc68eb2f61d8f1a76d88289d50621fb080d171fa73c993cebde8be683f3d5","8a0f60fc69219ca8e4e811e5f4dd0d4db28981dabff325389cd795764bf2d4ba","90b2f277502bdd447a0e2e0b71af206c13ecbabd6db9918bcf58d03be9f13421","444c4d349577d6d6aa5647bfd01ae101620ec1f0933d270dc5de21778406bf1c","a42f3fa88a87327ddbf976cd5093ea5e42e2ad1a6a09980b4fb96fb53f244acf","ce267ea5884bca498f7fad2b5ecfe0f6b09d764a5d869b9722063ba634ffae98","e84650b5d440d8b7c1d1249414e0e39291a0c3a306ca04ae2f5fd084b5669005","21ddd09adb35e88374ad316a30bdfb811326eaae550be488c52db212f29f500f","c132bf7e51370bc34639ce847f464ef709be92110bf5c6ff4825a2ca9dcb6b04","70fa1179eac0abc1067862fd6b274a3284e75c1b5ee6a2bb0c20cbf53b56e75d","51a41894321c9f22da9e9a59ac83e40acfb1c9976a69021ac4d7072619654e8c","5689ea3d0adbb2ba216ec54d151a8a55c0d4fc71367905d46487fbf1fd0e696e","bf17161ce72ac862080e6165fe12330f8220947d696c2cc38ce0e12672320758","04ccdd6359a26501937de4f750a91ebb2687ca47289022047cc2a1c5e5f3f2ac","c236befe9470326ecd9280bc542c15702fdeb0bdc791174855a3bd94fe28068e",{"version":"8d6d51a5118d000ed3bfe6e1dd1335bebfff3fef23cd2af2f84a24d30f90cc90","affectsGlobalScope":true},"e28279e587a0b5359eae2d3ffa5fddcfd3d026e42950e09f1a445e18a88d8520","7198c144555f4c3ef3876ebb957bf4aacbf5a4f74fece22589f2f45cc56bf743","e7b6a7f50f6210249095bd316442d174ebbab403f608748e01ad2e705cc6e8bc","c31f58d9f0897fc546a21154986675cd6c71f32930511b73b8193b51eb14d748","249a8fae114d1f1209a12ecc2a8d31ff7b7b822f8da0ff22093a8fd8cbf72018","7cc8fc6f9807181ac6773bfa99720e02543dd42c9fc4764a3492774902ded143","3119d821f41fb14c6dd351cbc023956fe996923e561ee31c9265577dbe8aefcf","714316f5c511bd8dbbe3fa52ea348244811166bef2158c1bc0394cd3d7d905fe","eb0938d65fb4fa32d2506e4064e00f0e5715f7b9c0e87c06ebed4602868bf823","f57039550d1cf71ec8130da0346f2ea1645cf41d6dc6ef9d5310a25a4a3c8ab8","8c9d88a4c651ef1c6c16bc0dc7ddb39ae25f69aeb968806765df0bd4899fcc0e","f71ae3fba6a8d89c4e2ede6e1f2055e993b835a52fdbc9436d060a34e55ade5e","3e5321dcfe744c9748bd2092ec73ba566a19f4694690434f4cd7529412bb05df","a3987faae6ca116a29967e87f7909a4aca1ca9c46aa78e5c4b5abc62cb253e9e","a3f0b51dd226bcc83aab289d3625ee5214fcb0b317722f9a7904039c8006fee8","5882a88178b51993c7354a2ac9a563f117728006eb9793cabad5e0f8b3f1f15b","fabf9112185e2adc4dd059999b6a19882852c8abc66c17b115e83a917af80770","7865b6229a4bb89d5da8900139a01b3570e84b966f84589648b79fcd997d2827","e4ac7476c958c0e2e03343a447239b55d3111c23fe410c424ba36dee8361f045","44cde016e9d8416da32ffa2bcb2d0788062e1f2b08920423b2844fd87c4bf17d","2260b86ac7f0f51b84bb9ce6e4e19186cb27deefadf1d535333c8189bb441a79","b722834af2a8bf739b3775e4b195e338e022a272920c589734c7ceea2b597f85","19f937341c4bf0cc8ef1a9add035727478a4697af1964ab24d3ddd87c3d32351","832e187002065695afa922e8e43fb9b4c20a54bc9c09361239e52e239bdb774d","ab0b6884679a45eeda23591d1fa49abfcd949e4bea2955331f06f4fe2bd522c6","d1dfb574b16822880c28cfb2fc5926bfbd0d566aab798b77d143e203a01a2cca","2ba7674b8bedd99b4d290cb738c2ed1bfa729a970b1c38e5e8986ba915a82ab0","dc6ddafce66147f3fe949e59ab7bbdd909e40dfbbec64bb88ef0f0af2e649348","5f2b91b05147c42aecb704e53b724b958de2adc503c17236199c9ba251c79d02","e902d090310b5aed646ba13c7a89320308ada69a703c9111457f7db5744e8d9e","f3fda18de1328c6d0c5a8f9db67f3d69c89286b230b19bd72567d680d747690e","75ad1bf960ae5062e21291ac75e326a2e693350c158de7a9b6611ef46c89c86a","a44554abb5d268058f91e5b834f4c71751959a6ec395ef56c94b8c69d8c4e244","8ae00073ccca98af600ef6eaaed98734abb5b6ed92c9ff1f49aa985e20c695ee","6d85671cb695f685fd40d7c605ceff16fd80c920c4391dcb7239699f866db19a","338a77519dd2aa2d0a6de3b15feea7e4ec01ec1fd231a553daec7d4f332b39f1","840059423f100f2e3687355daf6275625ed644f3c2051bd8652e71268c63a5c8","bd43c167d8d2494bd70c682f9245e464df22b8bfedac6f21f5f27d80ecbfb25c","004357369ef2304f6b200d85d6c1e284d086c865ff40a86abcb0c80008444a02","3da1856e62b8ce08d3c61f21c158f856810da8d1bd9a0fec18971c8cf911a152","0081e2fbb388deecb709c29c0a5d503297edfa6e64fc28d661d333d3caaef8b8","68b71c14157057e1b248e28f7408dc4ef354206c4da6a69402e6c048af4fb36d","b210ec0c3e213c224125d52ce383a0f622130f5a657e665b4bb230827448f31e","77e7cf60f57bbbabac775ca986d642a966d41a45f6dcde6176e846a2449a5be4","37d779a39e134a762d49451329f2d8a761c64b53a4287fb8fa2b8bb67fa2584e","288f89447c29e68b3a1850c0307ceff9d93d3943efc0a9a8a93019607607eb29","afa54fdb0227c19df096a3142920c8c02581017f3d3a3aece5cf77320ab7f789","7a14e610f62f5f1ab564b04311fdb80e32d3a2097e06d426d5dcb46328fd7b88","e8f564935faca22891d975d8e46217424ffc15bbe007a61488ca4b42f905b299","d81b1fc5c78cefa3bf7e4f5a54f4184bb89a32717b45da76d87363caf27cd88a","3b16135caa4bdd7dbeb6b476f0e227b4a2449501aaa6a7f66f5cb3c1ef88a40e","c80a25d34c20d5effc94f690903225b421ae8a2413ff49c8eca90ddfe310ca68","1127c4ace9371cc78b71e92f57310597739f1aaafb415f81d674df0ef253e8e1","455942d06fd42630bcf9d48f579048b2b3d9a79668a23bfd4ab58423857dfef0","35aee4acd707b159c795c9d7d0c6e085a0717d3e9edf1e95166cd14fd6208153","2c84b30f081cc4111fe1978836730987e4a4b1fbf06bf46f2348609247aea2ec","6625c4fff7c92e4203984462fbbaa2b81c614a2122f68ca074519bdb45cf85a3","98c36a41db4860e20715b54e2f39d0ffcdfdcff021559bf03adec23b5c39c656","57cdc4ed8569f62db5af43dfb88dc4d9d8a2795a6afaba39e237d6dcc750413a","b76bf4e1676ec8b6e6f97069a4f8f78bdd4a71e636667e334fc14836d4428a86","6f55dca45e78ef90f57d836e231b6333e92bc7450be6ac872877f9713046adf0","261aba75738663dbe499b271e471c684362638f890fe4de51f162a1b6bf6621f","f2f9b616251fc8f6499b9a650cdfcd3548f65a3f495a82254e6568769edaec44","cffff0c1ef1d1a82233cce9d9567a046e26917ef759e99c57e5f98881c9e7442","6adafabcd9a167589fdf2740f9aa28f9862d95f9ea3e52819557ebf07db6687c","f9461da3ae116642de3fdd207afb0853c1acd80b95c13fdce4e54e7b6ca251b3","04c69dd5905cc3eb015d4bff55f7425815e54296678a7d88f9001329e07b2346","2e14bda3173cf126cd67b176e13ffbe16cc59a2a3052b1324f6c83baed71a989","0c0db8600baad7249aa0a0cd93f789a9122ff672c65169e1cbe1496f24f4f473","f34af6e1fe050e5d0dd66a0f8d253a63628849e29545307685ea0bae2cdc7507","3e24c4e8c1d659188e3c637071509458416c8d63ec854de259cfce063961304c","67c965aff094b69e4d8ab243749697ed9cabffd8d5def86ff01de88d808ffdb7","615f21a9f5830bafcb29e4c25e31abd4a2a8ac20c750fc1d842e34dbd7381f3b","d8fa5a43e48c6633c04f634a1a97fabac4a85a08b513f7ba4573677328345c56","4e2f5c1b58ac658de016723e1877644803a50f282c2defcfccb55b1e307d5ad5","7ba86c896b6ffb46aa5802a457a760e752793bb7733b2029acbd1ff0b4719037","11cefca06ddb881683cd89f5805f70902675931e0de303a4909bbb3bd84e22b2","a0764ca85fe1b3463ab8bdd5e1a13a84adca4e15addc804e576fca6a176d0071","f3ff4e877d17df71dffbb19c744a38344628652fc25fefc0d336c9ba0aed66f2","efde4b396f0681c53fba851eb3a7a204a99e006a5c09a6b657be70ed765703a6","f952b72f489ec3e76010ac6c74027c3a86a8fed67118a716eacb77c8511b24ce","f019942b10f5072ca0f20227b85dbceeb6e2b2a04d542062ff51e0a07f16275a","96e6d9c19290bd7a795614bc3773de3140c045587deaf95e3fcb4b52f609f005","1d7f022474587716f5f2bae722bfe4db7d63949e977db088f73d8df9e3d1c30a","c2fae9cfc024fc680af21bac9ed691a515c37b1ef28bea1cfe3c8d44844302d6","b5c049530a84e5a15345514436849c7de5981a90821a7fee52d6d9938a02c403","70d1b4c17ecc28087fd639e6905d255f97eef894ade69cef52f763153a278af5","4094348a5d639a71e24c33a5e3a8bf1ebb559be3c79fd79b6c2b422b652877aa","429e7541ec76b7d7708570372463862f2df7733827a3f669b80fa74e4edc7ff8","c4354c1ea92ded40e359685d59dfe23ade9a4866f2f5fa1a7d5bc4baf44bc7a0","b879272bc09a301f50b2fe41753edc1f6db9df60ef9b6f139129adb2d349d961","e8a93e22beeb679306aa2c4d78d8fabe7b326d942124bd9c876894ba60fbd541","5de460345b220ebc24be0f147e360302606ffafefb3250831a1f1a56c19faba3","3bd2d413636faa566b78ccf6c7664f33d277ae4f4d931fea0f191f7af4cc8618","f523375919d7397fe0e46f05c009a3f8efbe259497db89b6aafede875111eda4",{"version":"c1b566d63359806958e7a9a233003d535909c1e8afcfbc7718452b70c4a0bf3b","signature":"c938d292aae9d980e84c9d6a3d70bdcc92d9fdfeaa63ccb548c3812007e55edb"},{"version":"c9abdd113319d29e2abb842ccc61088858e88c05bfb383d62dd568566e7d3e6a","signature":"aa57e31eb7b1e2645c9636015c4d5485bb965cb050a725e01f9fb3d60114e7ff"},{"version":"935783958b8e66185d616654c4a2cb8f8a44e0dc0c278f66dd63d50dc22caa7e","signature":"9387255562427e652033d3f0e7d70d810dca122918a62fb554235d1f4fbae5a7"},{"version":"e0b92e7d1ebe6d85e6187fc6c8599ad2ad0753d52747d96c35a82db5386bc9dd","signature":"795cf49b60f8445d62eb035f1f232313246f6e7eaef5106b31d7a0100c27d828"},{"version":"eed5e6c1545eae0573fd2d7174132d23746fae824141a39afa624a4bae8da064","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"7940ac7ff5a392997292209f1b0082b50fd15438cc96cbdb62c86b19ac61c23d","signature":"2c9c932dd3d2e8b3d156bdc77f341ad7c5b51d9933ec5f04f8416728e4c6a198"},"bae8d023ef6b23df7da26f51cea44321f95817c190342a36882e93b80d07a960","5d30d04a14ed8527ac5d654dc345a4db11b593334c11a65efb6e4facc5484a0e","035a5df183489c2e22f3cf59fc1ed2b043d27f357eecc0eb8d8e840059d44245","0d14fa22c41fdc7277e6f71473b20ebc07f40f00e38875142335d5b63cdfc9d2","a4809f4d92317535e6b22b01019437030077a76fec1d93b9881c9ed4738fcc54","5f53fa0bd22096d2a78533f94e02c899143b8f0f9891a46965294ee8b91a9434","c085e9aa62d1ae1375794c1fb927a445fa105fed891a7e24edbb1c3300f7384a","f315e1e65a1f80992f0509e84e4ae2df15ecd9ef73df975f7c98813b71e4c8da","e00243d23c495ca2170c9b9e20b5c92331239100b51efdc2b4401cdad859bbef","41ea7fd137518560e0d2af581edadadd236b685b5e2f80f083127a28e01cf0ac","ab82804a14454734010dcdcd43f564ff7b0389bee4c5692eec76ff5b30d4cf66","6fa5d56af71f07dc276aae3f6f30807a9cccf758517fb39742af72e963553d80","819dddfec57391f8458929ca8e4377f030d42107ff6ec431e620b70b0695d530","701bdef1f4a13932f64c4ce89537f2c66301eb46daf30a16a436c991df568686","cdcc132f207d097d7d3aa75615ab9a2e71d6a478162dde8b67f88ea19f3e54de","5b9586e9b0b6322e5bfbd2c29bd3b8e21ab9d871f82346cb71020e3d84bae73e","3e70a7e67c2cb16f8cd49097360c0309fe9d1e3210ff9222e9dac1f8df9d4fb6","ab68d2a3e3e8767c3fba8f80de099a1cfc18c0de79e42cb02ae66e22dfe14a66","d96cc6598148bf1a98fb2e8dcf01c63a4b3558bdaec6ef35e087fd0562eb40ec","ac5f598a09eed39b957ae3d909b88126f3faf605bd4589c19e9ae85d23ef71e3","92abba98a71c0244a6bcdd3ad4d2e04f1d0a8bcae57d2bb865bf53d1ac86e3d0","d2afa0d86bc6f2e72c1cf2ecb2372bf1b0f002493706a81f2b9a3ee4f944e219",{"version":"eb8e292db371ebd554d9dd3713f1f7bb11917f56b7f3803e3a95afa217b27b15","signature":"680ad35512c215e291e4bf59d0499087a06f91f677d2abce40b3403e5cfc011f"},{"version":"1a053ff603a0308b3bcb585f105f6e7cce7de4584ea56fb9aaee38bcdd3e8c6a","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"55584873eae27c5607725f0a9b2123cdea9100fd47cd4bfd582b567a7c363877","2c8e55457aaf4902941dfdba4061935922e8ee6e120539c9801cd7b400fae050","8041cfce439ff29d339742389de04c136e3029d6b1817f07b2d7fcbfb7534990","670a76db379b27c8ff42f1ba927828a22862e2ab0b0908e38b671f0e912cc5ed","9d38964b57191567a14b396422c87488cecd48f405c642daa734159875ee81d9","069bebfee29864e3955378107e243508b163e77ab10de6a5ee03ae06939f0bb9","afe73051ff6a03a9565cbd8ebb0e956ee3df5e913ad5c1ded64218aabfa3dcb5",{"version":"5ab630d466ac55baa6d32820378098404fc18ba9da6f7bc5df30c5dbb1cffae8","affectsGlobalScope":true}],"root":[[276,281],304,305],"options":{"composite":true,"emitDecoratorMetadata":true,"esModuleInterop":true,"experimentalDecorators":true,"module":1,"outDir":"./","skipLibCheck":true,"strict":true,"strictPropertyInitialization":false,"target":8},"fileIdsList":[[260,275,276,277,278],[95],[306],[137,142,290,291,294],[300,301],[290,291,293],[290,291,295,302],[288],[142,283,284,285,287,289],[306,307,308,309,310],[306,308],[105,142],[284],[286],[297,300],[56],[91],[92,97,126],[93,98,104,105,112,123,134],[93,94,104,112],[95,135],[96,97,105,113],[97,123,131],[98,100,104,112],[91,99],[100,101],[104],[102,104],[91,104],[104,105,106,123,134],[104,105,106,119,123,126],[89,92,139],[100,104,107,112,123,134],[104,105,107,108,112,123,131,134],[107,109,123,131,134],[56,57,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141],[104,110],[111,134,139],[100,104,112,123],[113],[114],[91,115],[112,113,116,133,139],[117],[118],[104,119,120],[119,121,135,137],[92,104,123,124,125,126],[92,123,125],[123,124],[126],[127],[91,123],[104,129,130],[129,130],[97,112,123,131],[132],[112,133],[92,107,118,134],[97,135],[123,136],[111,137],[138],[92,97,104,106,115,123,134,137,139],[123,140],[282],[296,299],[297],[285,298],[290,292],[290,297,300],[171],[171,174,186],[171,173],[171,174,184,185,187],[171,174],[186],[154,167],[157,165],[167],[166],[160,167,199,206],[159],[157,160,167,198,199,207],[154,159,167,200,201,205],[156,157,159,165,167,182,211],[207,208],[158,165,169,178,179,182,189,190,193,195,197,209,210,211,213,214,215,216,217,218,219,220,222,223,224,225,230,232,234,235,236,237,241,242,243,244,245,246,247,248,249,250,251,253,255,256,259],[156,157,158,165,168,178,179,182,190,193,198,207,209,210,211,218,220,223,229,230,231],[157,165,167,182,207,209,236],[156,157,158,169,178,179,189,190,193,210,218,223,224,225,257],[156,157,158,165,178,182,210,218,223,224,225],[168,179,190,224,230,243,257,258],[165,178,179,223,230],[157,165,182,209,211,234,236,241],[209,211,232,235],[157,161,165,182,211,227,234,237,238],[157,165,182,211,227,229,234,235,236,237],[182,227,233,237,238,239,240],[165,182,209,211,232],[230],[158,165,179,230],[156,157,158,165,178,220,223,232],[157,165,182,211,230,232],[172,182,232],[227,229,232,234],[165,182,190,209,232,233,234,236,238],[155,156,157,158,165,178,179,180,182,189,190,193,211,228,229,232],[155,165,170,171,179,182,193],[158,180,193],[171,184,188,189,190],[155,156,157,158,165,168,178,179,189,190,193],[154,155,157],[157,179,211],[172,175,193],[186,252],[157,164,165,182],[162,179,186,195,196],[156,162,179,186,195,197,213],[157,164,169,212,213],[212],[156,157,158,164,165,182,227,250],[157,164,165,178,179],[156,165,179,181],[154,155,156],[156,157,161,162,179,194],[155,156,157,161],[156,157,162,167,186],[156,157,161],[156,157,161,162,165,212,221],[156,157,162],[155,157,161],[155,156,157,170],[155,156,157,158,165,179,181,206,209,210],[156,157,165,210,218],[157,165,181,249],[155,156,157,158,165,168,178,218,224],[157,165,181],[165,168,178,179],[157,179,210,218],[156,157,158,169,172,176,177,179],[156,157,163,169],[156,157,158,165],[156,165,169,179,180],[157,158,161,165,167,168],[157],[158,165,168,169,178],[157,178],[157,158,161,168,179],[155,156,157,164,170],[160,227,254],[154,186,201,204],[166,167,168],[154,166,200],[167,201,202,203],[166,201,205,226,227],[207,227],[154,201,204,205,227],[160,226],[155,156,157,160,170,171,175,176,183,184,191,192],[289],[66,70,134],[66,123,134],[61],[63,66,131,134],[112,131],[142],[61,142],[63,66,112,134],[58,59,62,65,92,104,123,134],[58,64],[62,66,92,126,134,142],[92,142],[82,92,142],[60,61,142],[66],[60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88],[66,73,74],[64,66,74,75],[65],[58,61,66],[66,70,74,75],[70],[64,66,69,134],[58,63,64,66,70,73],[92,123],[61,66,82,92,139,142],[55,143,149,150],[52,53,54],[142,143,144,145],[144,145,146,147,148],[143],[146],[151,274],[143,149],[260],[153,261,262,263],[152,264,270,271,273],[142,151,152],[208,260],[265,266,267,268,269],[151,260],[272],[143,260],[260,275,276],[260,275,276,278,279,281,303,304],[275],[156,157,158,179,193,260],[260,275]],"referencedMap":[[279,1],[280,2],[308,3],[295,4],[302,5],[294,6],[303,7],[289,8],[290,9],[311,10],[307,3],[309,11],[310,3],[312,12],[286,13],[287,14],[313,15],[56,16],[57,16],[91,17],[92,18],[93,19],[94,20],[95,21],[96,22],[97,23],[98,24],[99,25],[100,26],[101,26],[103,27],[102,28],[104,29],[105,30],[106,31],[90,32],[107,33],[108,34],[109,35],[142,36],[110,37],[111,38],[112,39],[113,40],[114,41],[115,42],[116,43],[117,44],[118,45],[119,46],[120,46],[121,47],[123,48],[125,49],[124,50],[126,51],[127,52],[128,53],[129,54],[130,55],[131,56],[132,57],[133,58],[134,59],[135,60],[136,61],[137,62],[138,63],[139,64],[140,65],[283,66],[300,67],[298,68],[299,69],[293,70],[301,71],[173,72],[187,73],[174,74],[188,75],[185,72],[175,76],[252,77],[166,78],[247,79],[199,80],[167,81],[168,80],[207,82],[160,83],[208,84],[206,85],[198,86],[209,87],[260,88],[232,89],[234,90],[258,91],[257,92],[259,93],[242,94],[235,95],[236,96],[240,97],[238,98],[241,99],[229,100],[228,101],[243,102],[244,103],[245,104],[233,105],[239,106],[237,107],[230,108],[183,109],[219,110],[191,111],[190,112],[156,113],[212,114],[176,115],[253,116],[246,117],[197,118],[214,119],[216,120],[215,121],[251,122],[210,123],[182,124],[157,125],[195,126],[221,79],[217,127],[196,128],[162,129],[222,130],[163,131],[192,132],[164,133],[211,134],[223,135],[250,136],[225,137],[249,138],[224,139],[220,140],[178,141],[170,142],[248,143],[181,144],[169,145],[158,146],[179,147],[218,148],[177,149],[213,121],[165,150],[255,151],[205,152],[200,153],[201,154],[204,155],[254,156],[231,157],[226,158],[227,159],[193,160],[297,161],[73,162],[80,163],[72,162],[87,164],[64,165],[63,166],[86,167],[81,168],[84,169],[66,170],[65,171],[61,172],[60,173],[83,174],[62,175],[67,176],[71,176],[89,177],[88,176],[75,178],[76,179],[78,180],[74,181],[77,182],[82,167],[69,183],[70,184],[79,185],[59,186],[85,187],[151,188],[55,189],[146,190],[149,191],[144,192],[147,192],[148,193],[275,194],[152,195],[261,196],[264,197],[274,198],[271,199],[265,196],[268,196],[266,200],[267,196],[270,201],[269,202],[273,203],[272,204],[276,196],[277,205],[281,196],[305,206]],"exportedModulesMap":[[279,207],[308,3],[295,4],[302,5],[294,6],[303,7],[289,8],[290,9],[311,10],[307,3],[309,11],[310,3],[312,12],[286,13],[287,14],[313,15],[56,16],[57,16],[91,17],[92,18],[93,19],[94,20],[95,21],[96,22],[97,23],[98,24],[99,25],[100,26],[101,26],[103,27],[102,28],[104,29],[105,30],[106,31],[90,32],[107,33],[108,34],[109,35],[142,36],[110,37],[111,38],[112,39],[113,40],[114,41],[115,42],[116,43],[117,44],[118,45],[119,46],[120,46],[121,47],[123,48],[125,49],[124,50],[126,51],[127,52],[128,53],[129,54],[130,55],[131,56],[132,57],[133,58],[134,59],[135,60],[136,61],[137,62],[138,63],[139,64],[140,65],[283,66],[300,67],[298,68],[299,69],[293,70],[301,71],[173,72],[187,73],[174,74],[188,75],[185,72],[175,76],[252,77],[166,78],[247,79],[199,80],[167,81],[168,80],[207,82],[160,83],[208,84],[206,85],[198,86],[209,87],[260,88],[232,89],[234,90],[258,91],[257,92],[259,93],[242,94],[235,95],[236,96],[240,97],[238,98],[241,99],[229,100],[228,101],[243,102],[244,103],[245,104],[233,105],[239,106],[237,107],[230,108],[183,109],[219,110],[191,111],[190,112],[156,113],[212,114],[176,115],[253,116],[246,117],[197,118],[214,119],[216,120],[215,121],[251,122],[210,123],[182,124],[157,125],[195,126],[221,79],[217,127],[196,128],[162,129],[222,130],[163,131],[192,132],[164,133],[211,134],[223,135],[250,136],[225,137],[249,138],[224,139],[220,140],[178,141],[170,142],[248,143],[181,144],[169,145],[158,146],[179,147],[218,148],[177,149],[213,121],[165,150],[255,151],[205,152],[200,153],[201,154],[204,155],[254,156],[231,157],[226,158],[227,159],[193,160],[297,161],[73,162],[80,163],[72,162],[87,164],[64,165],[63,166],[86,167],[81,168],[84,169],[66,170],[65,171],[61,172],[60,173],[83,174],[62,175],[67,176],[71,176],[89,177],[88,176],[75,178],[76,179],[78,180],[74,181],[77,182],[82,167],[69,183],[70,184],[79,185],[59,186],[85,187],[151,188],[55,189],[146,190],[149,191],[144,192],[147,192],[148,193],[275,194],[152,195],[261,196],[264,197],[274,198],[271,199],[265,196],[268,196],[266,200],[267,196],[270,201],[269,202],[273,203],[272,204],[276,208],[277,209],[281,196]],"semanticDiagnosticsPerFile":[50,51,9,11,10,2,12,13,14,15,16,17,18,19,3,20,4,21,25,22,23,24,26,27,28,5,29,30,31,32,6,36,33,34,35,37,7,38,43,44,39,40,41,42,8,48,45,46,47,1,49,304,279,280,308,306,295,296,302,294,303,289,290,288,311,307,309,310,312,284,286,287,313,56,57,91,92,93,94,95,96,97,98,99,100,101,103,102,104,105,106,90,141,107,108,109,142,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,292,282,283,285,300,298,299,293,291,301,184,173,187,174,188,185,175,203,252,186,194,154,202,166,247,199,167,168,207,160,208,206,159,198,209,260,232,234,258,257,259,242,235,236,240,238,241,229,228,243,244,245,233,239,237,230,171,183,189,219,191,256,190,156,212,155,176,253,246,197,214,216,215,251,210,182,157,195,221,217,196,162,222,163,192,164,211,223,250,225,249,224,220,178,170,248,181,169,158,179,218,177,213,165,172,161,255,205,200,201,204,254,231,226,227,193,297,180,73,80,72,87,64,63,86,81,84,66,65,61,60,83,62,67,68,71,58,89,88,75,76,78,74,77,82,69,70,79,59,85,150,151,143,54,52,55,53,146,149,144,147,145,148,275,152,262,153,261,264,263,274,271,265,268,266,267,270,269,273,272,278,276,277,281,305],"latestChangedDtsFile":"./tests/config.d.ts"},"version":"5.4.5"}
```

Contents of dist/jest-config.d.ts:
```
export {};

```

Contents of dist/index.js:
```
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.verify = exports.zkcloudworker = void 0;
const zkcloudworker_1 = require("zkcloudworker");
const o1js_1 = require("o1js");
const worker_1 = require("./src/worker");
const package_json_1 = __importDefault(require("./package.json"));
const contract_1 = require("./src/contract");
async function zkcloudworker(cloud) {
    console.log(`starting worker example version ${package_json_1.default.version ?? "unknown"} on chain ${cloud.chain}`);
    await (0, o1js_1.initializeBindings)();
    await (0, zkcloudworker_1.initBlockchain)(cloud.chain);
    return new worker_1.AddWorker(cloud);
}
exports.zkcloudworker = zkcloudworker;
async function verify(chain) {
    if (chain !== "devnet")
        throw new Error("Unsupported chain");
    return {
        contract: contract_1.AddContract,
        programDependencies: [contract_1.AddProgram],
        contractDependencies: [],
        address: "B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD",
        chain: "devnet",
    };
}
exports.verify = verify;

```

Contents of dist/package.json:
```
{
    "name": "worker-example",
    "version": "0.6.0",
    "author": "DFST",
    "scripts": {
        "test": "jest",
        "local": "jest --chain=local --cloud=local --deploy=true --send=false --one=true --many=true",
        "lightnet.deploy": "jest --chain=lightnet --cloud=local --deploy=true --one=false --many=false",
        "lightnet.run": "jest --chain=lightnet --cloud=local --deploy=false --one=true --many=true",
        "zeko.deploy": "jest --chain=zeko --deploy=true --cloud=local --one=false --many=false",
        "zeko.run": "jest --chain=zeko --deploy=false --one=true --many=true -send=false",
        "devnet.deploy": "jest --chain=devnet --cloud=local --deploy=true --one=false --many=false",
        "devnet.run": "jest --chain=devnet --deploy=false --one=true --many=true --send=false",
        "devnet.test": "jest --chain=devnet --deploy=false --one=true --many=false --send=false",
        "files.local": "jest --chain=local --cloud=local --deploy=false --one=false --many=false --send=false --files=true",
        "files.devnet": "jest --chain=devnet --deploy=false --one=false --many=false --send=false --files=true"
    },
    "devDependencies": {
        "@jest/globals": "^29.7.0",
        "@types/jest": "^29.5.12",
        "@types/node": "^20.14.7",
        "jest": "^29.7.0",
        "ts-jest": "^29.1.5",
        "typescript": "^5.5.2"
    },
    "packageManager": "yarn@4.2.1",
    "dependencies": {
        "o1js": "^1.3.1",
        "zkcloudworker": "^0.11.7"
    },
    "jest": {
        "preset": "ts-jest",
        "testEnvironment": "node",
        "slowTestThreshold": 1500,
        "testTimeout": 10800000,
        "bail": true,
        "verbose": true,
        "roots": [
            "tests"
        ],
        "setupFilesAfterEnv": [
            "./jest-config.ts"
        ]
    }
}

```

Contents of dist/index.d.ts:
```
import { Cloud, zkCloudWorker, VerificationData, blockchain } from "zkcloudworker";
export declare function zkcloudworker(cloud: Cloud): Promise<zkCloudWorker>;
export declare function verify(chain: blockchain): Promise<VerificationData>;

```

Contents of dist/jest-config.js:
```
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const console_1 = __importDefault(require("console"));
global.console = console_1.default;
const logCopy = console_1.default.log.bind(console_1.default);
console_1.default.log = function () {
    // Timestamp to prepend
    const timestamp = "[" + new Date().toLocaleTimeString() + "] ";
    if (arguments.length) {
        // True array copy so we can call .splice()
        const args = Array.prototype.slice.call(arguments, 0);
        // If there is a format string then... it must
        // be a string
        if (typeof arguments[0] === "string") {
            // Prepend timestamp to the (possibly format) string
            args[0] = "%s" + arguments[0];
            // Insert the timestamp where it has to be
            args.splice(1, 0, timestamp);
            // Log the whole array
            logCopy.apply(this, args);
        }
        else {
            // "Normal" log
            logCopy(timestamp, args);
        }
    }
};

```

Contents of dist/tests/contract.test.js:
```
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const globals_1 = require("@jest/globals");
const o1js_1 = require("o1js");
const zkcloudworker_1 = require("zkcloudworker");
const __1 = require("..");
const contract_1 = require("../src/contract");
const config_1 = require("./config");
const package_json_1 = __importDefault(require("../package.json"));
const env_json_1 = require("../env.json");
const ONE_ELEMENTS_NUMBER = 1;
const MANY_ELEMENTS_NUMBER = 1;
const MANY_BATCH_SIZE = 3;
(0, o1js_1.setNumberOfWorkers)(8);
const { name: repo, author: developer } = package_json_1.default;
const { chain, compile, deploy, one, many, send, files, useLocalCloudWorker } = processArguments();
const api = new zkcloudworker_1.zkCloudWorkerClient({
    jwt: useLocalCloudWorker ? "local" : env_json_1.JWT,
    zkcloudworker: __1.zkcloudworker,
    chain,
});
let deployer;
let sender;
const oneValues = [];
const manyValues = [];
const contractPrivateKey = config_1.contract.contractPrivateKey;
const contractPublicKey = contractPrivateKey.toPublicKey();
const zkApp = new contract_1.AddContract(contractPublicKey);
let programVerificationKey;
let contractVerificationKey;
let blockchainInitialized = false;
(0, globals_1.describe)("Add Worker", () => {
    (0, globals_1.it)(`should prepare data`, async () => {
        console.log("Preparing data...");
        console.time(`prepared data`);
        for (let i = 0; i < ONE_ELEMENTS_NUMBER; i++) {
            oneValues.push(1 + Math.floor(Math.random() * (contract_1.limit - 2)));
        }
        for (let i = 0; i < MANY_ELEMENTS_NUMBER; i++) {
            const values = [];
            for (let j = 0; j < MANY_BATCH_SIZE; j++) {
                values.push(1 + Math.floor(Math.random() * (contract_1.limit - 2)));
            }
            manyValues.push(values);
        }
        console.timeEnd(`prepared data`);
    });
    (0, globals_1.it)(`should initialize blockchain`, async () => {
        (0, globals_1.expect)(contractPrivateKey).toBeDefined();
        (0, globals_1.expect)(contractPrivateKey.toPublicKey().toBase58()).toBe(contractPublicKey.toBase58());
        zkcloudworker_1.Memory.info("initializing blockchain");
        if (chain === "local" || chain === "lightnet") {
            console.log("local chain:", chain);
            const { keys } = await (0, zkcloudworker_1.initBlockchain)(chain, 2);
            (0, globals_1.expect)(keys.length).toBeGreaterThanOrEqual(2);
            if (keys.length < 2)
                throw new Error("Invalid keys");
            deployer = keys[0].key;
        }
        else {
            console.log("non-local chain:", chain);
            await (0, zkcloudworker_1.initBlockchain)(chain);
            deployer = o1js_1.PrivateKey.fromBase58(config_1.DEPLOYER);
        }
        process.env.DEPLOYER_PRIVATE_KEY = deployer.toBase58();
        process.env.DEPLOYER_PUBLIC_KEY = deployer.toPublicKey().toBase58();
        console.log("contract address:", contractPublicKey.toBase58());
        sender = deployer.toPublicKey();
        console.log("sender:", sender.toBase58());
        console.log("Sender balance:", await (0, zkcloudworker_1.accountBalanceMina)(sender));
        (0, globals_1.expect)(deployer).toBeDefined();
        (0, globals_1.expect)(sender).toBeDefined();
        (0, globals_1.expect)(deployer.toPublicKey().toBase58()).toBe(sender.toBase58());
        zkcloudworker_1.Memory.info("blockchain initialized");
        blockchainInitialized = true;
    });
    if (compile) {
        (0, globals_1.it)(`should compile contract`, async () => {
            (0, globals_1.expect)(blockchainInitialized).toBe(true);
            console.log("Analyzing contracts methods...");
            console.time("methods analyzed");
            const methods = [
                {
                    name: "AddProgram",
                    result: await contract_1.AddProgram.analyzeMethods(),
                    skip: true,
                },
                { name: "AddContract", result: await contract_1.AddContract.analyzeMethods() },
            ];
            console.timeEnd("methods analyzed");
            const maxRows = 2 ** 16;
            for (const contract of methods) {
                // calculate the size of the contract - the sum or rows for each method
                const size = Object.values(contract.result).reduce((acc, method) => acc + method.rows, 0);
                // calculate percentage rounded to 0 decimal places
                const percentage = Math.round(((size * 100) / maxRows) * 100) / 100;
                console.log(`method's total size for a ${contract.name} is ${size} rows (${percentage}% of max ${maxRows} rows)`);
                if (contract.skip !== true)
                    for (const method in contract.result) {
                        console.log(method, `rows:`, contract.result[method].rows);
                    }
            }
            console.time("compiled");
            console.log("Compiling contracts...");
            const cache = o1js_1.Cache.FileSystem("./cache");
            console.time("AddProgram compiled");
            programVerificationKey = (await contract_1.AddProgram.compile({ cache }))
                .verificationKey;
            console.timeEnd("AddProgram compiled");
            console.time("AddContract compiled");
            contractVerificationKey = (await contract_1.AddContract.compile({ cache }))
                .verificationKey;
            console.timeEnd("AddContract compiled");
            console.timeEnd("compiled");
            console.log("AddContract verification key", contractVerificationKey.hash.toJSON());
            console.log("AddProgram verification key", programVerificationKey.hash.toJSON());
            zkcloudworker_1.Memory.info("compiled");
        });
    }
    if (deploy) {
        (0, globals_1.it)(`should deploy contract`, async () => {
            (0, globals_1.expect)(blockchainInitialized).toBe(true);
            console.log(`Deploying contract...`);
            await (0, zkcloudworker_1.fetchMinaAccount)({ publicKey: sender, force: true });
            const tx = await o1js_1.Mina.transaction({ sender, fee: await (0, zkcloudworker_1.fee)(), memo: "deploy" }, async () => {
                o1js_1.AccountUpdate.fundNewAccount(sender);
                await zkApp.deploy({});
                zkApp.account.zkappUri.set("https://zkcloudworker.com");
            });
            tx.sign([deployer, contractPrivateKey]);
            await sendTx(tx, "deploy");
            zkcloudworker_1.Memory.info("deployed");
        });
    }
    if (send) {
        (0, globals_1.it)(`should send first one tx`, async () => {
            (0, globals_1.expect)(blockchainInitialized).toBe(true);
            console.log(`Sending first one tx...`);
            await (0, zkcloudworker_1.fetchMinaAccount)({ publicKey: sender, force: true });
            await (0, zkcloudworker_1.fetchMinaAccount)({ publicKey: contractPublicKey, force: true });
            const addValue = new contract_1.AddValue({
                value: o1js_1.UInt64.from(100),
                limit: o1js_1.UInt64.from(contract_1.limit),
            });
            const privateKey = o1js_1.PrivateKey.random();
            const address = privateKey.toPublicKey();
            const tx = await o1js_1.Mina.transaction({ sender, fee: await (0, zkcloudworker_1.fee)(), memo: "one tx" }, async () => {
                o1js_1.AccountUpdate.fundNewAccount(sender);
                await zkApp.addOne(address, addValue);
            });
            await tx.prove();
            tx.sign([deployer, privateKey]);
            await sendTx(tx, "first one tx");
            zkcloudworker_1.Memory.info("first one tx sent");
            await (0, zkcloudworker_1.sleep)(10000);
        });
    }
    if (one) {
        (0, globals_1.it)(`should send one transactions`, async () => {
            (0, globals_1.expect)(blockchainInitialized).toBe(true);
            console.time(`One txs sent`);
            for (let i = 0; i < ONE_ELEMENTS_NUMBER; i++) {
                console.log(`Sending one tx ${i + 1}/${ONE_ELEMENTS_NUMBER}...`);
                const answer = await api.execute({
                    developer,
                    repo,
                    transactions: [],
                    task: "one",
                    args: JSON.stringify({
                        contractAddress: contractPublicKey.toBase58(),
                        isMany: false,
                        addValue: (0, zkcloudworker_1.serializeFields)(contract_1.AddValue.toFields(new contract_1.AddValue({
                            value: o1js_1.UInt64.from(oneValues[i]),
                            limit: o1js_1.UInt64.from(contract_1.limit),
                        }))),
                    }),
                    metadata: `one`,
                });
                console.log("answer:", answer);
                (0, globals_1.expect)(answer).toBeDefined();
                (0, globals_1.expect)(answer.success).toBe(true);
                const jobId = answer.jobId;
                (0, globals_1.expect)(jobId).toBeDefined();
                if (jobId === undefined)
                    throw new Error("Job ID is undefined");
                const oneResult = await api.waitForJobResult({
                    jobId,
                    printLogs: true,
                });
                console.log("One result:", oneResult.result.result);
            }
            console.timeEnd(`One txs sent`);
            zkcloudworker_1.Memory.info(`One txs sent`);
        });
    }
    if (many) {
        (0, globals_1.it)(`should send transactions with recursive proofs`, async () => {
            (0, globals_1.expect)(blockchainInitialized).toBe(true);
            console.time(`Many txs sent`);
            for (let i = 0; i < MANY_ELEMENTS_NUMBER; i++) {
                console.log(`Sending many tx ${i + 1}/${MANY_ELEMENTS_NUMBER}...`);
                const transactions = [];
                for (let j = 0; j < MANY_BATCH_SIZE; j++) {
                    transactions.push(JSON.stringify({
                        addValue: (0, zkcloudworker_1.serializeFields)(contract_1.AddValue.toFields(new contract_1.AddValue({
                            value: o1js_1.UInt64.from(manyValues[i][j]),
                            limit: o1js_1.UInt64.from(contract_1.limit),
                        }))),
                    }));
                }
                const proofAnswer = await api.recursiveProof({
                    developer,
                    repo,
                    transactions,
                    task: "proof",
                    args: JSON.stringify({
                        contractAddress: contractPublicKey.toBase58(),
                    }),
                    metadata: `proof`,
                });
                console.log("proof answer:", proofAnswer);
                (0, globals_1.expect)(proofAnswer).toBeDefined();
                (0, globals_1.expect)(proofAnswer.success).toBe(true);
                let jobId = proofAnswer.jobId;
                (0, globals_1.expect)(jobId).toBeDefined();
                if (jobId === undefined)
                    throw new Error("Job ID is undefined");
                const proofResult = await api.waitForJobResult({
                    jobId,
                    printLogs: true,
                });
                //console.log("Proof result", proofResult);
                (0, globals_1.expect)(proofResult).toBeDefined();
                (0, globals_1.expect)(proofResult.success).toBe(true);
                (0, globals_1.expect)(proofResult.result).toBeDefined();
                const proof = proofResult.result.result;
                const verifyAnswer = await api.execute({
                    developer,
                    repo,
                    transactions: [],
                    task: "verifyProof",
                    args: JSON.stringify({
                        contractAddress: contractPublicKey.toBase58(),
                        proof,
                    }),
                    metadata: `verify proof`,
                });
                console.log("verifyAnswer:", verifyAnswer);
                (0, globals_1.expect)(verifyAnswer).toBeDefined();
                (0, globals_1.expect)(verifyAnswer.success).toBe(true);
                jobId = verifyAnswer.jobId;
                (0, globals_1.expect)(jobId).toBeDefined();
                if (jobId === undefined)
                    throw new Error("Job ID is undefined");
                const verifyResult = await api.waitForJobResult({
                    jobId,
                    printLogs: true,
                });
                console.log("Verify result:", verifyResult.result.result);
                const answer = await api.execute({
                    developer,
                    repo,
                    transactions: [],
                    task: "many",
                    args: JSON.stringify({
                        contractAddress: contractPublicKey.toBase58(),
                        isMany: true,
                        proof,
                    }),
                    metadata: `many`,
                });
                console.log("answer:", answer);
                (0, globals_1.expect)(answer).toBeDefined();
                (0, globals_1.expect)(answer.success).toBe(true);
                jobId = answer.jobId;
                (0, globals_1.expect)(jobId).toBeDefined();
                if (jobId === undefined)
                    throw new Error("Job ID is undefined");
                const manyResult = await api.waitForJobResult({
                    jobId,
                    printLogs: true,
                });
                console.log("Many result:", manyResult.result.result);
            }
            console.timeEnd(`Many txs sent`);
            zkcloudworker_1.Memory.info(`Many txs sent`);
        });
    }
    if (files) {
        (0, globals_1.it)(`should save and get files`, async () => {
            (0, globals_1.expect)(blockchainInitialized).toBe(true);
            console.time(`One txs sent`);
            const answer = await api.execute({
                developer,
                repo,
                transactions: [],
                task: "files",
                args: JSON.stringify({
                    contractAddress: contractPublicKey.toBase58(),
                    text: "Hello, World!",
                }),
                metadata: `files`,
            });
            console.log("answer:", answer);
            (0, globals_1.expect)(answer).toBeDefined();
            (0, globals_1.expect)(answer.success).toBe(true);
            const jobId = answer.jobId;
            (0, globals_1.expect)(jobId).toBeDefined();
            if (jobId === undefined)
                throw new Error("Job ID is undefined");
            const filesResult = await api.waitForJobResult({
                jobId,
                printLogs: true,
            });
            console.log("Files test result:", filesResult.result.result);
        });
    }
});
function processArguments() {
    function getArgument(arg) {
        const argument = process.argv.find((a) => a.startsWith("--" + arg));
        return argument?.split("=")[1];
    }
    const chainName = getArgument("chain") ?? "local";
    const shouldDeploy = getArgument("deploy") ?? "true";
    const compile = getArgument("compile");
    const one = getArgument("one") ?? "true";
    const many = getArgument("many") ?? "true";
    const send = getArgument("send") ?? "false";
    const files = getArgument("files") ?? "false";
    const cloud = getArgument("cloud");
    if (chainName !== "local" &&
        chainName !== "devnet" &&
        chainName !== "lightnet" &&
        chainName !== "zeko")
        throw new Error("Invalid chain name");
    return {
        chain: chainName,
        compile: compile === "true" || shouldDeploy === "true" || send === "true",
        deploy: shouldDeploy === "true",
        one: one === "true",
        many: many === "true",
        send: send === "true",
        files: files === "true",
        useLocalCloudWorker: cloud
            ? cloud === "local"
            : chainName === "local" || chainName === "lightnet",
    };
}
async function sendTx(tx, description) {
    try {
        let txSent;
        let sent = false;
        while (!sent) {
            txSent = await tx.safeSend();
            if (txSent.status == "pending") {
                sent = true;
                console.log(`${description ?? ""} tx sent: hash: ${txSent.hash} status: ${txSent.status}`);
            }
            else if (chain === "zeko") {
                console.log("Retrying Zeko tx");
                await (0, zkcloudworker_1.sleep)(10000);
            }
            else {
                console.log(`${description ?? ""} tx NOT sent: hash: ${txSent?.hash} status: ${txSent?.status}`);
                return "Error sending transaction";
            }
        }
        if (txSent === undefined)
            throw new Error("txSent is undefined");
        if (txSent.errors.length > 0) {
            console.error(`${description ?? ""} tx error: hash: ${txSent.hash} status: ${txSent.status}  errors: ${txSent.errors}`);
        }
        if (txSent.status === "pending") {
            console.log(`Waiting for tx inclusion...`);
            const txIncluded = await txSent.safeWait();
            console.log(`${description ?? ""} tx included into block: hash: ${txIncluded.hash} status: ${txIncluded.status}`);
        }
    }
    catch (error) {
        if (chain !== "zeko")
            console.error("Error sending tx", error);
    }
    if (chain !== "local")
        await (0, zkcloudworker_1.sleep)(10000);
}

```

Contents of dist/tests/config.d.ts:
```
import { PrivateKey } from "o1js";
interface ContractConfig {
    contractPrivateKey: PrivateKey;
    contractAddress: string;
}
export declare const contract: ContractConfig;
export declare const DEPLOYER = "EKFDvpBMGGa1bGrE9BhNLzr4VEBopt9ANfwTzE5Z3yqSBegiUUhk";
export {};

```

Contents of dist/tests/contract.test.d.ts:
```
export {};

```

Contents of dist/tests/config.js:
```
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DEPLOYER = exports.contract = void 0;
const o1js_1 = require("o1js");
exports.contract = {
    contractPrivateKey: o1js_1.PrivateKey.fromBase58("EKEhZwSy9be82EqLT3s8Fa4QPxE8fTGiGW1w3XC4ho3RmWqBmQh2"),
    contractAddress: "B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD",
};
exports.DEPLOYER = "EKFDvpBMGGa1bGrE9BhNLzr4VEBopt9ANfwTzE5Z3yqSBegiUUhk";
// "B62qrvVL5oJWT8K4ijnq83V3MYHv95jhrJ2T3X56GL7nfowNFvcDFST"

```

Contents of dist/src/worker.js:
```
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddWorker = void 0;
const zkcloudworker_1 = require("zkcloudworker");
const o1js_1 = require("o1js");
const contract_1 = require("./contract");
class AddWorker extends zkcloudworker_1.zkCloudWorker {
    constructor(cloud) {
        super(cloud);
        this.cache = o1js_1.Cache.FileSystem(this.cloud.cache);
    }
    async compile(compileSmartContracts = true) {
        try {
            console.time("compiled");
            if (AddWorker.programVerificationKey === undefined) {
                console.time("compiled AddProgram");
                AddWorker.programVerificationKey = (await contract_1.AddProgram.compile({
                    cache: this.cache,
                })).verificationKey;
                console.timeEnd("compiled AddProgram");
            }
            if (compileSmartContracts === false) {
                console.timeEnd("compiled");
                return;
            }
            if (AddWorker.contractVerificationKey === undefined) {
                console.time("compiled AddContract");
                AddWorker.contractVerificationKey = (await contract_1.AddContract.compile({
                    cache: this.cache,
                })).verificationKey;
                console.timeEnd("compiled AddContract");
            }
            console.timeEnd("compiled");
        }
        catch (error) {
            console.error("Error in compile, restarting container", error);
            // Restarting the container, see https://github.com/o1-labs/o1js/issues/1651
            await this.cloud.forceWorkerRestart();
            throw error;
        }
    }
    async create(transaction) {
        const msg = `proof created`;
        console.time(msg);
        const args = JSON.parse(transaction);
        const addValue = contract_1.AddValue.fromFields((0, zkcloudworker_1.deserializeFields)(args.addValue));
        await this.compile(false);
        if (AddWorker.programVerificationKey === undefined)
            throw new Error("verificationKey is undefined");
        const proof = await contract_1.AddProgram.create(addValue);
        console.timeEnd(msg);
        return JSON.stringify(proof.toJSON(), null, 2);
    }
    async merge(proof1, proof2) {
        const msg = `proof merged`;
        console.time(msg);
        await this.compile(false);
        if (AddWorker.programVerificationKey === undefined)
            throw new Error("verificationKey is undefined");
        const sourceProof1 = await contract_1.AddProgramProof.fromJSON(JSON.parse(proof1));
        const sourceProof2 = await contract_1.AddProgramProof.fromJSON(JSON.parse(proof2));
        const proof = await contract_1.AddProgram.merge(sourceProof1, sourceProof2);
        const ok = await (0, o1js_1.verify)(proof.toJSON(), AddWorker.programVerificationKey);
        if (!ok)
            throw new Error("proof verification failed");
        console.timeEnd(msg);
        return JSON.stringify(proof.toJSON(), null, 2);
    }
    async execute(transactions) {
        if (this.cloud.args === undefined)
            throw new Error("this.cloud.args is undefined");
        const args = JSON.parse(this.cloud.args);
        //console.log("args", args);
        if (args.contractAddress === undefined)
            throw new Error("args.contractAddress is undefined");
        switch (this.cloud.task) {
            case "one":
                return await this.sendTx({ ...args, isMany: false });
            case "many":
                return await this.sendTx({ ...args, isMany: true });
            case "verifyProof":
                return await this.verifyProof(args);
            case "files":
                return await this.files(args);
            default:
                throw new Error(`Unknown task: ${this.cloud.task}`);
        }
    }
    async verifyProof(args) {
        if (args.proof === undefined)
            throw new Error("args.proof is undefined");
        const proof = (await contract_1.AddProgramProof.fromJSON(JSON.parse(args.proof)));
        await this.compile(false);
        if (AddWorker.programVerificationKey === undefined)
            throw new Error("verificationKey is undefined");
        const ok = await (0, o1js_1.verify)(proof, AddWorker.programVerificationKey);
        if (ok)
            return "Proof verified";
        else
            return "Proof verification failed";
    }
    async files(args) {
        console.log("files test", args);
        if (args.text === undefined)
            throw new Error("args.text is undefined");
        const str = args.text;
        const buf = Buffer.from(str);
        await this.cloud.saveFile("text.txt", buf);
        const buf2 = await this.cloud.loadFile("text.txt");
        if (buf2 === undefined)
            return "Error loading file";
        const str2 = buf2.toString();
        if (str === str2)
            return "Files test is passed";
        else {
            console.log("Files are different", { str2, buf2 });
            return "Files are different";
        }
    }
    async sendTx(args) {
        if (args.isMany === undefined)
            throw new Error("args.isMany is undefined");
        const isMany = args.isMany;
        console.log("isMany:", isMany);
        if (isMany) {
            if (args.proof === undefined)
                throw new Error("args.proof is undefined");
        }
        else {
            if (args.addValue === undefined)
                throw new Error("args.addValue is undefined");
        }
        const privateKey = o1js_1.PrivateKey.random();
        const address = privateKey.toPublicKey();
        console.log("Address", address.toBase58());
        const contractAddress = o1js_1.PublicKey.fromBase58(args.contractAddress);
        const zkApp = new contract_1.AddContract(contractAddress);
        console.log(`Sending tx...`);
        console.time("prepared tx");
        const memo = isMany ? "many" : "one";
        const deployerKeyPair = await this.cloud.getDeployer();
        if (deployerKeyPair === undefined)
            throw new Error("deployerKeyPair is undefined");
        const deployer = o1js_1.PrivateKey.fromBase58(deployerKeyPair.privateKey);
        console.log("cloud deployer:", deployer.toBase58());
        if (deployer === undefined)
            throw new Error("deployer is undefined");
        const sender = deployer.toPublicKey();
        await (0, zkcloudworker_1.fetchMinaAccount)({
            publicKey: contractAddress,
            force: true,
        });
        await (0, zkcloudworker_1.fetchMinaAccount)({
            publicKey: sender,
            force: true,
        });
        console.log("sender:", sender.toBase58());
        console.log("Sender balance:", await (0, zkcloudworker_1.accountBalanceMina)(sender));
        await this.compile();
        let tx;
        let value;
        let limit;
        if (isMany) {
            const proof = (await contract_1.AddProgramProof.fromJSON(JSON.parse(args.proof)));
            value = proof.publicOutput.value.toJSON();
            limit = proof.publicOutput.limit.toJSON();
            tx = await o1js_1.Mina.transaction({ sender, fee: await (0, zkcloudworker_1.fee)(), memo }, async () => {
                o1js_1.AccountUpdate.fundNewAccount(sender);
                await zkApp.addMany(address, proof);
            });
        }
        else {
            const addValue = contract_1.AddValue.fromFields((0, zkcloudworker_1.deserializeFields)(args.addValue));
            console.log("addValue:", {
                value: addValue.value.toJSON(),
                limit: addValue.limit.toJSON(),
            });
            value = addValue.value.toJSON();
            limit = addValue.limit.toJSON();
            tx = await o1js_1.Mina.transaction({ sender, fee: await (0, zkcloudworker_1.fee)(), memo }, async () => {
                o1js_1.AccountUpdate.fundNewAccount(sender);
                await zkApp.addOne(address, addValue);
            });
        }
        if (tx === undefined)
            throw new Error("tx is undefined");
        await tx.prove();
        tx.sign([deployer, privateKey]);
        try {
            await tx.prove();
            console.timeEnd("prepared tx");
            let txSent;
            let sent = false;
            while (!sent) {
                txSent = await tx.safeSend();
                if (txSent.status == "pending") {
                    sent = true;
                    console.log(`${memo} tx sent: hash: ${txSent.hash} status: ${txSent.status}`);
                }
                else if (this.cloud.chain === "zeko") {
                    console.log("Retrying Zeko tx");
                    await (0, zkcloudworker_1.sleep)(10000);
                }
                else {
                    console.log(`${memo} tx NOT sent: hash: ${txSent?.hash} status: ${txSent?.status}`);
                    return "Error sending transaction";
                }
            }
            if (this.cloud.isLocalCloud && txSent?.status === "pending") {
                const txIncluded = await txSent.safeWait();
                console.log(`one tx included into block: hash: ${txIncluded.hash} status: ${txIncluded.status}`);
                await this.cloud.releaseDeployer({
                    publicKey: deployerKeyPair.publicKey,
                    txsHashes: [txIncluded.hash],
                });
                return txIncluded.hash;
            }
            await this.cloud.releaseDeployer({
                publicKey: deployerKeyPair.publicKey,
                txsHashes: txSent?.hash ? [txSent.hash] : [],
            });
            if (txSent?.hash)
                this.cloud.publishTransactionMetadata({
                    txId: txSent?.hash,
                    metadata: {
                        method: isMany ? "addMany" : "addOne",
                        value,
                        limit,
                    },
                });
            return txSent?.hash ?? "Error sending transaction";
        }
        catch (error) {
            console.error("Error sending transaction", error);
            return "Error sending transaction";
        }
    }
}
exports.AddWorker = AddWorker;
AddWorker.programVerificationKey = undefined;
AddWorker.contractVerificationKey = undefined;

```

Contents of dist/src/worker.d.ts:
```
import { zkCloudWorker, Cloud } from "zkcloudworker";
import { VerificationKey, Cache } from "o1js";
export declare class AddWorker extends zkCloudWorker {
    static programVerificationKey: VerificationKey | undefined;
    static contractVerificationKey: VerificationKey | undefined;
    readonly cache: Cache;
    constructor(cloud: Cloud);
    private compile;
    create(transaction: string): Promise<string | undefined>;
    merge(proof1: string, proof2: string): Promise<string | undefined>;
    execute(transactions: string[]): Promise<string | undefined>;
    private verifyProof;
    private files;
    private sendTx;
}

```

Contents of dist/src/contract.js:
```
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddContract = exports.AddProgramProof = exports.AddProgram = exports.AddValueEvent = exports.AddValue = exports.limit = void 0;
const o1js_1 = require("o1js");
exports.limit = 1000;
class AddValue extends (0, o1js_1.Struct)({
    value: o1js_1.UInt64,
    limit: o1js_1.UInt64,
}) {
    toState() {
        return [this.value.value, this.limit.value];
    }
}
exports.AddValue = AddValue;
class AddValueEvent extends (0, o1js_1.Struct)({
    addValue: AddValue,
    address: o1js_1.PublicKey,
}) {
}
exports.AddValueEvent = AddValueEvent;
exports.AddProgram = (0, o1js_1.ZkProgram)({
    name: "AddProgram",
    publicOutput: AddValue,
    methods: {
        create: {
            privateInputs: [AddValue],
            async method(addValue) {
                addValue.value.assertLessThan(addValue.limit, "Value exceeds limit");
                addValue.value.assertGreaterThan(o1js_1.UInt64.from(0), "Value must be positive");
                return addValue;
            },
        },
        merge: {
            privateInputs: [o1js_1.SelfProof, o1js_1.SelfProof],
            async method(proof1, proof2) {
                proof1.verify();
                proof2.verify();
                proof1.publicOutput.limit.assertEquals(proof2.publicOutput.limit);
                return new AddValue({
                    value: proof1.publicOutput.value.add(proof2.publicOutput.value),
                    limit: proof1.publicOutput.limit,
                });
            },
        },
    },
});
class AddProgramProof extends o1js_1.ZkProgram.Proof(exports.AddProgram) {
}
exports.AddProgramProof = AddProgramProof;
class AddContract extends o1js_1.TokenContract {
    constructor() {
        super(...arguments);
        this.limit = (0, o1js_1.State)();
        this.events = {
            addValue: AddValueEvent,
        };
    }
    init() {
        super.init();
        this.limit.set(o1js_1.UInt64.from(exports.limit));
    }
    async approveBase(forest) {
        throw Error("transfers are not allowed");
    }
    async addOne(address, addValue) {
        const limit = this.limit.getAndRequireEquals();
        addValue.value.assertLessThan(limit, "Value exceeds limit");
        addValue.value.assertGreaterThan(o1js_1.UInt64.from(0), "Value must be positive");
        this.createAddValue(address, addValue);
    }
    async addMany(address, proof) {
        const limit = this.limit.getAndRequireEquals();
        limit.assertEquals(proof.publicOutput.limit);
        proof.verify();
        this.createAddValue(address, proof.publicOutput);
    }
    createAddValue(address, addValue) {
        const tokenId = this.deriveTokenId();
        const update = o1js_1.AccountUpdate.createSigned(address, tokenId);
        update.account.balance.getAndRequireEquals().assertEquals(o1js_1.UInt64.from(0));
        this.internal.mint({
            address: address,
            amount: addValue.value,
        });
        const state = addValue.toState();
        update.body.update.appState = [
            { isSome: (0, o1js_1.Bool)(true), value: state[0] },
            { isSome: (0, o1js_1.Bool)(true), value: state[1] },
            { isSome: (0, o1js_1.Bool)(false), value: (0, o1js_1.Field)(0) },
            { isSome: (0, o1js_1.Bool)(false), value: (0, o1js_1.Field)(0) },
            { isSome: (0, o1js_1.Bool)(false), value: (0, o1js_1.Field)(0) },
            { isSome: (0, o1js_1.Bool)(false), value: (0, o1js_1.Field)(0) },
            { isSome: (0, o1js_1.Bool)(false), value: (0, o1js_1.Field)(0) },
            { isSome: (0, o1js_1.Bool)(false), value: (0, o1js_1.Field)(0) },
        ];
        this.emitEvent("addValue", new AddValueEvent({ addValue, address }));
    }
}
exports.AddContract = AddContract;
__decorate([
    (0, o1js_1.state)(o1js_1.UInt64),
    __metadata("design:type", Object)
], AddContract.prototype, "limit", void 0);
__decorate([
    o1js_1.method,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [o1js_1.PublicKey, AddValue]),
    __metadata("design:returntype", Promise)
], AddContract.prototype, "addOne", null);
__decorate([
    o1js_1.method,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [o1js_1.PublicKey, AddProgramProof]),
    __metadata("design:returntype", Promise)
], AddContract.prototype, "addMany", null);

```

Contents of dist/src/contract.d.ts:
```
import { SelfProof, State, TokenContract, AccountUpdateForest, PublicKey, UInt64 } from "o1js";
export declare const limit = 1000;
declare const AddValue_base: (new (value: {
    value: UInt64;
    limit: UInt64;
}) => {
    value: UInt64;
    limit: UInt64;
}) & {
    _isStruct: true;
} & Omit<import("o1js/dist/node/lib/provable/types/provable-intf").Provable<{
    value: UInt64;
    limit: UInt64;
}, {
    value: bigint;
    limit: bigint;
}>, "fromFields"> & {
    fromFields: (fields: import("o1js/dist/node/lib/provable/field").Field[]) => {
        value: UInt64;
        limit: UInt64;
    };
} & {
    fromValue: (value: {
        value: bigint | UInt64;
        limit: bigint | UInt64;
    }) => {
        value: UInt64;
        limit: UInt64;
    };
    toInput: (x: {
        value: UInt64;
        limit: UInt64;
    }) => {
        fields?: import("o1js/dist/node/lib/provable/field").Field[] | undefined;
        packed?: [import("o1js/dist/node/lib/provable/field").Field, number][] | undefined;
    };
    toJSON: (x: {
        value: UInt64;
        limit: UInt64;
    }) => {
        value: string;
        limit: string;
    };
    fromJSON: (x: {
        value: string;
        limit: string;
    }) => {
        value: UInt64;
        limit: UInt64;
    };
    empty: () => {
        value: UInt64;
        limit: UInt64;
    };
};
export declare class AddValue extends AddValue_base {
    toState(): import("o1js/dist/node/lib/provable/field").Field[];
}
declare const AddValueEvent_base: (new (value: {
    addValue: AddValue;
    address: PublicKey;
}) => {
    addValue: AddValue;
    address: PublicKey;
}) & {
    _isStruct: true;
} & Omit<import("o1js/dist/node/lib/provable/types/provable-intf").Provable<{
    addValue: AddValue;
    address: PublicKey;
}, {
    addValue: {
        value: bigint;
        limit: bigint;
    };
    address: {
        x: bigint;
        isOdd: boolean;
    };
}>, "fromFields"> & {
    fromFields: (fields: import("o1js/dist/node/lib/provable/field").Field[]) => {
        addValue: AddValue;
        address: PublicKey;
    };
} & {
    fromValue: (value: {
        addValue: AddValue | {
            value: bigint | UInt64;
            limit: bigint | UInt64;
        };
        address: PublicKey | {
            x: bigint | import("o1js/dist/node/lib/provable/field").Field;
            isOdd: boolean | import("o1js/dist/node/lib/provable/bool").Bool;
        };
    }) => {
        addValue: AddValue;
        address: PublicKey;
    };
    toInput: (x: {
        addValue: AddValue;
        address: PublicKey;
    }) => {
        fields?: import("o1js/dist/node/lib/provable/field").Field[] | undefined;
        packed?: [import("o1js/dist/node/lib/provable/field").Field, number][] | undefined;
    };
    toJSON: (x: {
        addValue: AddValue;
        address: PublicKey;
    }) => {
        addValue: {
            value: string;
            limit: string;
        };
        address: string;
    };
    fromJSON: (x: {
        addValue: {
            value: string;
            limit: string;
        };
        address: string;
    }) => {
        addValue: AddValue;
        address: PublicKey;
    };
    empty: () => {
        addValue: AddValue;
        address: PublicKey;
    };
};
export declare class AddValueEvent extends AddValueEvent_base {
}
export declare const AddProgram: {
    name: string;
    compile: (options?: {
        cache?: import("o1js").Cache | undefined;
        forceRecompile?: boolean | undefined;
    } | undefined) => Promise<{
        verificationKey: {
            data: string;
            hash: import("o1js/dist/node/lib/provable/field").Field;
        };
    }>;
    verify: (proof: import("o1js").Proof<undefined, AddValue>) => Promise<boolean>;
    digest: () => Promise<string>;
    analyzeMethods: () => Promise<{
        create: {
            rows: number;
            digest: string;
            gates: import("o1js/dist/node/snarky").Gate[];
            publicInputSize: number;
            print(): void;
            summary(): Partial<Record<import("o1js/dist/node/snarky").GateType | "Total rows", number>>;
        };
        merge: {
            rows: number;
            digest: string;
            gates: import("o1js/dist/node/snarky").Gate[];
            publicInputSize: number;
            print(): void;
            summary(): Partial<Record<import("o1js/dist/node/snarky").GateType | "Total rows", number>>;
        };
    }>;
    publicInputType: import("o1js/dist/node/lib/provable/types/struct").ProvablePureExtended<undefined, undefined, null>;
    publicOutputType: typeof AddValue;
    privateInputTypes: {
        create: [typeof AddValue];
        merge: [typeof SelfProof, typeof SelfProof];
    };
    rawMethods: {
        create: (...args: [AddValue] & any[]) => Promise<AddValue>;
        merge: (...args: [SelfProof<unknown, unknown>, SelfProof<unknown, unknown>] & any[]) => Promise<AddValue>;
    };
} & {
    create: (...args: [AddValue] & any[]) => Promise<import("o1js").Proof<undefined, AddValue>>;
    merge: (...args: [SelfProof<unknown, unknown>, SelfProof<unknown, unknown>] & any[]) => Promise<import("o1js").Proof<undefined, AddValue>>;
};
declare const AddProgramProof_base: {
    new ({ proof, publicInput, publicOutput, maxProofsVerified, }: {
        proof: unknown;
        publicInput: undefined;
        publicOutput: AddValue;
        maxProofsVerified: 0 | 1 | 2;
    }): {
        verify(): void;
        verifyIf(condition: import("o1js/dist/node/lib/provable/bool").Bool): void;
        publicInput: undefined;
        publicOutput: AddValue;
        proof: unknown;
        maxProofsVerified: 0 | 1 | 2;
        shouldVerify: import("o1js/dist/node/lib/provable/bool").Bool;
        toJSON(): import("o1js").JsonProof;
    };
    publicInputType: import("o1js/dist/node/lib/provable/types/struct").ProvablePureExtended<undefined, undefined, null>;
    publicOutputType: typeof AddValue;
    tag: () => {
        name: string;
        publicInputType: import("o1js/dist/node/lib/provable/types/struct").ProvablePureExtended<undefined, undefined, null>;
        publicOutputType: typeof AddValue;
    };
    fromJSON<S extends (new (...args: any) => import("o1js").Proof<unknown, unknown>) & {
        prototype: import("o1js").Proof<any, any>;
        fromJSON: typeof import("o1js").Proof.fromJSON;
        dummy: typeof import("o1js").Proof.dummy;
        publicInputType: import("o1js").FlexibleProvablePure<any>;
        publicOutputType: import("o1js").FlexibleProvablePure<any>;
        tag: () => {
            name: string;
        };
    } & {
        prototype: import("o1js").Proof<unknown, unknown>;
    }>(this: S, { maxProofsVerified, proof: proofString, publicInput: publicInputJson, publicOutput: publicOutputJson, }: import("o1js").JsonProof): Promise<import("o1js").Proof<import("o1js").InferProvable<S["publicInputType"]>, import("o1js").InferProvable<S["publicOutputType"]>>>;
    dummy<Input, OutPut>(publicInput: Input, publicOutput: OutPut, maxProofsVerified: 0 | 1 | 2, domainLog2?: number | undefined): Promise<import("o1js").Proof<Input, OutPut>>;
};
export declare class AddProgramProof extends AddProgramProof_base {
}
export declare class AddContract extends TokenContract {
    limit: State<UInt64>;
    init(): void;
    approveBase(forest: AccountUpdateForest): Promise<void>;
    events: {
        addValue: typeof AddValueEvent;
    };
    addOne(address: PublicKey, addValue: AddValue): Promise<void>;
    addMany(address: PublicKey, proof: AddProgramProof): Promise<void>;
    createAddValue(address: PublicKey, addValue: AddValue): void;
}
export {};

```

Contents of tests/contract.test.ts:
```
import { describe, expect, it } from "@jest/globals";
import {
  PrivateKey,
  Mina,
  AccountUpdate,
  VerificationKey,
  UInt64,
  Cache,
  PublicKey,
  setNumberOfWorkers,
} from "o1js";

import {
  zkCloudWorkerClient,
  blockchain,
  sleep,
  Memory,
  fetchMinaAccount,
  fee,
  initBlockchain,
  serializeFields,
  accountBalanceMina,
} from "zkcloudworker";
import { zkcloudworker } from "..";
import { AddContract, AddProgram, limit, AddValue } from "../src/contract";
import { contract, DEPLOYER } from "./config";
import packageJson from "../package.json";
import { JWT } from "../env.json";

const ONE_ELEMENTS_NUMBER = 1;
const MANY_ELEMENTS_NUMBER = 1;
const MANY_BATCH_SIZE = 3;
setNumberOfWorkers(8);

const { name: repo, author: developer } = packageJson;
const {
  chain,
  compile,
  deploy,
  one,
  many,
  send,
  files,
  encrypt,
  useLocalCloudWorker,
} = processArguments();

const api = new zkCloudWorkerClient({
  jwt: useLocalCloudWorker ? "local" : JWT,
  zkcloudworker,
  chain,
});

let deployer: PrivateKey;
let sender: PublicKey;

const oneValues: number[] = [];
const manyValues: number[][] = [];

const contractPrivateKey = contract.contractPrivateKey;
const contractPublicKey = contractPrivateKey.toPublicKey();

const zkApp = new AddContract(contractPublicKey);
let programVerificationKey: VerificationKey;
let contractVerificationKey: VerificationKey;
let blockchainInitialized = false;

describe("Add Worker", () => {
  it(`should prepare data`, async () => {
    console.log("Preparing data...");
    console.time(`prepared data`);
    for (let i = 0; i < ONE_ELEMENTS_NUMBER; i++) {
      oneValues.push(1 + Math.floor(Math.random() * (limit - 2)));
    }
    for (let i = 0; i < MANY_ELEMENTS_NUMBER; i++) {
      const values: number[] = [];
      for (let j = 0; j < MANY_BATCH_SIZE; j++) {
        values.push(1 + Math.floor(Math.random() * (limit - 2)));
      }
      manyValues.push(values);
    }
    console.timeEnd(`prepared data`);
  });

  it(`should initialize blockchain`, async () => {
    expect(contractPrivateKey).toBeDefined();
    expect(contractPrivateKey.toPublicKey().toBase58()).toBe(
      contractPublicKey.toBase58()
    );

    Memory.info("initializing blockchain");

    if (chain === "local" || chain === "lightnet") {
      console.log("local chain:", chain);
      const { keys } = await initBlockchain(chain, 2);
      expect(keys.length).toBeGreaterThanOrEqual(2);
      if (keys.length < 2) throw new Error("Invalid keys");
      deployer = keys[0].key;
    } else {
      console.log("non-local chain:", chain);
      await initBlockchain(chain);
      deployer = PrivateKey.fromBase58(DEPLOYER);
    }

    process.env.DEPLOYER_PRIVATE_KEY = deployer.toBase58();
    process.env.DEPLOYER_PUBLIC_KEY = deployer.toPublicKey().toBase58();

    console.log("contract address:", contractPublicKey.toBase58());
    sender = deployer.toPublicKey();
    console.log("sender:", sender.toBase58());
    console.log("Sender balance:", await accountBalanceMina(sender));
    expect(deployer).toBeDefined();
    expect(sender).toBeDefined();
    expect(deployer.toPublicKey().toBase58()).toBe(sender.toBase58());
    Memory.info("blockchain initialized");
    blockchainInitialized = true;
  });

  if (compile) {
    it(`should compile contract`, async () => {
      expect(blockchainInitialized).toBe(true);
      console.log("Analyzing contracts methods...");
      console.time("methods analyzed");
      const methods = [
        {
          name: "AddProgram",
          result: await AddProgram.analyzeMethods(),
          skip: true,
        },
        { name: "AddContract", result: await AddContract.analyzeMethods() },
      ];
      console.timeEnd("methods analyzed");
      const maxRows = 2 ** 16;
      for (const contract of methods) {
        // calculate the size of the contract - the sum or rows for each method
        const size = Object.values(contract.result).reduce(
          (acc, method) => acc + method.rows,
          0
        );
        // calculate percentage rounded to 0 decimal places
        const percentage = Math.round(((size * 100) / maxRows) * 100) / 100;

        console.log(
          `method's total size for a ${contract.name} is ${size} rows (${percentage}% of max ${maxRows} rows)`
        );
        if (contract.skip !== true)
          for (const method in contract.result) {
            console.log(method, `rows:`, (contract.result as any)[method].rows);
          }
      }

      console.time("compiled");
      console.log("Compiling contracts...");
      const cache: Cache = Cache.FileSystem("./cache");

      console.time("AddProgram compiled");
      programVerificationKey = (await AddProgram.compile({ cache }))
        .verificationKey;
      console.timeEnd("AddProgram compiled");

      console.time("AddContract compiled");
      contractVerificationKey = (await AddContract.compile({ cache }))
        .verificationKey;
      console.timeEnd("AddContract compiled");
      console.timeEnd("compiled");
      console.log(
        "AddContract verification key",
        contractVerificationKey.hash.toJSON()
      );
      console.log(
        "AddProgram verification key",
        programVerificationKey.hash.toJSON()
      );
      Memory.info("compiled");
    });
  }
  if (deploy) {
    it(`should deploy contract`, async () => {
      expect(blockchainInitialized).toBe(true);
      console.log(`Deploying contract...`);

      await fetchMinaAccount({ publicKey: sender, force: true });

      const tx = await Mina.transaction(
        { sender, fee: await fee(), memo: "deploy" },
        async () => {
          AccountUpdate.fundNewAccount(sender);
          await zkApp.deploy({});
          zkApp.account.zkappUri.set("https://zkcloudworker.com");
        }
      );

      tx.sign([deployer, contractPrivateKey]);
      await sendTx(tx, "deploy");
      Memory.info("deployed");
    });
  }

  if (send) {
    it(`should send first one tx`, async () => {
      expect(blockchainInitialized).toBe(true);
      console.log(`Sending first one tx...`);

      await fetchMinaAccount({ publicKey: sender, force: true });
      await fetchMinaAccount({ publicKey: contractPublicKey, force: true });
      const addValue = new AddValue({
        value: UInt64.from(100),
        limit: UInt64.from(limit),
      });
      const privateKey = PrivateKey.random();
      const address = privateKey.toPublicKey();

      const tx = await Mina.transaction(
        { sender, fee: await fee(), memo: "one tx" },
        async () => {
          AccountUpdate.fundNewAccount(sender);
          await zkApp.addOne(address, addValue);
        }
      );

      await tx.prove();
      tx.sign([deployer, privateKey]);
      await sendTx(tx, "first one tx");
      Memory.info("first one tx sent");
      await sleep(10000);
    });
  }

  if (one) {
    it(`should send one transactions`, async () => {
      expect(blockchainInitialized).toBe(true);
      console.time(`One txs sent`);
      for (let i = 0; i < ONE_ELEMENTS_NUMBER; i++) {
        console.log(`Sending one tx ${i + 1}/${ONE_ELEMENTS_NUMBER}...`);
        const answer = await api.execute({
          developer,
          repo,
          transactions: [],
          task: "one",
          args: JSON.stringify({
            contractAddress: contractPublicKey.toBase58(),
            isMany: false,
            addValue: serializeFields(
              AddValue.toFields(
                new AddValue({
                  value: UInt64.from(oneValues[i]),
                  limit: UInt64.from(limit),
                })
              )
            ),
          }),
          metadata: `one`,
        });
        console.log("answer:", answer);
        expect(answer).toBeDefined();
        expect(answer.success).toBe(true);
        const jobId = answer.jobId;
        expect(jobId).toBeDefined();
        if (jobId === undefined) throw new Error("Job ID is undefined");
        const oneResult = await api.waitForJobResult({
          jobId,
          printLogs: true,
        });
        console.log("One result:", oneResult.result.result);
      }
      console.timeEnd(`One txs sent`);
      Memory.info(`One txs sent`);
    });
  }

  if (many) {
    it(`should send transactions with recursive proofs`, async () => {
      expect(blockchainInitialized).toBe(true);
      console.time(`Many txs sent`);
      for (let i = 0; i < MANY_ELEMENTS_NUMBER; i++) {
        console.log(`Sending many tx ${i + 1}/${MANY_ELEMENTS_NUMBER}...`);
        const transactions: string[] = [];
        for (let j = 0; j < MANY_BATCH_SIZE; j++) {
          transactions.push(
            JSON.stringify({
              addValue: serializeFields(
                AddValue.toFields(
                  new AddValue({
                    value: UInt64.from(manyValues[i][j]),
                    limit: UInt64.from(limit),
                  })
                )
              ),
            })
          );
        }

        const proofAnswer = await api.recursiveProof({
          developer,
          repo,
          transactions,
          task: "proof",
          args: JSON.stringify({
            contractAddress: contractPublicKey.toBase58(),
          }),
          metadata: `proof`,
        });
        console.log("proof answer:", proofAnswer);
        expect(proofAnswer).toBeDefined();
        expect(proofAnswer.success).toBe(true);
        let jobId = proofAnswer.jobId;
        expect(jobId).toBeDefined();
        if (jobId === undefined) throw new Error("Job ID is undefined");
        const proofResult = await api.waitForJobResult({
          jobId,
          printLogs: true,
        });
        //console.log("Proof result", proofResult);
        expect(proofResult).toBeDefined();
        expect(proofResult.success).toBe(true);
        expect(proofResult.result).toBeDefined();
        const proof = proofResult.result.result;

        const verifyAnswer = await api.execute({
          developer,
          repo,
          transactions: [],
          task: "verifyProof",
          args: JSON.stringify({
            contractAddress: contractPublicKey.toBase58(),
            proof,
          }),
          metadata: `verify proof`,
        });
        console.log("verifyAnswer:", verifyAnswer);
        expect(verifyAnswer).toBeDefined();
        expect(verifyAnswer.success).toBe(true);
        jobId = verifyAnswer.jobId;
        expect(jobId).toBeDefined();
        if (jobId === undefined) throw new Error("Job ID is undefined");
        const verifyResult = await api.waitForJobResult({
          jobId,
          printLogs: true,
        });
        console.log("Verify result:", verifyResult.result.result);

        const answer = await api.execute({
          developer,
          repo,
          transactions: [],
          task: "many",
          args: JSON.stringify({
            contractAddress: contractPublicKey.toBase58(),
            isMany: true,
            proof,
          }),
          metadata: `many`,
        });
        console.log("answer:", answer);
        expect(answer).toBeDefined();
        expect(answer.success).toBe(true);
        jobId = answer.jobId;
        expect(jobId).toBeDefined();
        if (jobId === undefined) throw new Error("Job ID is undefined");
        const manyResult = await api.waitForJobResult({
          jobId,
          printLogs: true,
        });
        console.log("Many result:", manyResult.result.result);
      }
      console.timeEnd(`Many txs sent`);
      Memory.info(`Many txs sent`);
    });
  }

  if (files) {
    it(`should save and get files`, async () => {
      expect(blockchainInitialized).toBe(true);
      const answer = await api.execute({
        developer,
        repo,
        transactions: [],
        task: "files",
        args: JSON.stringify({
          contractAddress: contractPublicKey.toBase58(),
          text: "Hello, World!",
        }),
        metadata: `files`,
      });
      console.log("answer:", answer);
      expect(answer).toBeDefined();
      expect(answer.success).toBe(true);
      const jobId = answer.jobId;
      expect(jobId).toBeDefined();
      if (jobId === undefined) throw new Error("Job ID is undefined");
      const filesResult = await api.waitForJobResult({
        jobId,
        printLogs: true,
      });
      console.log("Files test result:", filesResult.result.result);
    });
  }

  if (encrypt) {
    it(`should save and get encrypted data`, async () => {
      let answer = await api.execute({
        developer,
        repo,
        transactions: [],
        task: "encrypt",
        args: JSON.stringify({
          contractAddress: contractPublicKey.toBase58(),
          text: "Hello, World!",
        }),
        metadata: `files`,
      });
      console.log("answer:", answer);
      expect(answer).toBeDefined();
      expect(answer.success).toBe(true);
      let jobId = answer.jobId;
      expect(jobId).toBeDefined();
      if (jobId === undefined) throw new Error("Job ID is undefined");
      let result = await api.waitForJobResult({
        jobId,
        printLogs: true,
      });
      const encrypted = result.result.result;
      console.log("Encrypted data:", encrypted);
      if (encrypted === undefined)
        throw new Error("Encrypted data is undefined");
      if (encrypted === "Error encrypting") throw new Error("Error encrypting");
      answer = await api.execute({
        developer,
        repo,
        transactions: [],
        task: "decrypt",
        args: JSON.stringify({
          contractAddress: contractPublicKey.toBase58(),
          text: encrypted,
        }),
        metadata: `files`,
      });
      console.log("answer:", answer);
      expect(answer).toBeDefined();
      expect(answer.success).toBe(true);
      jobId = answer.jobId;
      expect(jobId).toBeDefined();
      if (jobId === undefined) throw new Error("Job ID is undefined");
      result = await api.waitForJobResult({
        jobId,
        printLogs: true,
      });
      const decrypted = result.result.result;
      console.log("Decrypted data:", decrypted);
      expect(decrypted).toBe("Hello, World!");
    });
  }
});

function processArguments(): {
  chain: blockchain;
  compile: boolean;
  deploy: boolean;
  one: boolean;
  many: boolean;
  send: boolean;
  files: boolean;
  encrypt: boolean;
  useLocalCloudWorker: boolean;
} {
  function getArgument(arg: string): string | undefined {
    const argument = process.argv.find((a) => a.startsWith("--" + arg));
    return argument?.split("=")[1];
  }

  const chainName = getArgument("chain") ?? "local";
  const shouldDeploy = getArgument("deploy") ?? "true";
  const compile = getArgument("compile");
  const one = getArgument("one") ?? "true";
  const many = getArgument("many") ?? "true";
  const send = getArgument("send") ?? "false";
  const files = getArgument("files") ?? "false";
  const encrypt = getArgument("encrypt") ?? "false";
  const cloud = getArgument("cloud");

  if (
    chainName !== "local" &&
    chainName !== "devnet" &&
    chainName !== "lightnet" &&
    chainName !== "zeko"
  )
    throw new Error("Invalid chain name");
  return {
    chain: chainName as blockchain,
    compile: compile === "true" || shouldDeploy === "true" || send === "true",
    deploy: shouldDeploy === "true",
    one: one === "true",
    many: many === "true",
    send: send === "true",
    files: files === "true",
    encrypt: encrypt === "true",
    useLocalCloudWorker: cloud
      ? cloud === "local"
      : chainName === "local" || chainName === "lightnet",
  };
}

async function sendTx(
  tx: Mina.Transaction<false, true> | Mina.Transaction<true, true>,
  description?: string
) {
  try {
    let txSent;
    let sent = false;
    while (!sent) {
      txSent = await tx.safeSend();
      if (txSent.status == "pending") {
        sent = true;
        console.log(
          `${description ?? ""} tx sent: hash: ${txSent.hash} status: ${
            txSent.status
          }`
        );
      } else if (chain === "zeko") {
        console.log("Retrying Zeko tx");
        await sleep(10000);
      } else {
        console.log(
          `${description ?? ""} tx NOT sent: hash: ${txSent?.hash} status: ${
            txSent?.status
          }`
        );
        return "Error sending transaction";
      }
    }
    if (txSent === undefined) throw new Error("txSent is undefined");
    if (txSent.errors.length > 0) {
      console.error(
        `${description ?? ""} tx error: hash: ${txSent.hash} status: ${
          txSent.status
        }  errors: ${txSent.errors}`
      );
    }

    if (txSent.status === "pending") {
      console.log(`Waiting for tx inclusion...`);
      const txIncluded = await txSent.safeWait();
      console.log(
        `${description ?? ""} tx included into block: hash: ${
          txIncluded.hash
        } status: ${txIncluded.status}`
      );
    }
  } catch (error) {
    if (chain !== "zeko") console.error("Error sending tx", error);
  }
  if (chain !== "local") await sleep(10000);
}

```

Contents of tests/config.ts:
```
import { PrivateKey } from "o1js";

interface ContractConfig {
  contractPrivateKey: PrivateKey;
  contractAddress: string;
}

export const contract: ContractConfig = {
  contractPrivateKey: PrivateKey.fromBase58(
    "EKEhZwSy9be82EqLT3s8Fa4QPxE8fTGiGW1w3XC4ho3RmWqBmQh2"
  ),
  contractAddress: "B62qrZso6WMaxZPrkDHW9sa7BTtVKjHon6BJxUbN3q6PwdTNQXWvADD",
};

export const DEPLOYER = "EKFDvpBMGGa1bGrE9BhNLzr4VEBopt9ANfwTzE5Z3yqSBegiUUhk";
// "B62qrvVL5oJWT8K4ijnq83V3MYHv95jhrJ2T3X56GL7nfowNFvcDFST"

```

Contents of src/contract.ts:
```
import {
  SelfProof,
  ZkProgram,
  method,
  state,
  State,
  Struct,
  TokenContract,
  AccountUpdateForest,
  PublicKey,
  AccountUpdate,
  UInt64,
  Bool,
  Field,
} from "o1js";

export const limit = 1000;

export class AddValue extends Struct({
  value: UInt64,
  limit: UInt64,
}) {
  toState() {
    return [this.value.value, this.limit.value];
  }
}

export class AddValueEvent extends Struct({
  addValue: AddValue,
  address: PublicKey,
}) {}

export const AddProgram = ZkProgram({
  name: "AddProgram",
  publicOutput: AddValue,

  methods: {
    create: {
      privateInputs: [AddValue],
      async method(addValue: AddValue) {
        addValue.value.assertLessThan(addValue.limit, "Value exceeds limit");
        addValue.value.assertGreaterThan(
          UInt64.from(0),
          "Value must be positive"
        );
        return addValue;
      },
    },

    merge: {
      privateInputs: [SelfProof, SelfProof],
      async method(
        proof1: SelfProof<void, AddValue>,
        proof2: SelfProof<void, AddValue>
      ) {
        proof1.verify();
        proof2.verify();
        proof1.publicOutput.limit.assertEquals(proof2.publicOutput.limit);

        return new AddValue({
          value: proof1.publicOutput.value.add(proof2.publicOutput.value),
          limit: proof1.publicOutput.limit,
        });
      },
    },
  },
});

export class AddProgramProof extends ZkProgram.Proof(AddProgram) {}

export class AddContract extends TokenContract {
  @state(UInt64) limit = State<UInt64>();

  init() {
    super.init();
    this.limit.set(UInt64.from(limit));
  }

  async approveBase(forest: AccountUpdateForest) {
    throw Error("transfers are not allowed");
  }

  events = {
    addValue: AddValueEvent,
  };

  @method async addOne(address: PublicKey, addValue: AddValue) {
    const limit = this.limit.getAndRequireEquals();
    addValue.value.assertLessThan(limit, "Value exceeds limit");
    addValue.value.assertGreaterThan(UInt64.from(0), "Value must be positive");
    this.createAddValue(address, addValue);
  }

  @method async addMany(address: PublicKey, proof: AddProgramProof) {
    const limit = this.limit.getAndRequireEquals();
    limit.assertEquals(proof.publicOutput.limit);
    proof.verify();
    this.createAddValue(address, proof.publicOutput);
  }

  createAddValue(address: PublicKey, addValue: AddValue) {
    const tokenId = this.deriveTokenId();
    const update = AccountUpdate.createSigned(address, tokenId);
    update.account.balance.getAndRequireEquals().assertEquals(UInt64.from(0));
    this.internal.mint({
      address: address,
      amount: addValue.value,
    });
    const state = addValue.toState();
    update.body.update.appState = [
      { isSome: Bool(true), value: state[0] },
      { isSome: Bool(true), value: state[1] },
      { isSome: Bool(false), value: Field(0) },
      { isSome: Bool(false), value: Field(0) },
      { isSome: Bool(false), value: Field(0) },
      { isSome: Bool(false), value: Field(0) },
      { isSome: Bool(false), value: Field(0) },
      { isSome: Bool(false), value: Field(0) },
    ];
    this.emitEvent("addValue", new AddValueEvent({ addValue, address }));
  }
}

```

Contents of src/worker.ts:
```
import {
  zkCloudWorker,
  Cloud,
  fee,
  sleep,
  deserializeFields,
  fetchMinaAccount,
  accountBalanceMina,
} from "zkcloudworker";
import {
  verify,
  JsonProof,
  VerificationKey,
  PublicKey,
  Mina,
  PrivateKey,
  AccountUpdate,
  Cache,
} from "o1js";
import { AddContract, AddProgram, AddProgramProof, AddValue } from "./contract";

export class AddWorker extends zkCloudWorker {
  static programVerificationKey: VerificationKey | undefined = undefined;
  static contractVerificationKey: VerificationKey | undefined = undefined;
  readonly cache: Cache;

  constructor(cloud: Cloud) {
    super(cloud);
    this.cache = Cache.FileSystem(this.cloud.cache);
  }

  private async compile(compileSmartContracts: boolean = true): Promise<void> {
    try {
      console.time("compiled");
      if (AddWorker.programVerificationKey === undefined) {
        console.time("compiled AddProgram");
        AddWorker.programVerificationKey = (
          await AddProgram.compile({
            cache: this.cache,
          })
        ).verificationKey;
        console.timeEnd("compiled AddProgram");
      }

      if (compileSmartContracts === false) {
        console.timeEnd("compiled");
        return;
      }

      if (AddWorker.contractVerificationKey === undefined) {
        console.time("compiled AddContract");
        AddWorker.contractVerificationKey = (
          await AddContract.compile({
            cache: this.cache,
          })
        ).verificationKey;
        console.timeEnd("compiled AddContract");
      }
      console.timeEnd("compiled");
    } catch (error) {
      console.error("Error in compile, restarting container", error);
      // Restarting the container, see https://github.com/o1-labs/o1js/issues/1651
      await this.cloud.forceWorkerRestart();
      throw error;
    }
  }

  public async create(transaction: string): Promise<string | undefined> {
    const msg = `proof created`;
    console.time(msg);
    const args = JSON.parse(transaction);

    const addValue: AddValue = AddValue.fromFields(
      deserializeFields(args.addValue)
    ) as AddValue;

    await this.compile(false);
    if (AddWorker.programVerificationKey === undefined)
      throw new Error("verificationKey is undefined");

    const proof = await AddProgram.create(addValue);
    console.timeEnd(msg);

    return JSON.stringify(proof.toJSON(), null, 2);
  }

  public async merge(
    proof1: string,
    proof2: string
  ): Promise<string | undefined> {
    const msg = `proof merged`;
    console.time(msg);
    await this.compile(false);
    if (AddWorker.programVerificationKey === undefined)
      throw new Error("verificationKey is undefined");

    const sourceProof1: AddProgramProof = await AddProgramProof.fromJSON(
      JSON.parse(proof1) as JsonProof
    );
    const sourceProof2: AddProgramProof = await AddProgramProof.fromJSON(
      JSON.parse(proof2) as JsonProof
    );

    const proof = await AddProgram.merge(sourceProof1, sourceProof2);
    const ok = await verify(proof.toJSON(), AddWorker.programVerificationKey);
    if (!ok) throw new Error("proof verification failed");
    console.timeEnd(msg);
    return JSON.stringify(proof.toJSON(), null, 2);
  }

  public async execute(transactions: string[]): Promise<string | undefined> {
    if (this.cloud.args === undefined)
      throw new Error("this.cloud.args is undefined");
    const args = JSON.parse(this.cloud.args);
    //console.log("args", args);
    if (args.contractAddress === undefined)
      throw new Error("args.contractAddress is undefined");

    switch (this.cloud.task) {
      case "one":
        return await this.sendTx({ ...args, isMany: false });

      case "many":
        return await this.sendTx({ ...args, isMany: true });

      case "verifyProof":
        return await this.verifyProof(args);

      case "files":
        return await this.files(args);

      case "encrypt":
        return await this.encrypt(args);

      case "decrypt":
        return await this.decrypt(args);

      default:
        throw new Error(`Unknown task: ${this.cloud.task}`);
    }
  }

  private async verifyProof(args: { proof: string }): Promise<string> {
    if (args.proof === undefined) throw new Error("args.proof is undefined");
    const proof = (await AddProgramProof.fromJSON(
      JSON.parse(args.proof) as JsonProof
    )) as AddProgramProof;

    await this.compile(false);
    if (AddWorker.programVerificationKey === undefined)
      throw new Error("verificationKey is undefined");

    const ok = await verify(proof, AddWorker.programVerificationKey);
    if (ok) return "Proof verified";
    else return "Proof verification failed";
  }

  private async files(args: { text: string }): Promise<string> {
    console.log("files test", args);
    if (args.text === undefined) throw new Error("args.text is undefined");
    const str = args.text;
    const buf = Buffer.from(str);
    await this.cloud.saveFile("text.txt", buf);
    const buf2 = await this.cloud.loadFile("text.txt");
    if (buf2 === undefined) return "Error loading file";
    const str2 = buf2.toString();
    if (str === str2) return "Files test is passed";
    else {
      console.log("Files are different", { str2, buf2 });
      return "Files are different";
    }
  }

  private async encrypt(args: {
    contractAddress: string;
    text: string;
  }): Promise<string> {
    console.log("encrypt", args);
    const { text, contractAddress } = args;
    if (text === undefined) throw new Error("args.text is undefined");
    if (contractAddress === undefined)
      throw new Error("args.contractAddress is undefined");
    return (
      (await this.cloud.encrypt({ data: text, context: contractAddress })) ??
      "Error encrypting"
    );
  }

  private async decrypt(args: {
    contractAddress: string;
    text: string;
  }): Promise<string> {
    console.log("decrypt", args);
    const { text, contractAddress } = args;
    if (text === undefined) throw new Error("args.text is undefined");
    if (contractAddress === undefined)
      throw new Error("args.contractAddress is undefined");
    return (
      (await this.cloud.decrypt({ data: text, context: contractAddress })) ??
      "Error decrypting"
    );
  }

  private async sendTx(args: {
    proof?: string;
    addValue?: string;
    isMany: boolean;
    contractAddress: string;
  }): Promise<string> {
    if (args.isMany === undefined) throw new Error("args.isMany is undefined");
    const isMany = args.isMany as boolean;
    console.log("isMany:", isMany);
    if (isMany) {
      if (args.proof === undefined) throw new Error("args.proof is undefined");
    } else {
      if (args.addValue === undefined)
        throw new Error("args.addValue is undefined");
    }

    const privateKey = PrivateKey.random();
    const address = privateKey.toPublicKey();
    console.log("Address", address.toBase58());
    const contractAddress = PublicKey.fromBase58(args.contractAddress);
    const zkApp = new AddContract(contractAddress);

    console.log(`Sending tx...`);
    console.time("prepared tx");
    const memo = isMany ? "many" : "one";

    const deployerKeyPair = await this.cloud.getDeployer();
    if (deployerKeyPair === undefined)
      throw new Error("deployerKeyPair is undefined");
    const deployer = PrivateKey.fromBase58(deployerKeyPair.privateKey);
    console.log("cloud deployer:", deployer.toBase58());
    if (deployer === undefined) throw new Error("deployer is undefined");
    const sender = deployer.toPublicKey();

    await fetchMinaAccount({
      publicKey: contractAddress,
      force: true,
    });
    await fetchMinaAccount({
      publicKey: sender,
      force: true,
    });

    console.log("sender:", sender.toBase58());
    console.log("Sender balance:", await accountBalanceMina(sender));
    await this.compile();

    let tx;
    let value: string;
    let limit: string;
    if (isMany) {
      const proof = (await AddProgramProof.fromJSON(
        JSON.parse(args.proof!) as JsonProof
      )) as AddProgramProof;
      value = proof.publicOutput.value.toJSON();
      limit = proof.publicOutput.limit.toJSON();

      tx = await Mina.transaction(
        { sender, fee: await fee(), memo },
        async () => {
          AccountUpdate.fundNewAccount(sender);
          await zkApp.addMany(address, proof);
        }
      );
    } else {
      const addValue = AddValue.fromFields(
        deserializeFields(args.addValue!)
      ) as AddValue;
      console.log("addValue:", {
        value: addValue.value.toJSON(),
        limit: addValue.limit.toJSON(),
      });
      value = addValue.value.toJSON();
      limit = addValue.limit.toJSON();

      tx = await Mina.transaction(
        { sender, fee: await fee(), memo },
        async () => {
          AccountUpdate.fundNewAccount(sender);
          await zkApp.addOne(address, addValue);
        }
      );
    }
    if (tx === undefined) throw new Error("tx is undefined");
    await tx.prove();

    tx.sign([deployer, privateKey]);
    try {
      await tx.prove();
      console.timeEnd("prepared tx");
      let txSent;
      let sent = false;
      while (!sent) {
        txSent = await tx.safeSend();
        if (txSent.status == "pending") {
          sent = true;
          console.log(
            `${memo} tx sent: hash: ${txSent.hash} status: ${txSent.status}`
          );
        } else if (this.cloud.chain === "zeko") {
          console.log("Retrying Zeko tx");
          await sleep(10000);
        } else {
          console.log(
            `${memo} tx NOT sent: hash: ${txSent?.hash} status: ${txSent?.status}`
          );
          return "Error sending transaction";
        }
      }
      if (this.cloud.isLocalCloud && txSent?.status === "pending") {
        const txIncluded = await txSent.safeWait();
        console.log(
          `one tx included into block: hash: ${txIncluded.hash} status: ${txIncluded.status}`
        );
        await this.cloud.releaseDeployer({
          publicKey: deployerKeyPair.publicKey,
          txsHashes: [txIncluded.hash],
        });
        return txIncluded.hash;
      }
      await this.cloud.releaseDeployer({
        publicKey: deployerKeyPair.publicKey,
        txsHashes: txSent?.hash ? [txSent.hash] : [],
      });
      if (txSent?.hash)
        this.cloud.publishTransactionMetadata({
          txId: txSent?.hash,
          metadata: {
            method: isMany ? "addMany" : "addOne",
            value,
            limit,
          } as any,
        });
      return txSent?.hash ?? "Error sending transaction";
    } catch (error) {
      console.error("Error sending transaction", error);
      return "Error sending transaction";
    }
  }
}

```

